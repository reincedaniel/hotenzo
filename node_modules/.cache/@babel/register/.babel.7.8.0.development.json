{
  "{\"sourceRoot\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\\\\src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\",\"filename\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\\\\src\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0",
      "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _consign = _interopRequireDefault(require(\"consign\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar app = (0, _express[\"default\"])(); //app.options('*', cors())\n\napp.use(function (req, res, next) {\n  res.header('Access-Control-Allow-Origin', '*');\n  res.header('Access-Control-Allow-Methods', '*');\n  res.header('Access-Control-Allow-Headers', '*');\n  next();\n});\napp.use(_bodyParser[\"default\"].json());\napp.use(_bodyParser[\"default\"].urlencoded({\n  extended: false\n}));\n/* app.use(express.json())\r\napp.use(bodyParser.urlencoded({ extended: true })) */\n\n(0, _consign[\"default\"])({\n  cwd: __dirname\n}).include('libs/middlewares.js').then('routes').then('libs/boot.js').into(app);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImFwcCIsInVzZSIsInJlcSIsInJlcyIsIm5leHQiLCJoZWFkZXIiLCJib2R5UGFyc2VyIiwianNvbiIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsImN3ZCIsIl9fZGlybmFtZSIsImluY2x1ZGUiLCJ0aGVuIiwiaW50byJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7QUFDQTs7OztBQUVBLElBQU1BLEdBQUcsR0FBRywwQkFBWixDLENBRUE7O0FBQ0FBLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxJQUFYLEVBQW9CO0FBQ3hCRCxFQUFBQSxHQUFHLENBQUNFLE1BQUosQ0FBVyw2QkFBWCxFQUEwQyxHQUExQztBQUNBRixFQUFBQSxHQUFHLENBQUNFLE1BQUosQ0FBVyw4QkFBWCxFQUEyQyxHQUEzQztBQUNBRixFQUFBQSxHQUFHLENBQUNFLE1BQUosQ0FBVyw4QkFBWCxFQUEyQyxHQUEzQztBQUVBRCxFQUFBQSxJQUFJO0FBQ1AsQ0FORDtBQVFBSixHQUFHLENBQUNDLEdBQUosQ0FBUUssdUJBQVdDLElBQVgsRUFBUjtBQUNBUCxHQUFHLENBQUNDLEdBQUosQ0FBUUssdUJBQVdFLFVBQVgsQ0FBc0I7QUFBRUMsRUFBQUEsUUFBUSxFQUFFO0FBQVosQ0FBdEIsQ0FBUjtBQUVBOzs7QUFFQSx5QkFBUTtBQUNKQyxFQUFBQSxHQUFHLEVBQUVDO0FBREQsQ0FBUixFQUdLQyxPQUhMLENBR2EscUJBSGIsRUFJS0MsSUFKTCxDQUlVLFFBSlYsRUFLS0EsSUFMTCxDQUtVLGNBTFYsRUFNS0MsSUFOTCxDQU1VZCxHQU5WIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcYXN1c1xcRG9jdW1lbnRzXFxLcm93XFxBenVsdWxhIC0gQm95a2FcXGF6dVZlbmRhcyAxLjBcXHNyYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnXHJcbmltcG9ydCBjb25zaWduIGZyb20gJ2NvbnNpZ24nXHJcbmltcG9ydCBib2R5UGFyc2VyIGZyb20gJ2JvZHktcGFyc2VyJ1xyXG5cclxuY29uc3QgYXBwID0gZXhwcmVzcygpXHJcblxyXG4vL2FwcC5vcHRpb25zKCcqJywgY29ycygpKVxyXG5hcHAudXNlKChyZXEsIHJlcywgbmV4dCkgPT4ge1xyXG4gICAgcmVzLmhlYWRlcignQWNjZXNzLUNvbnRyb2wtQWxsb3ctT3JpZ2luJywgJyonKVxyXG4gICAgcmVzLmhlYWRlcignQWNjZXNzLUNvbnRyb2wtQWxsb3ctTWV0aG9kcycsICcqJylcclxuICAgIHJlcy5oZWFkZXIoJ0FjY2Vzcy1Db250cm9sLUFsbG93LUhlYWRlcnMnLCAnKicpXHJcblxyXG4gICAgbmV4dCgpXHJcbn0pXHJcblxyXG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKVxyXG5hcHAudXNlKGJvZHlQYXJzZXIudXJsZW5jb2RlZCh7IGV4dGVuZGVkOiBmYWxzZSB9KSlcclxuXHJcbi8qIGFwcC51c2UoZXhwcmVzcy5qc29uKCkpXHJcbmFwcC51c2UoYm9keVBhcnNlci51cmxlbmNvZGVkKHsgZXh0ZW5kZWQ6IHRydWUgfSkpICovXHJcbmNvbnNpZ24oe1xyXG4gICAgY3dkOiBfX2Rpcm5hbWVcclxufSlcclxuICAgIC5pbmNsdWRlKCdsaWJzL21pZGRsZXdhcmVzLmpzJylcclxuICAgIC50aGVuKCdyb3V0ZXMnKVxyXG4gICAgLnRoZW4oJ2xpYnMvYm9vdC5qcycpXHJcbiAgICAuaW50byhhcHApXHJcblxyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "app",
        "use",
        "req",
        "res",
        "next",
        "header",
        "bodyParser",
        "json",
        "urlencoded",
        "extended",
        "cwd",
        "__dirname",
        "include",
        "then",
        "into"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;;;AAEA,IAAMA,GAAG,GAAG,0BAAZ,C,CAEA;;AACAA,GAAG,CAACC,GAAJ,CAAQ,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACxBD,EAAAA,GAAG,CAACE,MAAJ,CAAW,6BAAX,EAA0C,GAA1C;AACAF,EAAAA,GAAG,CAACE,MAAJ,CAAW,8BAAX,EAA2C,GAA3C;AACAF,EAAAA,GAAG,CAACE,MAAJ,CAAW,8BAAX,EAA2C,GAA3C;AAEAD,EAAAA,IAAI;AACP,CAND;AAQAJ,GAAG,CAACC,GAAJ,CAAQK,uBAAWC,IAAX,EAAR;AACAP,GAAG,CAACC,GAAJ,CAAQK,uBAAWE,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;AAEA;;;AAEA,yBAAQ;AACJC,EAAAA,GAAG,EAAEC;AADD,CAAR,EAGKC,OAHL,CAGa,qBAHb,EAIKC,IAJL,CAIU,QAJV,EAKKA,IALL,CAKU,cALV,EAMKC,IANL,CAMUd,GANV",
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src",
      "sourcesContent": [
        "import express from 'express'\r\nimport consign from 'consign'\r\nimport bodyParser from 'body-parser'\r\n\r\nconst app = express()\r\n\r\n//app.options('*', cors())\r\napp.use((req, res, next) => {\r\n    res.header('Access-Control-Allow-Origin', '*')\r\n    res.header('Access-Control-Allow-Methods', '*')\r\n    res.header('Access-Control-Allow-Headers', '*')\r\n\r\n    next()\r\n})\r\n\r\napp.use(bodyParser.json())\r\napp.use(bodyParser.urlencoded({ extended: false }))\r\n\r\n/* app.use(express.json())\r\napp.use(bodyParser.urlencoded({ extended: true })) */\r\nconsign({\r\n    cwd: __dirname\r\n})\r\n    .include('libs/middlewares.js')\r\n    .then('routes')\r\n    .then('libs/boot.js')\r\n    .into(app)\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1579873690936
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\\\\src\\\\libs\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\",\"filename\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\\\\src\\\\libs\\\\middlewares.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\libs",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0",
      "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\libs\\middlewares.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\libs\\middlewares.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\libs\\middlewares.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\libs",
        "sourceFileName": "middlewares.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (app) {\n  // Settings\n  app.set('port', process.env.PORT || 4000);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1pZGRsZXdhcmVzLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJhcHAiLCJzZXQiLCJwcm9jZXNzIiwiZW52IiwiUE9SVCJdLCJtYXBwaW5ncyI6Ijs7QUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUFDLEdBQUcsRUFBSTtBQUNwQjtBQUNBQSxFQUFBQSxHQUFHLENBQUNDLEdBQUosQ0FBUSxNQUFSLEVBQWdCQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsSUFBWixJQUFvQixJQUFwQztBQUNILENBSEQiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxhc3VzXFxEb2N1bWVudHNcXEtyb3dcXEF6dWx1bGEgLSBCb3lrYVxcYXp1VmVuZGFzIDEuMFxcc3JjXFxsaWJzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBhcHAgPT4ge1xyXG4gICAgLy8gU2V0dGluZ3NcclxuICAgIGFwcC5zZXQoJ3BvcnQnLCBwcm9jZXNzLmVudi5QT1JUIHx8IDQwMDApXHJcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "middlewares.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "set",
        "process",
        "env",
        "PORT"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAAAC,GAAG,EAAI;AACpB;AACAA,EAAAA,GAAG,CAACC,GAAJ,CAAQ,MAAR,EAAgBC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAApC;AACH,CAHD",
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\libs",
      "sourcesContent": [
        "module.exports = app => {\r\n    // Settings\r\n    app.set('port', process.env.PORT || 4000)\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1578932337231
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\\\\src\\\\libs\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\",\"filename\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\\\\src\\\\libs\\\\boot.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\libs",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0",
      "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\libs\\boot.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\libs\\boot.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\libs\\boot.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\libs",
        "sourceFileName": "boot.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (app) {\n  app.listen(app.get('port'), function () {\n    console.log('Server on PORT', app.get('port'));\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJvb3QuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImFwcCIsImxpc3RlbiIsImdldCIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiI7O0FBQUFBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixVQUFBQyxHQUFHLEVBQUU7QUFDbEJBLEVBQUFBLEdBQUcsQ0FBQ0MsTUFBSixDQUFXRCxHQUFHLENBQUNFLEdBQUosQ0FBUSxNQUFSLENBQVgsRUFBNEIsWUFBTTtBQUNsQ0MsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksZ0JBQVosRUFBOEJKLEdBQUcsQ0FBQ0UsR0FBSixDQUFRLE1BQVIsQ0FBOUI7QUFDSCxHQUZHO0FBR0gsQ0FKRCIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGFzdXNcXERvY3VtZW50c1xcS3Jvd1xcQXp1bHVsYSAtIEJveWthXFxhenVWZW5kYXMgMS4wXFxzcmNcXGxpYnMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGFwcD0+e1xyXG4gICAgYXBwLmxpc3RlbihhcHAuZ2V0KCdwb3J0JyksICgpID0+IHtcclxuICAgIGNvbnNvbGUubG9nKCdTZXJ2ZXIgb24gUE9SVCcsIGFwcC5nZXQoJ3BvcnQnKSlcclxufSlcclxufVxyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "boot.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "listen",
        "get",
        "console",
        "log"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAAAC,GAAG,EAAE;AAClBA,EAAAA,GAAG,CAACC,MAAJ,CAAWD,GAAG,CAACE,GAAJ,CAAQ,MAAR,CAAX,EAA4B,YAAM;AAClCC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BJ,GAAG,CAACE,GAAJ,CAAQ,MAAR,CAA9B;AACH,GAFG;AAGH,CAJD",
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\libs",
      "sourcesContent": [
        "module.exports = app=>{\r\n    app.listen(app.get('port'), () => {\r\n    console.log('Server on PORT', app.get('port'))\r\n})\r\n}\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1578932231770
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\",\"filename\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\\\\src\\\\routes\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0",
      "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes\\index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _models = _interopRequireDefault(require(\"../models\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.exports = function (app) {\n  app.get('/api', function (req, res) {\n    _models[\"default\"].User.findByPk(1).then(function (users) {\n      res.json({\n        users: users\n      });\n    });\n  });\n};\n/**\r\n * \r\n * \"development\": {\r\n    \"username\": \"root\",\r\n    \"password\": \"1212\",\r\n    \"database\": \"database_development\",\r\n    \"host\": \"127.0.0.1\",\r\n    \"dialect\": \"mysql\",\r\n    \"operatorsAliases\": false\r\n  }\r\n */\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJhcHAiLCJnZXQiLCJyZXEiLCJyZXMiLCJtb2RlbHMiLCJVc2VyIiwiZmluZEJ5UGsiLCJ0aGVuIiwidXNlcnMiLCJqc29uIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7O0FBRUFBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixVQUFBQyxHQUFHLEVBQUk7QUFDcEJBLEVBQUFBLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLE1BQVIsRUFBZ0IsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFFMUJDLHVCQUFPQyxJQUFQLENBQVlDLFFBQVosQ0FBcUIsQ0FBckIsRUFBd0JDLElBQXhCLENBQTZCLFVBQUNDLEtBQUQsRUFBUztBQUVsQ0wsTUFBQUEsR0FBRyxDQUFDTSxJQUFKLENBQVM7QUFDTEQsUUFBQUEsS0FBSyxFQUFMQTtBQURLLE9BQVQ7QUFHSCxLQUxEO0FBT0gsR0FURDtBQVVILENBWEQ7QUFhQSIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGFzdXNcXERvY3VtZW50c1xcS3Jvd1xcQXp1bHVsYSAtIEJveWthXFxhenVWZW5kYXMgMS4wXFxzcmNcXHJvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb2RlbHMgZnJvbSAnLi4vbW9kZWxzJ1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBhcHAgPT4ge1xyXG4gICAgYXBwLmdldCgnL2FwaScsIChyZXEsIHJlcykgPT4ge1xyXG5cclxuICAgICAgICBtb2RlbHMuVXNlci5maW5kQnlQaygxKS50aGVuKCh1c2Vycyk9PntcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIHJlcy5qc29uKHtcclxuICAgICAgICAgICAgICAgIHVzZXJzXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfSlcclxuICAgICAgICBcclxuICAgIH0pXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBcclxuICogXCJkZXZlbG9wbWVudFwiOiB7XHJcbiAgICBcInVzZXJuYW1lXCI6IFwicm9vdFwiLFxyXG4gICAgXCJwYXNzd29yZFwiOiBcIjEyMTJcIixcclxuICAgIFwiZGF0YWJhc2VcIjogXCJkYXRhYmFzZV9kZXZlbG9wbWVudFwiLFxyXG4gICAgXCJob3N0XCI6IFwiMTI3LjAuMC4xXCIsXHJcbiAgICBcImRpYWxlY3RcIjogXCJteXNxbFwiLFxyXG4gICAgXCJvcGVyYXRvcnNBbGlhc2VzXCI6IGZhbHNlXHJcbiAgfVxyXG4gKi8iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "get",
        "req",
        "res",
        "models",
        "User",
        "findByPk",
        "then",
        "users",
        "json"
      ],
      "mappings": ";;AAAA;;;;AAEAA,MAAM,CAACC,OAAP,GAAiB,UAAAC,GAAG,EAAI;AACpBA,EAAAA,GAAG,CAACC,GAAJ,CAAQ,MAAR,EAAgB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAE1BC,uBAAOC,IAAP,CAAYC,QAAZ,CAAqB,CAArB,EAAwBC,IAAxB,CAA6B,UAACC,KAAD,EAAS;AAElCL,MAAAA,GAAG,CAACM,IAAJ,CAAS;AACLD,QAAAA,KAAK,EAALA;AADK,OAAT;AAGH,KALD;AAOH,GATD;AAUH,CAXD;AAaA",
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes",
      "sourcesContent": [
        "import models from '../models'\r\n\r\nmodule.exports = app => {\r\n    app.get('/api', (req, res) => {\r\n\r\n        models.User.findByPk(1).then((users)=>{\r\n            \r\n            res.json({\r\n                users\r\n            })\r\n        })\r\n        \r\n    })\r\n}\r\n\r\n/**\r\n * \r\n * \"development\": {\r\n    \"username\": \"root\",\r\n    \"password\": \"1212\",\r\n    \"database\": \"database_development\",\r\n    \"host\": \"127.0.0.1\",\r\n    \"dialect\": \"mysql\",\r\n    \"operatorsAliases\": false\r\n  }\r\n */"
      ]
    },
    "sourceType": "script",
    "mtime": 1578965545318
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\",\"filename\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\\\\src\\\\routes\\\\users.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0",
      "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes\\users.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes\\users.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes\\users.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes",
        "sourceFileName": "users.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _bcrypt = _interopRequireDefault(require(\"bcrypt\"));\n\nvar _jwt = _interopRequireDefault(require(\"../utils/jwt.util\"));\n\nvar _models = _interopRequireDefault(require(\"../models\"));\n\nvar _verifyToken = _interopRequireDefault(require(\"../utils/verifyToken\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.exports = function (app) {\n  app.get('/api/token_life', function (req, res) {\n    var headerAuth = req.headers['authorization'];\n\n    var userId = _jwt[\"default\"].getUserId(headerAuth);\n\n    if (userId < 0) return res.json({\n      'error': 'Wrong Token',\n      'code': 200,\n      'access': false\n    });else return res.json({\n      'code': 1,\n      'access': true\n    });\n  }); // List USER V\n\n  app.get('/api/users', _verifyToken[\"default\"], function (req, res) {\n    _models[\"default\"].User.findAll({\n      include: [_models[\"default\"].Order]\n    }).then(function (users) {\n      res.json({\n        users: users\n      });\n    });\n  }), function checkUser(id, username) {\n    _models[\"default\"].User.findOne({\n      attributes: [\"id\", \"username\"],\n      where: {\n        username: username,\n        id: id\n      }\n    }).then(function (userFound) {\n      if (userFound) return true;else return false;\n    })[\"catch\"](function (err) {\n      return false;\n    });\n  }; // REGISTER USER V\n\n  app.post('/api/users', _verifyToken[\"default\"], function (req, res) {\n    // Params\n    var User = req.body;\n    if (User.email == null || User.username == null || User.password == null) return res.json({\n      'error': 'Missing parameters',\n      'code': 10\n    }); // Verify if exist into models.users\n\n    _models[\"default\"].User.findOne({\n      attributes: [\"username\"],\n      where: {\n        username: User.username\n      }\n    }).then(function (userFound) {\n      if (!userFound) {\n        _bcrypt[\"default\"].hash(User.password, 5, function (err, bcryptedPassword) {\n          var newUser = _models[\"default\"].User.create({\n            email: User.email,\n            username: User.username,\n            status: User.status,\n            password: bcryptedPassword,\n            isAdmin: User.isAdmin,\n            info: User.info\n          }).then(function (users) {\n            return res.json({\n              users: users,\n              'code': 1\n            });\n          })[\"catch\"](function (err) {\n            return res.json({\n              'error': 'Cannot add user',\n              'code': 0\n            });\n          });\n        });\n      } else {\n        return res.json({\n          'error': 'User already exist',\n          'code': 11\n        });\n      }\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify user',\n        err: err,\n        'code': 0\n      });\n    });\n  }); // Delete user\n\n  app[\"delete\"]('/api/users/:id', _verifyToken[\"default\"], function (req, res) {\n    // Params\n    var user = {\n      id: req.params.id\n    }; // Verify if exist into models.user\n\n    _models[\"default\"].User.findOne({\n      attributes: [\"id\"],\n      where: {\n        id: user.id\n      }\n    }).then(function (userFound2) {\n      userFound2.destroy(user).then(function () {\n        return res.json({\n          'status': 'success',\n          'code': 1\n        });\n      })[\"catch\"](function (err) {\n        return res.json({\n          'error': 'Cannot Delete user',\n          'code': 0\n        });\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify user',\n        err: err,\n        'code': 0\n      });\n    });\n  }); // UPDATE USER V\n\n  app.put('/api/users/:id', _verifyToken[\"default\"], function (req, res) {\n    // Params\n    var User = req.body; // Verify if exist into models.users\n\n    _models[\"default\"].User.findOne({\n      attributes: [\"id\"],\n      where: {\n        id: req.params.id\n      }\n    }).then(function (userFound2) {\n      var newUser = userFound2.update(User).then(function (users) {\n        return res.json({\n          users: users,\n          'code': 1\n        });\n      })[\"catch\"](function (err) {\n        return res.json({\n          'error': 'Cannot Update user',\n          'code': 0\n        });\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify user',\n        err: err,\n        'code': 0\n      });\n    });\n  }); // LOGIN V\n\n  app.post('/api/login', function (req, res) {\n    var User = {\n      username: req.body.username,\n      password: req.body.password\n    };\n\n    if (User.username == null || User.password == null) {\n      return res.json({\n        'error': 'missing parameters',\n        'code': 10\n      });\n    } // Verify\n\n\n    _models[\"default\"].User.findOne({\n      where: {\n        username: User.username\n      }\n    }).then(function (userFound) {\n      if (userFound) {\n        _bcrypt[\"default\"].compare(User.password, userFound.password, function (errBycrypt, resBycrypt) {\n          if (resBycrypt) {\n            return res.json({\n              'users': userFound,\n              'token': _jwt[\"default\"].generateTokenForUser(userFound),\n              'code': 12\n            });\n          } else {\n            return res.json({\n              'error': 'Invalid password',\n              'code': 111\n            });\n          }\n        });\n      } else {\n        return res.json({\n          'error': 'User does not exist',\n          'code': 110\n        });\n      }\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify user',\n        err: err,\n        'code': 0\n      });\n    });\n  }); // Get user profile V\n\n  app.get('/api/users/profile/:id', _verifyToken[\"default\"], function (req, res) {\n    var headerAuth = req.headers['authorization'];\n\n    _models[\"default\"].User.findOne({\n      attributes: ['id', 'email', 'username', 'info', 'isAdmin'],\n      where: {\n        id: req.params.id\n      }\n    }).then(function (users) {\n      if (users) {\n        return res.json({\n          users: users,\n          'code': 1\n        });\n      } else {\n        return res.json({\n          'error': 'User does not exist',\n          'code': 110\n        });\n      }\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Cannot fetch user',\n        'code': 0\n      });\n    });\n  }); // Update password User V\n\n  app.put('/api/users/profile/:id', _verifyToken[\"default\"], function (req, res) {\n    var passwordOld = req.body.passwordOld;\n    var passwordNew = req.body.passwordNew;\n\n    _models[\"default\"].User.findOne({\n      where: {\n        id: req.params.id\n      }\n    }).then(function (U) {\n      _bcrypt[\"default\"].compare(passwordOld, U.password, function (errBycrypt, resBycrypt) {\n        if (resBycrypt) {\n          _bcrypt[\"default\"].hash(passwordNew, 5, function (err, bcryptedPassword) {\n            var newUser = U.update({\n              password: bcryptedPassword\n            }).then(function (users) {\n              return res.json({\n                users: users,\n                'code': 1\n              });\n            })[\"catch\"](function (err) {\n              return res.json({\n                'error': 'Cannot add user',\n                'code': 0\n              });\n            });\n          });\n        } else {\n          return res.json({\n            'error': 'Old password invalid',\n            'code': 111\n          });\n        }\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify user',\n        err: err,\n        'code': 0\n      });\n    });\n  }); // Update password UserADMIN\n\n  app.put('/api/users/password', _verifyToken[\"default\"], function (req, res) {\n    var userId = req.body.idUserAdmin;\n    var idUserNormal = req.body.idUserNormal;\n    var passwordNew = '123456';\n\n    _models[\"default\"].User.findOne({\n      where: {\n        id: userId\n      }\n    }).then(function (UX) {\n      _models[\"default\"].User.findOne({\n        where: {\n          id: idUserNormal\n        }\n      }).then(function (U) {\n        if (UX.isAdmin == true) {\n          _bcrypt[\"default\"].hash(passwordNew, 5, function (err, bcryptedPassword) {\n            U.update({\n              password: bcryptedPassword\n            }).then(function (users) {\n              return res.json({\n                users: users,\n                'code': 1\n              });\n            })[\"catch\"](function (err) {\n              return res.json({\n                'error': 'Cannot Update password user',\n                'code': 0\n              });\n            });\n          });\n        } else {\n          return res.json({\n            'error': 'Only admin',\n            err: err,\n            'code': 333\n          });\n        }\n      })[\"catch\"](function (err) {\n        return res.json({\n          'error': 'Unable to verify user',\n          err: err,\n          'code': 0\n        });\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify user!',\n        err: err,\n        'code': 0\n      });\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "users.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "get",
        "req",
        "res",
        "headerAuth",
        "headers",
        "userId",
        "jwtUtil",
        "getUserId",
        "json",
        "verifyToken",
        "models",
        "User",
        "findAll",
        "include",
        "Order",
        "then",
        "users",
        "checkUser",
        "id",
        "username",
        "findOne",
        "attributes",
        "where",
        "userFound",
        "err",
        "post",
        "body",
        "email",
        "password",
        "bcrypt",
        "hash",
        "bcryptedPassword",
        "newUser",
        "create",
        "status",
        "isAdmin",
        "info",
        "user",
        "params",
        "userFound2",
        "destroy",
        "put",
        "update",
        "compare",
        "errBycrypt",
        "resBycrypt",
        "generateTokenForUser",
        "passwordOld",
        "passwordNew",
        "U",
        "idUserAdmin",
        "idUserNormal",
        "UX"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AAEA;;;;AAGAA,MAAM,CAACC,OAAP,GAAiB,UAAAC,GAAG,EAAI;AAEpBA,EAAAA,GAAG,CAACC,GAAJ,CAAQ,iBAAR,EAA2B,UAACC,GAAD,EAAMC,GAAN,EAAY;AACnC,QAAIC,UAAU,GAAGF,GAAG,CAACG,OAAJ,CAAY,eAAZ,CAAjB;;AACA,QAAIC,MAAM,GAAGC,gBAAQC,SAAR,CAAkBJ,UAAlB,CAAb;;AAEA,QAAIE,MAAM,GAAG,CAAb,EACI,OAAOH,GAAG,CAACM,IAAJ,CAAS;AAAE,eAAS,aAAX;AAA0B,cAAQ,GAAlC;AAAuC,gBAAU;AAAjD,KAAT,CAAP,CADJ,KAGI,OAAON,GAAG,CAACM,IAAJ,CAAS;AAAE,cAAQ,CAAV;AAAa,gBAAU;AAAvB,KAAT,CAAP;AACP,GARD,EAFoB,CAWpB;;AACAT,EAAAA,GAAG,CAACC,GAAJ,CAAQ,YAAR,EAAqBS,uBAArB,EAAkC,UAACR,GAAD,EAAMC,GAAN,EAAc;AAE5CQ,uBAAOC,IAAP,CAAYC,OAAZ,CAAoB;AAACC,MAAAA,OAAO,EAAE,CAACH,mBAAOI,KAAR;AAAV,KAApB,EAA+CC,IAA/C,CAAoD,UAACC,KAAD,EAAW;AAC3Dd,MAAAA,GAAG,CAACM,IAAJ,CAAS;AACLQ,QAAAA,KAAK,EAALA;AADK,OAAT;AAGH,KAJD;AAKH,GAPD,GAQI,SAASC,SAAT,CAAmBC,EAAnB,EAAuBC,QAAvB,EAAiC;AAC7BT,uBAAOC,IAAP,CAAYS,OAAZ,CAAoB;AAChBC,MAAAA,UAAU,EAAE,CAAC,IAAD,EAAO,UAAP,CADI;AAEhBC,MAAAA,KAAK,EAAE;AAAEH,QAAAA,QAAQ,EAAEA,QAAZ;AAAsBD,QAAAA,EAAE,EAAEA;AAA1B;AAFS,KAApB,EAIKH,IAJL,CAIU,UAACQ,SAAD,EAAe;AACjB,UAAIA,SAAJ,EACI,OAAO,IAAP,CADJ,KAGI,OAAO,KAAP;AACP,KATL,WAUW,UAACC,GAAD,EAAS;AACZ,aAAO,KAAP;AACH,KAZL;AAaH,GAtBL,CAZoB,CAmCpB;;AACAzB,EAAAA,GAAG,CAAC0B,IAAJ,CAAS,YAAT,EAAsBhB,uBAAtB,EAAmC,UAACR,GAAD,EAAMC,GAAN,EAAc;AAE7C;AACA,QAAIS,IAAI,GAAGV,GAAG,CAACyB,IAAf;AAEA,QAAIf,IAAI,CAACgB,KAAL,IAAc,IAAd,IAAsBhB,IAAI,CAACQ,QAAL,IAAiB,IAAvC,IAA+CR,IAAI,CAACiB,QAAL,IAAiB,IAApE,EACI,OAAO1B,GAAG,CAACM,IAAJ,CAAS;AAAE,eAAS,oBAAX;AAAiC,cAAQ;AAAzC,KAAT,CAAP,CANyC,CAO7C;;AACAE,uBAAOC,IAAP,CAAYS,OAAZ,CAAoB;AAChBC,MAAAA,UAAU,EAAE,CAAC,UAAD,CADI;AAEhBC,MAAAA,KAAK,EAAE;AAAEH,QAAAA,QAAQ,EAAER,IAAI,CAACQ;AAAjB;AAFS,KAApB,EAIKJ,IAJL,CAIU,UAACQ,SAAD,EAAe;AACjB,UAAI,CAACA,SAAL,EAAgB;AACZM,2BAAOC,IAAP,CAAYnB,IAAI,CAACiB,QAAjB,EAA2B,CAA3B,EAA8B,UAACJ,GAAD,EAAMO,gBAAN,EAA2B;AACrD,cAAIC,OAAO,GAAGtB,mBAAOC,IAAP,CAAYsB,MAAZ,CAAmB;AAC7BN,YAAAA,KAAK,EAAEhB,IAAI,CAACgB,KADiB;AAE7BR,YAAAA,QAAQ,EAAER,IAAI,CAACQ,QAFc;AAG7Be,YAAAA,MAAM,EAAEvB,IAAI,CAACuB,MAHgB;AAI7BN,YAAAA,QAAQ,EAAEG,gBAJmB;AAK7BI,YAAAA,OAAO,EAAExB,IAAI,CAACwB,OALe;AAM7BC,YAAAA,IAAI,EAAEzB,IAAI,CAACyB;AANkB,WAAnB,EAQTrB,IARS,CAQJ,UAACC,KAAD,EAAW;AACb,mBAAOd,GAAG,CAACM,IAAJ,CAAS;AAAEQ,cAAAA,KAAK,EAALA,KAAF;AAAS,sBAAQ;AAAjB,aAAT,CAAP;AACH,WAVS,WAWH,UAACQ,GAAD,EAAS;AACZ,mBAAOtB,GAAG,CAACM,IAAJ,CAAS;AAAE,uBAAS,iBAAX;AAA8B,sBAAQ;AAAtC,aAAT,CAAP;AACH,WAbS,CAAd;AAcH,SAfD;AAgBH,OAjBD,MAiBO;AACH,eAAON,GAAG,CAACM,IAAJ,CAAS;AAAE,mBAAS,oBAAX;AAAiC,kBAAQ;AAAzC,SAAT,CAAP;AACH;AAEJ,KA1BL,WA2BW,UAACgB,GAAD,EAAS;AACZ,aAAOtB,GAAG,CAACM,IAAJ,CAAS;AAAE,iBAAS,uBAAX;AAAoCgB,QAAAA,GAAG,EAAHA,GAApC;AAAyC,gBAAQ;AAAjD,OAAT,CAAP;AACH,KA7BL;AA8BH,GAtCD,EApCoB,CA4EpB;;AACAzB,EAAAA,GAAG,UAAH,CAAW,gBAAX,EAA4BU,uBAA5B,EAAyC,UAACR,GAAD,EAAMC,GAAN,EAAc;AAEnD;AACA,QAAImC,IAAI,GAAG;AAAEnB,MAAAA,EAAE,EAACjB,GAAG,CAACqC,MAAJ,CAAWpB;AAAhB,KAAX,CAHmD,CAKnD;;AAEAR,uBAAOC,IAAP,CAAYS,OAAZ,CAAoB;AAChBC,MAAAA,UAAU,EAAE,CAAC,IAAD,CADI;AAEhBC,MAAAA,KAAK,EAAE;AAAEJ,QAAAA,EAAE,EAAEmB,IAAI,CAACnB;AAAX;AAFS,KAApB,EAIKH,IAJL,CAIU,UAACwB,UAAD,EAAgB;AAClBA,MAAAA,UAAU,CAACC,OAAX,CAAmBH,IAAnB,EACKtB,IADL,CACU,YAAM;AACR,eAAOb,GAAG,CAACM,IAAJ,CAAS;AAAE,oBAAS,SAAX;AAAsB,kBAAQ;AAA9B,SAAT,CAAP;AACH,OAHL,WAIW,UAACgB,GAAD,EAAS;AACZ,eAAOtB,GAAG,CAACM,IAAJ,CAAS;AAAE,mBAAS,oBAAX;AAAiC,kBAAQ;AAAzC,SAAT,CAAP;AACH,OANL;AAQH,KAbL,WAcW,UAACgB,GAAD,EAAS;AACZ,aAAOtB,GAAG,CAACM,IAAJ,CAAS;AAAE,iBAAS,uBAAX;AAAoCgB,QAAAA,GAAG,EAAHA,GAApC;AAAyC,gBAAQ;AAAjD,OAAT,CAAP;AACH,KAhBL;AAkBH,GAzBD,EA7EoB,CAuGpB;;AACAzB,EAAAA,GAAG,CAAC0C,GAAJ,CAAQ,gBAAR,EAAyBhC,uBAAzB,EAAsC,UAACR,GAAD,EAAMC,GAAN,EAAc;AAEhD;AACA,QAAIS,IAAI,GAAGV,GAAG,CAACyB,IAAf,CAHgD,CAKhD;;AAEAhB,uBAAOC,IAAP,CAAYS,OAAZ,CAAoB;AAChBC,MAAAA,UAAU,EAAE,CAAC,IAAD,CADI;AAEhBC,MAAAA,KAAK,EAAE;AAAEJ,QAAAA,EAAE,EAAEjB,GAAG,CAACqC,MAAJ,CAAWpB;AAAjB;AAFS,KAApB,EAIKH,IAJL,CAIU,UAACwB,UAAD,EAAgB;AAClB,UAAIP,OAAO,GAAGO,UAAU,CAACG,MAAX,CAAkB/B,IAAlB,EACTI,IADS,CACJ,UAACC,KAAD,EAAW;AACb,eAAOd,GAAG,CAACM,IAAJ,CAAS;AAAEQ,UAAAA,KAAK,EAALA,KAAF;AAAS,kBAAQ;AAAjB,SAAT,CAAP;AACH,OAHS,WAIH,UAACQ,GAAD,EAAS;AACZ,eAAOtB,GAAG,CAACM,IAAJ,CAAS;AAAE,mBAAS,oBAAX;AAAiC,kBAAQ;AAAzC,SAAT,CAAP;AACH,OANS,CAAd;AAQH,KAbL,WAcW,UAACgB,GAAD,EAAS;AACZ,aAAOtB,GAAG,CAACM,IAAJ,CAAS;AAAE,iBAAS,uBAAX;AAAoCgB,QAAAA,GAAG,EAAHA,GAApC;AAAyC,gBAAQ;AAAjD,OAAT,CAAP;AACH,KAhBL;AAkBH,GAzBD,EAxGoB,CAkIpB;;AACAzB,EAAAA,GAAG,CAAC0B,IAAJ,CAAS,YAAT,EAAuB,UAACxB,GAAD,EAAMC,GAAN,EAAc;AACjC,QAAIS,IAAI,GAAG;AACPQ,MAAAA,QAAQ,EAAElB,GAAG,CAACyB,IAAJ,CAASP,QADZ;AAEPS,MAAAA,QAAQ,EAAE3B,GAAG,CAACyB,IAAJ,CAASE;AAFZ,KAAX;;AAKA,QAAIjB,IAAI,CAACQ,QAAL,IAAiB,IAAjB,IAAyBR,IAAI,CAACiB,QAAL,IAAiB,IAA9C,EAAoD;AAChD,aAAO1B,GAAG,CAACM,IAAJ,CAAS;AAAE,iBAAS,oBAAX;AAAiC,gBAAQ;AAAzC,OAAT,CAAP;AACH,KARgC,CAUjC;;;AAEAE,uBAAOC,IAAP,CAAYS,OAAZ,CAAoB;AAChBE,MAAAA,KAAK,EAAE;AAAEH,QAAAA,QAAQ,EAAER,IAAI,CAACQ;AAAjB;AADS,KAApB,EAGKJ,IAHL,CAGU,UAACQ,SAAD,EAAe;AACjB,UAAIA,SAAJ,EAAe;AACXM,2BAAOc,OAAP,CAAehC,IAAI,CAACiB,QAApB,EAA8BL,SAAS,CAACK,QAAxC,EAAkD,UAACgB,UAAD,EAAaC,UAAb,EAA4B;AAC1E,cAAIA,UAAJ,EAAgB;AACZ,mBAAO3C,GAAG,CAACM,IAAJ,CAAS;AAAE,uBAASe,SAAX;AAAsB,uBAASjB,gBAAQwC,oBAAR,CAA6BvB,SAA7B,CAA/B;AAAwE,sBAAQ;AAAhF,aAAT,CAAP;AACH,WAFD,MAEO;AACH,mBAAOrB,GAAG,CAACM,IAAJ,CAAS;AAAE,uBAAS,kBAAX;AAA+B,sBAAQ;AAAvC,aAAT,CAAP;AACH;AACJ,SAND;AAOH,OARD,MAQO;AACH,eAAON,GAAG,CAACM,IAAJ,CAAS;AAAE,mBAAS,qBAAX;AAAkC,kBAAQ;AAA1C,SAAT,CAAP;AACH;AACJ,KAfL,WAgBW,UAACgB,GAAD,EAAS;AACZ,aAAOtB,GAAG,CAACM,IAAJ,CAAS;AAAE,iBAAS,uBAAX;AAAoCgB,QAAAA,GAAG,EAAHA,GAApC;AAAyC,gBAAQ;AAAjD,OAAT,CAAP;AACH,KAlBL;AAmBH,GA/BD,EAnIoB,CAoKpB;;AACAzB,EAAAA,GAAG,CAACC,GAAJ,CAAQ,wBAAR,EAAiCS,uBAAjC,EAA8C,UAACR,GAAD,EAAMC,GAAN,EAAc;AACxD,QAAIC,UAAU,GAAGF,GAAG,CAACG,OAAJ,CAAY,eAAZ,CAAjB;;AAGAM,uBAAOC,IAAP,CAAYS,OAAZ,CAAoB;AAChBC,MAAAA,UAAU,EAAE,CAAC,IAAD,EAAO,OAAP,EAAgB,UAAhB,EAA4B,MAA5B,EAAoC,SAApC,CADI;AAEhBC,MAAAA,KAAK,EAAE;AAAEJ,QAAAA,EAAE,EAAEjB,GAAG,CAACqC,MAAJ,CAAWpB;AAAjB;AAFS,KAApB,EAIKH,IAJL,CAIU,UAACC,KAAD,EAAW;AACb,UAAIA,KAAJ,EAAW;AACP,eAAOd,GAAG,CAACM,IAAJ,CAAS;AAAEQ,UAAAA,KAAK,EAALA,KAAF;AAAS,kBAAQ;AAAjB,SAAT,CAAP;AACH,OAFD,MAEO;AACH,eAAOd,GAAG,CAACM,IAAJ,CAAS;AAAE,mBAAS,qBAAX;AAAkC,kBAAQ;AAA1C,SAAT,CAAP;AACH;AACJ,KAVL,WAWW,UAACgB,GAAD,EAAS;AACZ,aAAOtB,GAAG,CAACM,IAAJ,CAAS;AAAE,iBAAS,mBAAX;AAAgC,gBAAQ;AAAxC,OAAT,CAAP;AACH,KAbL;AAcH,GAlBD,EArKoB,CAyLpB;;AACAT,EAAAA,GAAG,CAAC0C,GAAJ,CAAQ,wBAAR,EAAiChC,uBAAjC,EAA8C,UAACR,GAAD,EAAMC,GAAN,EAAc;AACxD,QAAI6C,WAAW,GAAG9C,GAAG,CAACyB,IAAJ,CAASqB,WAA3B;AACA,QAAIC,WAAW,GAAG/C,GAAG,CAACyB,IAAJ,CAASsB,WAA3B;;AAGAtC,uBAAOC,IAAP,CAAYS,OAAZ,CAAoB;AAAEE,MAAAA,KAAK,EAAE;AAAEJ,QAAAA,EAAE,EAAEjB,GAAG,CAACqC,MAAJ,CAAWpB;AAAjB;AAAT,KAApB,EACKH,IADL,CACU,UAACkC,CAAD,EAAO;AAETpB,yBAAOc,OAAP,CAAeI,WAAf,EAA4BE,CAAC,CAACrB,QAA9B,EAAwC,UAACgB,UAAD,EAAaC,UAAb,EAA4B;AAChE,YAAIA,UAAJ,EAAgB;AACZhB,6BAAOC,IAAP,CAAYkB,WAAZ,EAAyB,CAAzB,EAA4B,UAACxB,GAAD,EAAMO,gBAAN,EAA2B;AACnD,gBAAIC,OAAO,GAAGiB,CAAC,CAACP,MAAF,CAAS;AAAEd,cAAAA,QAAQ,EAAEG;AAAZ,aAAT,EACThB,IADS,CACJ,UAACC,KAAD,EAAW;AACb,qBAAOd,GAAG,CAACM,IAAJ,CAAS;AAAEQ,gBAAAA,KAAK,EAALA,KAAF;AAAS,wBAAQ;AAAjB,eAAT,CAAP;AACH,aAHS,WAIH,UAACQ,GAAD,EAAS;AACZ,qBAAOtB,GAAG,CAACM,IAAJ,CAAS;AAAE,yBAAS,iBAAX;AAA8B,wBAAQ;AAAtC,eAAT,CAAP;AACH,aANS,CAAd;AAOH,WARD;AASH,SAVD,MAUO;AACH,iBAAON,GAAG,CAACM,IAAJ,CAAS;AAAE,qBAAS,sBAAX;AAAmC,oBAAQ;AAA3C,WAAT,CAAP;AACH;AACJ,OAdD;AAgBH,KAnBL,WAoBW,UAACgB,GAAD,EAAS;AACZ,aAAOtB,GAAG,CAACM,IAAJ,CAAS;AAAE,iBAAS,uBAAX;AAAoCgB,QAAAA,GAAG,EAAHA,GAApC;AAAyC,gBAAQ;AAAjD,OAAT,CAAP;AACH,KAtBL;AAwBH,GA7BD,EA1LoB,CAyNpB;;AACAzB,EAAAA,GAAG,CAAC0C,GAAJ,CAAQ,qBAAR,EAA8BhC,uBAA9B,EAA2C,UAACR,GAAD,EAAMC,GAAN,EAAc;AAErD,QAAIG,MAAM,GAAGJ,GAAG,CAACyB,IAAJ,CAASwB,WAAtB;AACA,QAAIC,YAAY,GAAGlD,GAAG,CAACyB,IAAJ,CAASyB,YAA5B;AACA,QAAIH,WAAW,GAAG,QAAlB;;AAGAtC,uBAAOC,IAAP,CAAYS,OAAZ,CAAoB;AAAEE,MAAAA,KAAK,EAAE;AAAEJ,QAAAA,EAAE,EAAEb;AAAN;AAAT,KAApB,EACKU,IADL,CACU,UAACqC,EAAD,EAAQ;AACV1C,yBAAOC,IAAP,CAAYS,OAAZ,CAAoB;AAAEE,QAAAA,KAAK,EAAE;AAAEJ,UAAAA,EAAE,EAAEiC;AAAN;AAAT,OAApB,EACKpC,IADL,CACU,UAACkC,CAAD,EAAO;AACT,YAAIG,EAAE,CAACjB,OAAH,IAAc,IAAlB,EAAwB;AACpBN,6BAAOC,IAAP,CAAYkB,WAAZ,EAAyB,CAAzB,EAA4B,UAACxB,GAAD,EAAMO,gBAAN,EAA2B;AAClDkB,YAAAA,CAAC,CAACP,MAAF,CAAS;AAAEd,cAAAA,QAAQ,EAAEG;AAAZ,aAAT,EACIhB,IADJ,CACS,UAACC,KAAD,EAAW;AACb,qBAAOd,GAAG,CAACM,IAAJ,CAAS;AAAEQ,gBAAAA,KAAK,EAALA,KAAF;AAAS,wBAAQ;AAAjB,eAAT,CAAP;AACH,aAHJ,WAIU,UAACQ,GAAD,EAAS;AACZ,qBAAOtB,GAAG,CAACM,IAAJ,CAAS;AAAE,yBAAS,6BAAX;AAA0C,wBAAQ;AAAlD,eAAT,CAAP;AACH,aANJ;AAOJ,WARD;AASH,SAVD,MAUO;AACH,iBAAON,GAAG,CAACM,IAAJ,CAAS;AAAE,qBAAS,YAAX;AAAyBgB,YAAAA,GAAG,EAAHA,GAAzB;AAA8B,oBAAQ;AAAtC,WAAT,CAAP;AACH;AACJ,OAfL,WAgBW,UAACA,GAAD,EAAS;AACZ,eAAOtB,GAAG,CAACM,IAAJ,CAAS;AAAE,mBAAS,uBAAX;AAAoCgB,UAAAA,GAAG,EAAHA,GAApC;AAAyC,kBAAQ;AAAjD,SAAT,CAAP;AACH,OAlBL;AAoBH,KAtBL,WAuBW,UAACA,GAAD,EAAS;AACZ,aAAOtB,GAAG,CAACM,IAAJ,CAAS;AAAE,iBAAS,wBAAX;AAAqCgB,QAAAA,GAAG,EAAHA,GAArC;AAA0C,gBAAQ;AAAlD,OAAT,CAAP;AACH,KAzBL;AA0BH,GAjCD;AAkCH,CA5PD",
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes",
      "sourcesContent": [
        "import bcrypt from 'bcrypt'\r\nimport jwtUtil from '../utils/jwt.util'\r\nimport models from '../models'\r\n\r\nimport verifyToken from '../utils/verifyToken'\r\n\r\n\r\nmodule.exports = app => {\r\n\r\n    app.get('/api/token_life', (req, res)=>{\r\n        var headerAuth = req.headers['authorization']\r\n        var userId = jwtUtil.getUserId(headerAuth)\r\n\r\n        if (userId < 0)\r\n            return res.json({ 'error': 'Wrong Token', 'code': 200, 'access': false })\r\n        else\r\n            return res.json({ 'code': 1, 'access': true })\r\n    })\r\n    // List USER V\r\n    app.get('/api/users',verifyToken, (req, res) => {\r\n\r\n        models.User.findAll({include: [models.Order]}).then((users) => {\r\n            res.json({\r\n                users\r\n            })\r\n        })\r\n    }),\r\n        function checkUser(id, username) {\r\n            models.User.findOne({\r\n                attributes: [\"id\", \"username\"],\r\n                where: { username: username, id: id }\r\n            })\r\n                .then((userFound) => {\r\n                    if (userFound)\r\n                        return true\r\n                    else\r\n                        return false\r\n                })\r\n                .catch((err) => {\r\n                    return false\r\n                })\r\n        }\r\n    // REGISTER USER V\r\n    app.post('/api/users',verifyToken, (req, res) => {\r\n        \r\n        // Params\r\n        var User = req.body\r\n\r\n        if (User.email == null || User.username == null || User.password == null)\r\n            return res.json({ 'error': 'Missing parameters', 'code': 10 })\r\n        // Verify if exist into models.users\r\n        models.User.findOne({\r\n            attributes: [\"username\"],\r\n            where: { username: User.username }\r\n        })\r\n            .then((userFound) => {\r\n                if (!userFound) {\r\n                    bcrypt.hash(User.password, 5, (err, bcryptedPassword) => {\r\n                        var newUser = models.User.create({\r\n                            email: User.email,\r\n                            username: User.username,\r\n                            status: User.status,\r\n                            password: bcryptedPassword,\r\n                            isAdmin: User.isAdmin,\r\n                            info: User.info\r\n                        })\r\n                            .then((users) => {\r\n                                return res.json({ users, 'code': 1 })\r\n                            })\r\n                            .catch((err) => {\r\n                                return res.json({ 'error': 'Cannot add user', 'code': 0 })\r\n                            })\r\n                    })\r\n                } else {\r\n                    return res.json({ 'error': 'User already exist', 'code': 11 })\r\n                }\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify user', err, 'code': 0 })\r\n            })\r\n    })\r\n\r\n    // Delete user\r\n    app.delete('/api/users/:id',verifyToken, (req, res) => {\r\n        \r\n        // Params\r\n        var user = { id:req.params.id}\r\n\r\n        // Verify if exist into models.user\r\n\r\n        models.User.findOne({\r\n            attributes: [\"id\"],\r\n            where: { id: user.id }\r\n        })\r\n            .then((userFound2) => {\r\n                userFound2.destroy(user)\r\n                    .then(() => {\r\n                        return res.json({ 'status':'success', 'code': 1 })\r\n                    })\r\n                    .catch((err) => {\r\n                        return res.json({ 'error': 'Cannot Delete user', 'code': 0 })\r\n                    })\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify user', err, 'code': 0 })\r\n            })\r\n\r\n    })\r\n    // UPDATE USER V\r\n    app.put('/api/users/:id',verifyToken, (req, res) => {\r\n        \r\n        // Params\r\n        var User = req.body\r\n\r\n        // Verify if exist into models.users\r\n\r\n        models.User.findOne({\r\n            attributes: [\"id\"],\r\n            where: { id: req.params.id }\r\n        })\r\n            .then((userFound2) => {\r\n                var newUser = userFound2.update(User)\r\n                    .then((users) => {\r\n                        return res.json({ users, 'code': 1 })\r\n                    })\r\n                    .catch((err) => {\r\n                        return res.json({ 'error': 'Cannot Update user', 'code': 0 })\r\n                    })\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify user', err, 'code': 0 })\r\n            })\r\n\r\n    })\r\n    // LOGIN V\r\n    app.post('/api/login', (req, res) => {\r\n        var User = {\r\n            username: req.body.username,\r\n            password: req.body.password\r\n        }\r\n\r\n        if (User.username == null || User.password == null) {\r\n            return res.json({ 'error': 'missing parameters', 'code': 10 })\r\n        }\r\n\r\n        // Verify\r\n\r\n        models.User.findOne({\r\n            where: { username: User.username }\r\n        })\r\n            .then((userFound) => {\r\n                if (userFound) {\r\n                    bcrypt.compare(User.password, userFound.password, (errBycrypt, resBycrypt) => {\r\n                        if (resBycrypt) {\r\n                            return res.json({ 'users': userFound, 'token': jwtUtil.generateTokenForUser(userFound), 'code': 12 })\r\n                        } else {\r\n                            return res.json({ 'error': 'Invalid password', 'code': 111 })\r\n                        }\r\n                    })\r\n                } else {\r\n                    return res.json({ 'error': 'User does not exist', 'code': 110 })\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify user', err, 'code': 0 })\r\n            })\r\n    })\r\n\r\n    // Get user profile V\r\n    app.get('/api/users/profile/:id',verifyToken, (req, res) => {\r\n        var headerAuth = req.headers['authorization']\r\n\r\n\r\n        models.User.findOne({\r\n            attributes: ['id', 'email', 'username', 'info', 'isAdmin'],\r\n            where: { id: req.params.id }\r\n        })\r\n            .then((users) => {\r\n                if (users) {\r\n                    return res.json({ users, 'code': 1 })\r\n                } else {\r\n                    return res.json({ 'error': 'User does not exist', 'code': 110 })\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Cannot fetch user', 'code': 0 })\r\n            })\r\n    })\r\n\r\n    // Update password User V\r\n    app.put('/api/users/profile/:id',verifyToken, (req, res) => {\r\n        var passwordOld = req.body.passwordOld\r\n        var passwordNew = req.body.passwordNew\r\n\r\n\r\n        models.User.findOne({ where: { id: req.params.id } })\r\n            .then((U) => {\r\n\r\n                bcrypt.compare(passwordOld, U.password, (errBycrypt, resBycrypt) => {\r\n                    if (resBycrypt) {\r\n                        bcrypt.hash(passwordNew, 5, (err, bcryptedPassword) => {\r\n                            var newUser = U.update({ password: bcryptedPassword })\r\n                                .then((users) => {\r\n                                    return res.json({ users, 'code': 1 })\r\n                                })\r\n                                .catch((err) => {\r\n                                    return res.json({ 'error': 'Cannot add user', 'code': 0 })\r\n                                })\r\n                        })\r\n                    } else {\r\n                        return res.json({ 'error': 'Old password invalid', 'code': 111 })\r\n                    }\r\n                })\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify user', err, 'code': 0 })\r\n            })\r\n\r\n    })\r\n\r\n    // Update password UserADMIN\r\n    app.put('/api/users/password',verifyToken, (req, res) => {\r\n       \r\n        var userId = req.body.idUserAdmin\r\n        var idUserNormal = req.body.idUserNormal\r\n        var passwordNew = '123456'\r\n\r\n\r\n        models.User.findOne({ where: { id: userId } })\r\n            .then((UX) => {\r\n                models.User.findOne({ where: { id: idUserNormal } })\r\n                    .then((U) => {\r\n                        if (UX.isAdmin == true) {\r\n                            bcrypt.hash(passwordNew, 5, (err, bcryptedPassword) => {\r\n                                 U.update({ password: bcryptedPassword })\r\n                                    .then((users) => {\r\n                                        return res.json({ users, 'code': 1 })\r\n                                    })\r\n                                    .catch((err) => {\r\n                                        return res.json({ 'error': 'Cannot Update password user', 'code': 0 })\r\n                                    })\r\n                            })\r\n                        } else {\r\n                            return res.json({ 'error': 'Only admin', err, 'code': 333 })\r\n                        }\r\n                    })\r\n                    .catch((err) => {\r\n                        return res.json({ 'error': 'Unable to verify user', err, 'code': 0 })\r\n                    })\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify user!', err, 'code': 0 })\r\n            })\r\n    })\r\n}\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1580345610015
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\",\"filename\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\\\\src\\\\models\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0",
      "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\models\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\models\\index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\models\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\models",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nvar fs = require('fs');\n\nvar path = require('path');\n\nvar Sequelize = require('sequelize');\n\nvar basename = path.basename(__filename);\nvar env = process.env.NODE_ENV || 'development';\n\nvar config = require(__dirname + '/../config/config.json')[env];\n\nvar db = {};\nvar sequelize;\n\nif (config.use_env_variable) {\n  sequelize = new Sequelize(process.env[config.use_env_variable], config);\n} else {\n  sequelize = new Sequelize(config.database, config.username, config.password, config);\n}\n\nfs.readdirSync(__dirname).filter(function (file) {\n  return file.indexOf('.') !== 0 && file !== basename && file.slice(-3) === '.js';\n}).forEach(function (file) {\n  var model = sequelize['import'](path.join(__dirname, file));\n  db[model.name] = model;\n});\nObject.keys(db).forEach(function (modelName) {\n  if (db[modelName].associate) {\n    db[modelName].associate(db);\n  }\n});\ndb.sequelize = sequelize;\ndb.Sequelize = Sequelize;\nmodule.exports = db;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImZzIiwicmVxdWlyZSIsInBhdGgiLCJTZXF1ZWxpemUiLCJiYXNlbmFtZSIsIl9fZmlsZW5hbWUiLCJlbnYiLCJwcm9jZXNzIiwiTk9ERV9FTlYiLCJjb25maWciLCJfX2Rpcm5hbWUiLCJkYiIsInNlcXVlbGl6ZSIsInVzZV9lbnZfdmFyaWFibGUiLCJkYXRhYmFzZSIsInVzZXJuYW1lIiwicGFzc3dvcmQiLCJyZWFkZGlyU3luYyIsImZpbHRlciIsImZpbGUiLCJpbmRleE9mIiwic2xpY2UiLCJmb3JFYWNoIiwibW9kZWwiLCJqb2luIiwibmFtZSIsIk9iamVjdCIsImtleXMiLCJtb2RlbE5hbWUiLCJhc3NvY2lhdGUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxJQUFNQSxFQUFFLEdBQUdDLE9BQU8sQ0FBQyxJQUFELENBQWxCOztBQUNBLElBQU1DLElBQUksR0FBR0QsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsSUFBTUUsU0FBUyxHQUFHRixPQUFPLENBQUMsV0FBRCxDQUF6Qjs7QUFDQSxJQUFNRyxRQUFRLEdBQUdGLElBQUksQ0FBQ0UsUUFBTCxDQUFjQyxVQUFkLENBQWpCO0FBQ0EsSUFBTUMsR0FBRyxHQUFHQyxPQUFPLENBQUNELEdBQVIsQ0FBWUUsUUFBWixJQUF3QixhQUFwQzs7QUFDQSxJQUFNQyxNQUFNLEdBQUdSLE9BQU8sQ0FBQ1MsU0FBUyxHQUFHLHdCQUFiLENBQVAsQ0FBOENKLEdBQTlDLENBQWY7O0FBQ0EsSUFBTUssRUFBRSxHQUFHLEVBQVg7QUFFQSxJQUFJQyxTQUFKOztBQUNBLElBQUlILE1BQU0sQ0FBQ0ksZ0JBQVgsRUFBNkI7QUFDM0JELEVBQUFBLFNBQVMsR0FBRyxJQUFJVCxTQUFKLENBQWNJLE9BQU8sQ0FBQ0QsR0FBUixDQUFZRyxNQUFNLENBQUNJLGdCQUFuQixDQUFkLEVBQW9ESixNQUFwRCxDQUFaO0FBQ0QsQ0FGRCxNQUVPO0FBQ0xHLEVBQUFBLFNBQVMsR0FBRyxJQUFJVCxTQUFKLENBQWNNLE1BQU0sQ0FBQ0ssUUFBckIsRUFBK0JMLE1BQU0sQ0FBQ00sUUFBdEMsRUFBZ0ROLE1BQU0sQ0FBQ08sUUFBdkQsRUFBaUVQLE1BQWpFLENBQVo7QUFDRDs7QUFFRFQsRUFBRSxDQUNDaUIsV0FESCxDQUNlUCxTQURmLEVBRUdRLE1BRkgsQ0FFVSxVQUFBQyxJQUFJLEVBQUk7QUFDZCxTQUFRQSxJQUFJLENBQUNDLE9BQUwsQ0FBYSxHQUFiLE1BQXNCLENBQXZCLElBQThCRCxJQUFJLEtBQUtmLFFBQXZDLElBQXFEZSxJQUFJLENBQUNFLEtBQUwsQ0FBVyxDQUFDLENBQVosTUFBbUIsS0FBL0U7QUFDRCxDQUpILEVBS0dDLE9BTEgsQ0FLVyxVQUFBSCxJQUFJLEVBQUk7QUFDZixNQUFNSSxLQUFLLEdBQUdYLFNBQVMsQ0FBQyxRQUFELENBQVQsQ0FBb0JWLElBQUksQ0FBQ3NCLElBQUwsQ0FBVWQsU0FBVixFQUFxQlMsSUFBckIsQ0FBcEIsQ0FBZDtBQUNBUixFQUFBQSxFQUFFLENBQUNZLEtBQUssQ0FBQ0UsSUFBUCxDQUFGLEdBQWlCRixLQUFqQjtBQUNELENBUkg7QUFVQUcsTUFBTSxDQUFDQyxJQUFQLENBQVloQixFQUFaLEVBQWdCVyxPQUFoQixDQUF3QixVQUFBTSxTQUFTLEVBQUk7QUFDbkMsTUFBSWpCLEVBQUUsQ0FBQ2lCLFNBQUQsQ0FBRixDQUFjQyxTQUFsQixFQUE2QjtBQUMzQmxCLElBQUFBLEVBQUUsQ0FBQ2lCLFNBQUQsQ0FBRixDQUFjQyxTQUFkLENBQXdCbEIsRUFBeEI7QUFDRDtBQUNGLENBSkQ7QUFNQUEsRUFBRSxDQUFDQyxTQUFILEdBQWVBLFNBQWY7QUFDQUQsRUFBRSxDQUFDUixTQUFILEdBQWVBLFNBQWY7QUFFQTJCLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQnBCLEVBQWpCIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcYXN1c1xcRG9jdW1lbnRzXFxLcm93XFxBenVsdWxhIC0gQm95a2FcXGF6dVZlbmRhcyAxLjBcXHNyY1xcbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBmcyA9IHJlcXVpcmUoJ2ZzJyk7XG5jb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xuY29uc3QgU2VxdWVsaXplID0gcmVxdWlyZSgnc2VxdWVsaXplJyk7XG5jb25zdCBiYXNlbmFtZSA9IHBhdGguYmFzZW5hbWUoX19maWxlbmFtZSk7XG5jb25zdCBlbnYgPSBwcm9jZXNzLmVudi5OT0RFX0VOViB8fCAnZGV2ZWxvcG1lbnQnO1xuY29uc3QgY29uZmlnID0gcmVxdWlyZShfX2Rpcm5hbWUgKyAnLy4uL2NvbmZpZy9jb25maWcuanNvbicpW2Vudl07XG5jb25zdCBkYiA9IHt9O1xuXG5sZXQgc2VxdWVsaXplO1xuaWYgKGNvbmZpZy51c2VfZW52X3ZhcmlhYmxlKSB7XG4gIHNlcXVlbGl6ZSA9IG5ldyBTZXF1ZWxpemUocHJvY2Vzcy5lbnZbY29uZmlnLnVzZV9lbnZfdmFyaWFibGVdLCBjb25maWcpO1xufSBlbHNlIHtcbiAgc2VxdWVsaXplID0gbmV3IFNlcXVlbGl6ZShjb25maWcuZGF0YWJhc2UsIGNvbmZpZy51c2VybmFtZSwgY29uZmlnLnBhc3N3b3JkLCBjb25maWcpO1xufVxuXG5mc1xuICAucmVhZGRpclN5bmMoX19kaXJuYW1lKVxuICAuZmlsdGVyKGZpbGUgPT4ge1xuICAgIHJldHVybiAoZmlsZS5pbmRleE9mKCcuJykgIT09IDApICYmIChmaWxlICE9PSBiYXNlbmFtZSkgJiYgKGZpbGUuc2xpY2UoLTMpID09PSAnLmpzJyk7XG4gIH0pXG4gIC5mb3JFYWNoKGZpbGUgPT4ge1xuICAgIGNvbnN0IG1vZGVsID0gc2VxdWVsaXplWydpbXBvcnQnXShwYXRoLmpvaW4oX19kaXJuYW1lLCBmaWxlKSk7XG4gICAgZGJbbW9kZWwubmFtZV0gPSBtb2RlbDtcbiAgfSk7XG5cbk9iamVjdC5rZXlzKGRiKS5mb3JFYWNoKG1vZGVsTmFtZSA9PiB7XG4gIGlmIChkYlttb2RlbE5hbWVdLmFzc29jaWF0ZSkge1xuICAgIGRiW21vZGVsTmFtZV0uYXNzb2NpYXRlKGRiKTtcbiAgfVxufSk7XG5cbmRiLnNlcXVlbGl6ZSA9IHNlcXVlbGl6ZTtcbmRiLlNlcXVlbGl6ZSA9IFNlcXVlbGl6ZTtcblxubW9kdWxlLmV4cG9ydHMgPSBkYjtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "fs",
        "require",
        "path",
        "Sequelize",
        "basename",
        "__filename",
        "env",
        "process",
        "NODE_ENV",
        "config",
        "__dirname",
        "db",
        "sequelize",
        "use_env_variable",
        "database",
        "username",
        "password",
        "readdirSync",
        "filter",
        "file",
        "indexOf",
        "slice",
        "forEach",
        "model",
        "join",
        "name",
        "Object",
        "keys",
        "modelName",
        "associate",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;AAEA,IAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,IAAME,SAAS,GAAGF,OAAO,CAAC,WAAD,CAAzB;;AACA,IAAMG,QAAQ,GAAGF,IAAI,CAACE,QAAL,CAAcC,UAAd,CAAjB;AACA,IAAMC,GAAG,GAAGC,OAAO,CAACD,GAAR,CAAYE,QAAZ,IAAwB,aAApC;;AACA,IAAMC,MAAM,GAAGR,OAAO,CAACS,SAAS,GAAG,wBAAb,CAAP,CAA8CJ,GAA9C,CAAf;;AACA,IAAMK,EAAE,GAAG,EAAX;AAEA,IAAIC,SAAJ;;AACA,IAAIH,MAAM,CAACI,gBAAX,EAA6B;AAC3BD,EAAAA,SAAS,GAAG,IAAIT,SAAJ,CAAcI,OAAO,CAACD,GAAR,CAAYG,MAAM,CAACI,gBAAnB,CAAd,EAAoDJ,MAApD,CAAZ;AACD,CAFD,MAEO;AACLG,EAAAA,SAAS,GAAG,IAAIT,SAAJ,CAAcM,MAAM,CAACK,QAArB,EAA+BL,MAAM,CAACM,QAAtC,EAAgDN,MAAM,CAACO,QAAvD,EAAiEP,MAAjE,CAAZ;AACD;;AAEDT,EAAE,CACCiB,WADH,CACeP,SADf,EAEGQ,MAFH,CAEU,UAAAC,IAAI,EAAI;AACd,SAAQA,IAAI,CAACC,OAAL,CAAa,GAAb,MAAsB,CAAvB,IAA8BD,IAAI,KAAKf,QAAvC,IAAqDe,IAAI,CAACE,KAAL,CAAW,CAAC,CAAZ,MAAmB,KAA/E;AACD,CAJH,EAKGC,OALH,CAKW,UAAAH,IAAI,EAAI;AACf,MAAMI,KAAK,GAAGX,SAAS,CAAC,QAAD,CAAT,CAAoBV,IAAI,CAACsB,IAAL,CAAUd,SAAV,EAAqBS,IAArB,CAApB,CAAd;AACAR,EAAAA,EAAE,CAACY,KAAK,CAACE,IAAP,CAAF,GAAiBF,KAAjB;AACD,CARH;AAUAG,MAAM,CAACC,IAAP,CAAYhB,EAAZ,EAAgBW,OAAhB,CAAwB,UAAAM,SAAS,EAAI;AACnC,MAAIjB,EAAE,CAACiB,SAAD,CAAF,CAAcC,SAAlB,EAA6B;AAC3BlB,IAAAA,EAAE,CAACiB,SAAD,CAAF,CAAcC,SAAd,CAAwBlB,EAAxB;AACD;AACF,CAJD;AAMAA,EAAE,CAACC,SAAH,GAAeA,SAAf;AACAD,EAAE,CAACR,SAAH,GAAeA,SAAf;AAEA2B,MAAM,CAACC,OAAP,GAAiBpB,EAAjB",
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\models",
      "sourcesContent": [
        "'use strict';\n\nconst fs = require('fs');\nconst path = require('path');\nconst Sequelize = require('sequelize');\nconst basename = path.basename(__filename);\nconst env = process.env.NODE_ENV || 'development';\nconst config = require(__dirname + '/../config/config.json')[env];\nconst db = {};\n\nlet sequelize;\nif (config.use_env_variable) {\n  sequelize = new Sequelize(process.env[config.use_env_variable], config);\n} else {\n  sequelize = new Sequelize(config.database, config.username, config.password, config);\n}\n\nfs\n  .readdirSync(__dirname)\n  .filter(file => {\n    return (file.indexOf('.') !== 0) && (file !== basename) && (file.slice(-3) === '.js');\n  })\n  .forEach(file => {\n    const model = sequelize['import'](path.join(__dirname, file));\n    db[model.name] = model;\n  });\n\nObject.keys(db).forEach(modelName => {\n  if (db[modelName].associate) {\n    db[modelName].associate(db);\n  }\n});\n\ndb.sequelize = sequelize;\ndb.Sequelize = Sequelize;\n\nmodule.exports = db;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1578964930878
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\",\"filename\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\\\\src\\\\models\\\\user.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0",
      "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\models\\user.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\models\\user.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\models\\user.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\models",
        "sourceFileName": "user.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nmodule.exports = function (sequelize, DataTypes) {\n  var User = sequelize.define('User', {\n    username: DataTypes.STRING,\n    email: DataTypes.STRING,\n    password: DataTypes.STRING,\n    status: DataTypes.BOOLEAN,\n    isAdmin: DataTypes.BOOLEAN,\n    info: DataTypes.STRING\n  }, {});\n\n  User.associate = function (models) {\n    User.hasMany(models.Order);\n    User.hasMany(models.Task);\n  };\n\n  return User;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInNlcXVlbGl6ZSIsIkRhdGFUeXBlcyIsIlVzZXIiLCJkZWZpbmUiLCJ1c2VybmFtZSIsIlNUUklORyIsImVtYWlsIiwicGFzc3dvcmQiLCJzdGF0dXMiLCJCT09MRUFOIiwiaXNBZG1pbiIsImluZm8iLCJhc3NvY2lhdGUiLCJtb2RlbHMiLCJoYXNNYW55IiwiT3JkZXIiLCJUYXNrIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFDQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUNDLFNBQUQsRUFBWUMsU0FBWixFQUEwQjtBQUN6QyxNQUFNQyxJQUFJLEdBQUdGLFNBQVMsQ0FBQ0csTUFBVixDQUFpQixNQUFqQixFQUF5QjtBQUNwQ0MsSUFBQUEsUUFBUSxFQUFFSCxTQUFTLENBQUNJLE1BRGdCO0FBRXBDQyxJQUFBQSxLQUFLLEVBQUVMLFNBQVMsQ0FBQ0ksTUFGbUI7QUFHcENFLElBQUFBLFFBQVEsRUFBRU4sU0FBUyxDQUFDSSxNQUhnQjtBQUlwQ0csSUFBQUEsTUFBTSxFQUFFUCxTQUFTLENBQUNRLE9BSmtCO0FBS3BDQyxJQUFBQSxPQUFPLEVBQUVULFNBQVMsQ0FBQ1EsT0FMaUI7QUFNcENFLElBQUFBLElBQUksRUFBRVYsU0FBUyxDQUFDSTtBQU5vQixHQUF6QixFQU9WLEVBUFUsQ0FBYjs7QUFRQUgsRUFBQUEsSUFBSSxDQUFDVSxTQUFMLEdBQWlCLFVBQVNDLE1BQVQsRUFBaUI7QUFDaENYLElBQUFBLElBQUksQ0FBQ1ksT0FBTCxDQUFhRCxNQUFNLENBQUNFLEtBQXBCO0FBQ0FiLElBQUFBLElBQUksQ0FBQ1ksT0FBTCxDQUFhRCxNQUFNLENBQUNHLElBQXBCO0FBQ0QsR0FIRDs7QUFJQSxTQUFPZCxJQUFQO0FBQ0QsQ0FkRCIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGFzdXNcXERvY3VtZW50c1xcS3Jvd1xcQXp1bHVsYSAtIEJveWthXFxhenVWZW5kYXMgMS4wXFxzcmNcXG1vZGVscyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0Jztcbm1vZHVsZS5leHBvcnRzID0gKHNlcXVlbGl6ZSwgRGF0YVR5cGVzKSA9PiB7XG4gIGNvbnN0IFVzZXIgPSBzZXF1ZWxpemUuZGVmaW5lKCdVc2VyJywge1xuICAgIHVzZXJuYW1lOiBEYXRhVHlwZXMuU1RSSU5HLFxuICAgIGVtYWlsOiBEYXRhVHlwZXMuU1RSSU5HLFxuICAgIHBhc3N3b3JkOiBEYXRhVHlwZXMuU1RSSU5HLFxuICAgIHN0YXR1czogRGF0YVR5cGVzLkJPT0xFQU4sXG4gICAgaXNBZG1pbjogRGF0YVR5cGVzLkJPT0xFQU4sXG4gICAgaW5mbzogRGF0YVR5cGVzLlNUUklOR1xuICB9LCB7fSk7XG4gIFVzZXIuYXNzb2NpYXRlID0gZnVuY3Rpb24obW9kZWxzKSB7XG4gICAgVXNlci5oYXNNYW55KG1vZGVscy5PcmRlcilcbiAgICBVc2VyLmhhc01hbnkobW9kZWxzLlRhc2spXG4gIH07XG4gIHJldHVybiBVc2VyO1xufTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "user.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "User",
        "define",
        "username",
        "STRING",
        "email",
        "password",
        "status",
        "BOOLEAN",
        "isAdmin",
        "info",
        "associate",
        "models",
        "hasMany",
        "Order",
        "Task"
      ],
      "mappings": "AAAA;;AACAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AACzC,MAAMC,IAAI,GAAGF,SAAS,CAACG,MAAV,CAAiB,MAAjB,EAAyB;AACpCC,IAAAA,QAAQ,EAAEH,SAAS,CAACI,MADgB;AAEpCC,IAAAA,KAAK,EAAEL,SAAS,CAACI,MAFmB;AAGpCE,IAAAA,QAAQ,EAAEN,SAAS,CAACI,MAHgB;AAIpCG,IAAAA,MAAM,EAAEP,SAAS,CAACQ,OAJkB;AAKpCC,IAAAA,OAAO,EAAET,SAAS,CAACQ,OALiB;AAMpCE,IAAAA,IAAI,EAAEV,SAAS,CAACI;AANoB,GAAzB,EAOV,EAPU,CAAb;;AAQAH,EAAAA,IAAI,CAACU,SAAL,GAAiB,UAASC,MAAT,EAAiB;AAChCX,IAAAA,IAAI,CAACY,OAAL,CAAaD,MAAM,CAACE,KAApB;AACAb,IAAAA,IAAI,CAACY,OAAL,CAAaD,MAAM,CAACG,IAApB;AACD,GAHD;;AAIA,SAAOd,IAAP;AACD,CAdD",
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\models",
      "sourcesContent": [
        "'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const User = sequelize.define('User', {\n    username: DataTypes.STRING,\n    email: DataTypes.STRING,\n    password: DataTypes.STRING,\n    status: DataTypes.BOOLEAN,\n    isAdmin: DataTypes.BOOLEAN,\n    info: DataTypes.STRING\n  }, {});\n  User.associate = function(models) {\n    User.hasMany(models.Order)\n    User.hasMany(models.Task)\n  };\n  return User;\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1580890221125
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\\\\src\\\\utils\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\",\"filename\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\\\\src\\\\utils\\\\jwt.util.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\utils",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0",
      "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\utils\\jwt.util.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\utils\\jwt.util.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\utils\\jwt.util.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\utils",
        "sourceFileName": "jwt.util.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar JWT_SIGN_SECRET = '8ogu4o8g0gg8043gg8g8ulg4go834uug4o303407743g7344380g0';\nmodule.exports = {\n  generateTokenForUser: function generateTokenForUser(userData) {\n    return _jsonwebtoken[\"default\"].sign({\n      userId: userData.id,\n      isAdmin: userData.isAdmin\n    }, JWT_SIGN_SECRET, {\n      expiresIn: '5d'\n    });\n  },\n  parseAuthorization: function parseAuthorization(authorization) {\n    return authorization != null ? authorization.replace('Bearer ', '') : null;\n  },\n  getUserId: function getUserId(authorization) {\n    var userId = -1;\n    var token = module.exports.parseAuthorization(authorization);\n\n    if (token != null) {\n      try {\n        var jwtToken = _jsonwebtoken[\"default\"].verify(token, JWT_SIGN_SECRET);\n\n        if (jwtToken != null) userId = jwtToken.userId;\n      } catch (err) {}\n    }\n\n    return userId;\n  },\n  destroyToken: function destroyToken(authorization) {\n    var token = module.exports.parseAuthorization(authorization);\n    return _jsonwebtoken[\"default\"].destroy(token);\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImp3dC51dGlsLmpzIl0sIm5hbWVzIjpbIkpXVF9TSUdOX1NFQ1JFVCIsIm1vZHVsZSIsImV4cG9ydHMiLCJnZW5lcmF0ZVRva2VuRm9yVXNlciIsInVzZXJEYXRhIiwiand0Iiwic2lnbiIsInVzZXJJZCIsImlkIiwiaXNBZG1pbiIsImV4cGlyZXNJbiIsInBhcnNlQXV0aG9yaXphdGlvbiIsImF1dGhvcml6YXRpb24iLCJyZXBsYWNlIiwiZ2V0VXNlcklkIiwidG9rZW4iLCJqd3RUb2tlbiIsInZlcmlmeSIsImVyciIsImRlc3Ryb3lUb2tlbiIsImRlc3Ryb3kiXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7QUFDQSxJQUFNQSxlQUFlLEdBQUcsdURBQXhCO0FBQ0FDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNiQyxFQUFBQSxvQkFEYSxnQ0FDUUMsUUFEUixFQUNrQjtBQUMzQixXQUFPQyx5QkFBSUMsSUFBSixDQUFTO0FBQ1pDLE1BQUFBLE1BQU0sRUFBRUgsUUFBUSxDQUFDSSxFQURMO0FBRVpDLE1BQUFBLE9BQU8sRUFBRUwsUUFBUSxDQUFDSztBQUZOLEtBQVQsRUFJUFQsZUFKTyxFQUtIO0FBQ0lVLE1BQUFBLFNBQVMsRUFBRTtBQURmLEtBTEcsQ0FBUDtBQVFILEdBVlk7QUFZYkMsRUFBQUEsa0JBWmEsOEJBWU1DLGFBWk4sRUFZcUI7QUFDOUIsV0FBUUEsYUFBYSxJQUFJLElBQWxCLEdBQTBCQSxhQUFhLENBQUNDLE9BQWQsQ0FBc0IsU0FBdEIsRUFBaUMsRUFBakMsQ0FBMUIsR0FBaUUsSUFBeEU7QUFDSCxHQWRZO0FBZWJDLEVBQUFBLFNBZmEscUJBZUhGLGFBZkcsRUFlWTtBQUNyQixRQUFJTCxNQUFNLEdBQUcsQ0FBQyxDQUFkO0FBQ0EsUUFBSVEsS0FBSyxHQUFHZCxNQUFNLENBQUNDLE9BQVAsQ0FBZVMsa0JBQWYsQ0FBa0NDLGFBQWxDLENBQVo7O0FBQ0EsUUFBSUcsS0FBSyxJQUFJLElBQWIsRUFBbUI7QUFDZixVQUFJO0FBQ0EsWUFBSUMsUUFBUSxHQUFHWCx5QkFBSVksTUFBSixDQUFXRixLQUFYLEVBQWtCZixlQUFsQixDQUFmOztBQUNBLFlBQUlnQixRQUFRLElBQUksSUFBaEIsRUFDSVQsTUFBTSxHQUFHUyxRQUFRLENBQUNULE1BQWxCO0FBQ1AsT0FKRCxDQUlFLE9BQU9XLEdBQVAsRUFBWSxDQUFFO0FBQ25COztBQUNELFdBQU9YLE1BQVA7QUFDSCxHQTFCWTtBQTJCYlksRUFBQUEsWUEzQmEsd0JBMkJBUCxhQTNCQSxFQTJCZTtBQUN4QixRQUFJRyxLQUFLLEdBQUdkLE1BQU0sQ0FBQ0MsT0FBUCxDQUFlUyxrQkFBZixDQUFrQ0MsYUFBbEMsQ0FBWjtBQUNBLFdBQU9QLHlCQUFJZSxPQUFKLENBQVlMLEtBQVosQ0FBUDtBQUNIO0FBOUJZLENBQWpCIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcYXN1c1xcRG9jdW1lbnRzXFxLcm93XFxBenVsdWxhIC0gQm95a2FcXGF6dVZlbmRhcyAxLjBcXHNyY1xcdXRpbHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgand0IGZyb20gJ2pzb253ZWJ0b2tlbidcclxuY29uc3QgSldUX1NJR05fU0VDUkVUID0gJzhvZ3U0bzhnMGdnODA0M2dnOGc4dWxnNGdvODM0dXVnNG8zMDM0MDc3NDNnNzM0NDM4MGcwJ1xyXG5tb2R1bGUuZXhwb3J0cyA9IHtcclxuICAgIGdlbmVyYXRlVG9rZW5Gb3JVc2VyKHVzZXJEYXRhKSB7XHJcbiAgICAgICAgcmV0dXJuIGp3dC5zaWduKHtcclxuICAgICAgICAgICAgdXNlcklkOiB1c2VyRGF0YS5pZCxcclxuICAgICAgICAgICAgaXNBZG1pbjogdXNlckRhdGEuaXNBZG1pblxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgSldUX1NJR05fU0VDUkVULFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBleHBpcmVzSW46ICc1ZCdcclxuICAgICAgICAgICAgfSlcclxuICAgIH0sXHJcblxyXG4gICAgcGFyc2VBdXRob3JpemF0aW9uKGF1dGhvcml6YXRpb24pIHtcclxuICAgICAgICByZXR1cm4gKGF1dGhvcml6YXRpb24gIT0gbnVsbCkgPyBhdXRob3JpemF0aW9uLnJlcGxhY2UoJ0JlYXJlciAnLCAnJykgOiBudWxsXHJcbiAgICB9LFxyXG4gICAgZ2V0VXNlcklkKGF1dGhvcml6YXRpb24pIHtcclxuICAgICAgICB2YXIgdXNlcklkID0gLTFcclxuICAgICAgICB2YXIgdG9rZW4gPSBtb2R1bGUuZXhwb3J0cy5wYXJzZUF1dGhvcml6YXRpb24oYXV0aG9yaXphdGlvbilcclxuICAgICAgICBpZiAodG9rZW4gIT0gbnVsbCkge1xyXG4gICAgICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICAgICAgdmFyIGp3dFRva2VuID0gand0LnZlcmlmeSh0b2tlbiwgSldUX1NJR05fU0VDUkVUKVxyXG4gICAgICAgICAgICAgICAgaWYgKGp3dFRva2VuICE9IG51bGwpXHJcbiAgICAgICAgICAgICAgICAgICAgdXNlcklkID0gand0VG9rZW4udXNlcklkXHJcbiAgICAgICAgICAgIH0gY2F0Y2ggKGVycikge31cclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHVzZXJJZFxyXG4gICAgfSxcclxuICAgIGRlc3Ryb3lUb2tlbihhdXRob3JpemF0aW9uKSB7XHJcbiAgICAgICAgdmFyIHRva2VuID0gbW9kdWxlLmV4cG9ydHMucGFyc2VBdXRob3JpemF0aW9uKGF1dGhvcml6YXRpb24pXHJcbiAgICAgICAgcmV0dXJuIGp3dC5kZXN0cm95KHRva2VuKVxyXG4gICAgfVxyXG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "jwt.util.js"
      ],
      "names": [
        "JWT_SIGN_SECRET",
        "module",
        "exports",
        "generateTokenForUser",
        "userData",
        "jwt",
        "sign",
        "userId",
        "id",
        "isAdmin",
        "expiresIn",
        "parseAuthorization",
        "authorization",
        "replace",
        "getUserId",
        "token",
        "jwtToken",
        "verify",
        "err",
        "destroyToken",
        "destroy"
      ],
      "mappings": ";;AAAA;;;;AACA,IAAMA,eAAe,GAAG,uDAAxB;AACAC,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,oBADa,gCACQC,QADR,EACkB;AAC3B,WAAOC,yBAAIC,IAAJ,CAAS;AACZC,MAAAA,MAAM,EAAEH,QAAQ,CAACI,EADL;AAEZC,MAAAA,OAAO,EAAEL,QAAQ,CAACK;AAFN,KAAT,EAIPT,eAJO,EAKH;AACIU,MAAAA,SAAS,EAAE;AADf,KALG,CAAP;AAQH,GAVY;AAYbC,EAAAA,kBAZa,8BAYMC,aAZN,EAYqB;AAC9B,WAAQA,aAAa,IAAI,IAAlB,GAA0BA,aAAa,CAACC,OAAd,CAAsB,SAAtB,EAAiC,EAAjC,CAA1B,GAAiE,IAAxE;AACH,GAdY;AAebC,EAAAA,SAfa,qBAeHF,aAfG,EAeY;AACrB,QAAIL,MAAM,GAAG,CAAC,CAAd;AACA,QAAIQ,KAAK,GAAGd,MAAM,CAACC,OAAP,CAAeS,kBAAf,CAAkCC,aAAlC,CAAZ;;AACA,QAAIG,KAAK,IAAI,IAAb,EAAmB;AACf,UAAI;AACA,YAAIC,QAAQ,GAAGX,yBAAIY,MAAJ,CAAWF,KAAX,EAAkBf,eAAlB,CAAf;;AACA,YAAIgB,QAAQ,IAAI,IAAhB,EACIT,MAAM,GAAGS,QAAQ,CAACT,MAAlB;AACP,OAJD,CAIE,OAAOW,GAAP,EAAY,CAAE;AACnB;;AACD,WAAOX,MAAP;AACH,GA1BY;AA2BbY,EAAAA,YA3Ba,wBA2BAP,aA3BA,EA2Be;AACxB,QAAIG,KAAK,GAAGd,MAAM,CAACC,OAAP,CAAeS,kBAAf,CAAkCC,aAAlC,CAAZ;AACA,WAAOP,yBAAIe,OAAJ,CAAYL,KAAZ,CAAP;AACH;AA9BY,CAAjB",
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\utils",
      "sourcesContent": [
        "import jwt from 'jsonwebtoken'\r\nconst JWT_SIGN_SECRET = '8ogu4o8g0gg8043gg8g8ulg4go834uug4o303407743g7344380g0'\r\nmodule.exports = {\r\n    generateTokenForUser(userData) {\r\n        return jwt.sign({\r\n            userId: userData.id,\r\n            isAdmin: userData.isAdmin\r\n        },\r\n        JWT_SIGN_SECRET,\r\n            {\r\n                expiresIn: '5d'\r\n            })\r\n    },\r\n\r\n    parseAuthorization(authorization) {\r\n        return (authorization != null) ? authorization.replace('Bearer ', '') : null\r\n    },\r\n    getUserId(authorization) {\r\n        var userId = -1\r\n        var token = module.exports.parseAuthorization(authorization)\r\n        if (token != null) {\r\n            try {\r\n                var jwtToken = jwt.verify(token, JWT_SIGN_SECRET)\r\n                if (jwtToken != null)\r\n                    userId = jwtToken.userId\r\n            } catch (err) {}\r\n        }\r\n        return userId\r\n    },\r\n    destroyToken(authorization) {\r\n        var token = module.exports.parseAuthorization(authorization)\r\n        return jwt.destroy(token)\r\n    }\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1579904862708
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\",\"filename\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\\\\src\\\\models\\\\category.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0",
      "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\models\\category.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\models\\category.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\models\\category.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\models",
        "sourceFileName": "category.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nmodule.exports = function (sequelize, DataTypes) {\n  var Category = sequelize.define('Category', {\n    name: DataTypes.STRING\n  }, {});\n\n  Category.associate = function (models) {\n    Category.hasMany(models.Product);\n  };\n\n  return Category;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhdGVnb3J5LmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJzZXF1ZWxpemUiLCJEYXRhVHlwZXMiLCJDYXRlZ29yeSIsImRlZmluZSIsIm5hbWUiLCJTVFJJTkciLCJhc3NvY2lhdGUiLCJtb2RlbHMiLCJoYXNNYW55IiwiUHJvZHVjdCJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBQ0FBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixVQUFDQyxTQUFELEVBQVlDLFNBQVosRUFBMEI7QUFDekMsTUFBTUMsUUFBUSxHQUFHRixTQUFTLENBQUNHLE1BQVYsQ0FBaUIsVUFBakIsRUFBNkI7QUFDNUNDLElBQUFBLElBQUksRUFBRUgsU0FBUyxDQUFDSTtBQUQ0QixHQUE3QixFQUVkLEVBRmMsQ0FBakI7O0FBR0FILEVBQUFBLFFBQVEsQ0FBQ0ksU0FBVCxHQUFxQixVQUFTQyxNQUFULEVBQWlCO0FBQ3BDTCxJQUFBQSxRQUFRLENBQUNNLE9BQVQsQ0FBaUJELE1BQU0sQ0FBQ0UsT0FBeEI7QUFDRCxHQUZEOztBQUdBLFNBQU9QLFFBQVA7QUFDRCxDQVJEIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcYXN1c1xcRG9jdW1lbnRzXFxLcm93XFxBenVsdWxhIC0gQm95a2FcXGF6dVZlbmRhcyAxLjBcXHNyY1xcbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xubW9kdWxlLmV4cG9ydHMgPSAoc2VxdWVsaXplLCBEYXRhVHlwZXMpID0+IHtcbiAgY29uc3QgQ2F0ZWdvcnkgPSBzZXF1ZWxpemUuZGVmaW5lKCdDYXRlZ29yeScsIHtcbiAgICBuYW1lOiBEYXRhVHlwZXMuU1RSSU5HXG4gIH0sIHt9KTtcbiAgQ2F0ZWdvcnkuYXNzb2NpYXRlID0gZnVuY3Rpb24obW9kZWxzKSB7XG4gICAgQ2F0ZWdvcnkuaGFzTWFueShtb2RlbHMuUHJvZHVjdClcbiAgfTtcbiAgcmV0dXJuIENhdGVnb3J5O1xufTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "category.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "Category",
        "define",
        "name",
        "STRING",
        "associate",
        "models",
        "hasMany",
        "Product"
      ],
      "mappings": "AAAA;;AACAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AACzC,MAAMC,QAAQ,GAAGF,SAAS,CAACG,MAAV,CAAiB,UAAjB,EAA6B;AAC5CC,IAAAA,IAAI,EAAEH,SAAS,CAACI;AAD4B,GAA7B,EAEd,EAFc,CAAjB;;AAGAH,EAAAA,QAAQ,CAACI,SAAT,GAAqB,UAASC,MAAT,EAAiB;AACpCL,IAAAA,QAAQ,CAACM,OAAT,CAAiBD,MAAM,CAACE,OAAxB;AACD,GAFD;;AAGA,SAAOP,QAAP;AACD,CARD",
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\models",
      "sourcesContent": [
        "'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const Category = sequelize.define('Category', {\n    name: DataTypes.STRING\n  }, {});\n  Category.associate = function(models) {\n    Category.hasMany(models.Product)\n  };\n  return Category;\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1579817096186
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\",\"filename\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\\\\src\\\\models\\\\product.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0",
      "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\models\\product.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\models\\product.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\models\\product.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\models",
        "sourceFileName": "product.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nmodule.exports = function (sequelize, DataTypes) {\n  var Product = sequelize.define('Product', {\n    key: DataTypes.STRING,\n    name: DataTypes.STRING,\n    unity: DataTypes.STRING,\n    categoryId: DataTypes.INTEGER,\n    quantity: DataTypes.INTEGER,\n    purchase: DataTypes.DECIMAL,\n    sale_price: DataTypes.DECIMAL,\n    expiration_date: DataTypes.DATE\n  }, {});\n\n  Product.associate = function (models) {\n    Product.belongsTo(models.Category);\n    Product.hasMany(models.OrderItem);\n  };\n\n  return Product;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2R1Y3QuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInNlcXVlbGl6ZSIsIkRhdGFUeXBlcyIsIlByb2R1Y3QiLCJkZWZpbmUiLCJrZXkiLCJTVFJJTkciLCJuYW1lIiwidW5pdHkiLCJjYXRlZ29yeUlkIiwiSU5URUdFUiIsInF1YW50aXR5IiwicHVyY2hhc2UiLCJERUNJTUFMIiwic2FsZV9wcmljZSIsImV4cGlyYXRpb25fZGF0ZSIsIkRBVEUiLCJhc3NvY2lhdGUiLCJtb2RlbHMiLCJiZWxvbmdzVG8iLCJDYXRlZ29yeSIsImhhc01hbnkiLCJPcmRlckl0ZW0iXSwibWFwcGluZ3MiOiJBQUFBOztBQUNBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUIsVUFBQ0MsU0FBRCxFQUFZQyxTQUFaLEVBQTBCO0FBQ3pDLE1BQU1DLE9BQU8sR0FBR0YsU0FBUyxDQUFDRyxNQUFWLENBQWlCLFNBQWpCLEVBQTRCO0FBQzFDQyxJQUFBQSxHQUFHLEVBQUVILFNBQVMsQ0FBQ0ksTUFEMkI7QUFFMUNDLElBQUFBLElBQUksRUFBRUwsU0FBUyxDQUFDSSxNQUYwQjtBQUcxQ0UsSUFBQUEsS0FBSyxFQUFFTixTQUFTLENBQUNJLE1BSHlCO0FBSTFDRyxJQUFBQSxVQUFVLEVBQUVQLFNBQVMsQ0FBQ1EsT0FKb0I7QUFLMUNDLElBQUFBLFFBQVEsRUFBRVQsU0FBUyxDQUFDUSxPQUxzQjtBQU0xQ0UsSUFBQUEsUUFBUSxFQUFFVixTQUFTLENBQUNXLE9BTnNCO0FBTzFDQyxJQUFBQSxVQUFVLEVBQUVaLFNBQVMsQ0FBQ1csT0FQb0I7QUFRMUNFLElBQUFBLGVBQWUsRUFBRWIsU0FBUyxDQUFDYztBQVJlLEdBQTVCLEVBU2IsRUFUYSxDQUFoQjs7QUFVQWIsRUFBQUEsT0FBTyxDQUFDYyxTQUFSLEdBQW9CLFVBQVNDLE1BQVQsRUFBaUI7QUFDbkNmLElBQUFBLE9BQU8sQ0FBQ2dCLFNBQVIsQ0FBa0JELE1BQU0sQ0FBQ0UsUUFBekI7QUFDQWpCLElBQUFBLE9BQU8sQ0FBQ2tCLE9BQVIsQ0FBZ0JILE1BQU0sQ0FBQ0ksU0FBdkI7QUFDRCxHQUhEOztBQUlBLFNBQU9uQixPQUFQO0FBQ0QsQ0FoQkQiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxhc3VzXFxEb2N1bWVudHNcXEtyb3dcXEF6dWx1bGEgLSBCb3lrYVxcYXp1VmVuZGFzIDEuMFxcc3JjXFxtb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5tb2R1bGUuZXhwb3J0cyA9IChzZXF1ZWxpemUsIERhdGFUeXBlcykgPT4ge1xuICBjb25zdCBQcm9kdWN0ID0gc2VxdWVsaXplLmRlZmluZSgnUHJvZHVjdCcsIHtcbiAgICBrZXk6IERhdGFUeXBlcy5TVFJJTkcsXG4gICAgbmFtZTogRGF0YVR5cGVzLlNUUklORyxcbiAgICB1bml0eTogRGF0YVR5cGVzLlNUUklORyxcbiAgICBjYXRlZ29yeUlkOiBEYXRhVHlwZXMuSU5URUdFUixcbiAgICBxdWFudGl0eTogRGF0YVR5cGVzLklOVEVHRVIsXG4gICAgcHVyY2hhc2U6IERhdGFUeXBlcy5ERUNJTUFMLFxuICAgIHNhbGVfcHJpY2U6IERhdGFUeXBlcy5ERUNJTUFMLFxuICAgIGV4cGlyYXRpb25fZGF0ZTogRGF0YVR5cGVzLkRBVEVcbiAgfSwge30pO1xuICBQcm9kdWN0LmFzc29jaWF0ZSA9IGZ1bmN0aW9uKG1vZGVscykge1xuICAgIFByb2R1Y3QuYmVsb25nc1RvKG1vZGVscy5DYXRlZ29yeSlcbiAgICBQcm9kdWN0Lmhhc01hbnkobW9kZWxzLk9yZGVySXRlbSlcbiAgfTtcbiAgcmV0dXJuIFByb2R1Y3Q7XG59OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "product.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "Product",
        "define",
        "key",
        "STRING",
        "name",
        "unity",
        "categoryId",
        "INTEGER",
        "quantity",
        "purchase",
        "DECIMAL",
        "sale_price",
        "expiration_date",
        "DATE",
        "associate",
        "models",
        "belongsTo",
        "Category",
        "hasMany",
        "OrderItem"
      ],
      "mappings": "AAAA;;AACAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AACzC,MAAMC,OAAO,GAAGF,SAAS,CAACG,MAAV,CAAiB,SAAjB,EAA4B;AAC1CC,IAAAA,GAAG,EAAEH,SAAS,CAACI,MAD2B;AAE1CC,IAAAA,IAAI,EAAEL,SAAS,CAACI,MAF0B;AAG1CE,IAAAA,KAAK,EAAEN,SAAS,CAACI,MAHyB;AAI1CG,IAAAA,UAAU,EAAEP,SAAS,CAACQ,OAJoB;AAK1CC,IAAAA,QAAQ,EAAET,SAAS,CAACQ,OALsB;AAM1CE,IAAAA,QAAQ,EAAEV,SAAS,CAACW,OANsB;AAO1CC,IAAAA,UAAU,EAAEZ,SAAS,CAACW,OAPoB;AAQ1CE,IAAAA,eAAe,EAAEb,SAAS,CAACc;AARe,GAA5B,EASb,EATa,CAAhB;;AAUAb,EAAAA,OAAO,CAACc,SAAR,GAAoB,UAASC,MAAT,EAAiB;AACnCf,IAAAA,OAAO,CAACgB,SAAR,CAAkBD,MAAM,CAACE,QAAzB;AACAjB,IAAAA,OAAO,CAACkB,OAAR,CAAgBH,MAAM,CAACI,SAAvB;AACD,GAHD;;AAIA,SAAOnB,OAAP;AACD,CAhBD",
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\models",
      "sourcesContent": [
        "'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const Product = sequelize.define('Product', {\n    key: DataTypes.STRING,\n    name: DataTypes.STRING,\n    unity: DataTypes.STRING,\n    categoryId: DataTypes.INTEGER,\n    quantity: DataTypes.INTEGER,\n    purchase: DataTypes.DECIMAL,\n    sale_price: DataTypes.DECIMAL,\n    expiration_date: DataTypes.DATE\n  }, {});\n  Product.associate = function(models) {\n    Product.belongsTo(models.Category)\n    Product.hasMany(models.OrderItem)\n  };\n  return Product;\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1579821968191
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\",\"filename\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\\\\src\\\\models\\\\client.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0",
      "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\models\\client.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\models\\client.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\models\\client.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\models",
        "sourceFileName": "client.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nmodule.exports = function (sequelize, DataTypes) {\n  var Client = sequelize.define('Client', {\n    name: DataTypes.STRING,\n    phone: DataTypes.STRING\n  }, {});\n\n  Client.associate = function (models) {\n    Client.hasMany(models.Order);\n  };\n\n  return Client;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsaWVudC5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwic2VxdWVsaXplIiwiRGF0YVR5cGVzIiwiQ2xpZW50IiwiZGVmaW5lIiwibmFtZSIsIlNUUklORyIsInBob25lIiwiYXNzb2NpYXRlIiwibW9kZWxzIiwiaGFzTWFueSIsIk9yZGVyIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFDQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUNDLFNBQUQsRUFBWUMsU0FBWixFQUEwQjtBQUN6QyxNQUFNQyxNQUFNLEdBQUdGLFNBQVMsQ0FBQ0csTUFBVixDQUFpQixRQUFqQixFQUEyQjtBQUN4Q0MsSUFBQUEsSUFBSSxFQUFFSCxTQUFTLENBQUNJLE1BRHdCO0FBRXhDQyxJQUFBQSxLQUFLLEVBQUVMLFNBQVMsQ0FBQ0k7QUFGdUIsR0FBM0IsRUFHWixFQUhZLENBQWY7O0FBSUFILEVBQUFBLE1BQU0sQ0FBQ0ssU0FBUCxHQUFtQixVQUFTQyxNQUFULEVBQWlCO0FBQ2xDTixJQUFBQSxNQUFNLENBQUNPLE9BQVAsQ0FBZUQsTUFBTSxDQUFDRSxLQUF0QjtBQUNELEdBRkQ7O0FBR0EsU0FBT1IsTUFBUDtBQUNELENBVEQiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxhc3VzXFxEb2N1bWVudHNcXEtyb3dcXEF6dWx1bGEgLSBCb3lrYVxcYXp1VmVuZGFzIDEuMFxcc3JjXFxtb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5tb2R1bGUuZXhwb3J0cyA9IChzZXF1ZWxpemUsIERhdGFUeXBlcykgPT4ge1xuICBjb25zdCBDbGllbnQgPSBzZXF1ZWxpemUuZGVmaW5lKCdDbGllbnQnLCB7XG4gICAgbmFtZTogRGF0YVR5cGVzLlNUUklORyxcbiAgICBwaG9uZTogRGF0YVR5cGVzLlNUUklOR1xuICB9LCB7fSk7XG4gIENsaWVudC5hc3NvY2lhdGUgPSBmdW5jdGlvbihtb2RlbHMpIHtcbiAgICBDbGllbnQuaGFzTWFueShtb2RlbHMuT3JkZXIpXG4gIH07XG4gIHJldHVybiBDbGllbnQ7XG59OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "client.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "Client",
        "define",
        "name",
        "STRING",
        "phone",
        "associate",
        "models",
        "hasMany",
        "Order"
      ],
      "mappings": "AAAA;;AACAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AACzC,MAAMC,MAAM,GAAGF,SAAS,CAACG,MAAV,CAAiB,QAAjB,EAA2B;AACxCC,IAAAA,IAAI,EAAEH,SAAS,CAACI,MADwB;AAExCC,IAAAA,KAAK,EAAEL,SAAS,CAACI;AAFuB,GAA3B,EAGZ,EAHY,CAAf;;AAIAH,EAAAA,MAAM,CAACK,SAAP,GAAmB,UAASC,MAAT,EAAiB;AAClCN,IAAAA,MAAM,CAACO,OAAP,CAAeD,MAAM,CAACE,KAAtB;AACD,GAFD;;AAGA,SAAOR,MAAP;AACD,CATD",
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\models",
      "sourcesContent": [
        "'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const Client = sequelize.define('Client', {\n    name: DataTypes.STRING,\n    phone: DataTypes.STRING\n  }, {});\n  Client.associate = function(models) {\n    Client.hasMany(models.Order)\n  };\n  return Client;\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1579877072771
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\",\"filename\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\\\\src\\\\models\\\\service.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0",
      "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\models\\service.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\models\\service.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\models\\service.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\models",
        "sourceFileName": "service.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nmodule.exports = function (sequelize, DataTypes) {\n  var Service = sequelize.define('Service', {\n    key: DataTypes.STRING,\n    name: DataTypes.STRING,\n    investiment: DataTypes.DECIMAL,\n    price: DataTypes.DECIMAL\n  }, {});\n\n  Service.associate = function (models) {// associations can be defined here\n  };\n\n  return Service;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZpY2UuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInNlcXVlbGl6ZSIsIkRhdGFUeXBlcyIsIlNlcnZpY2UiLCJkZWZpbmUiLCJrZXkiLCJTVFJJTkciLCJuYW1lIiwiaW52ZXN0aW1lbnQiLCJERUNJTUFMIiwicHJpY2UiLCJhc3NvY2lhdGUiLCJtb2RlbHMiXSwibWFwcGluZ3MiOiJBQUFBOztBQUNBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUIsVUFBQ0MsU0FBRCxFQUFZQyxTQUFaLEVBQTBCO0FBQ3pDLE1BQU1DLE9BQU8sR0FBR0YsU0FBUyxDQUFDRyxNQUFWLENBQWlCLFNBQWpCLEVBQTRCO0FBQzFDQyxJQUFBQSxHQUFHLEVBQUVILFNBQVMsQ0FBQ0ksTUFEMkI7QUFFMUNDLElBQUFBLElBQUksRUFBRUwsU0FBUyxDQUFDSSxNQUYwQjtBQUcxQ0UsSUFBQUEsV0FBVyxFQUFFTixTQUFTLENBQUNPLE9BSG1CO0FBSTFDQyxJQUFBQSxLQUFLLEVBQUVSLFNBQVMsQ0FBQ087QUFKeUIsR0FBNUIsRUFLYixFQUxhLENBQWhCOztBQU1BTixFQUFBQSxPQUFPLENBQUNRLFNBQVIsR0FBb0IsVUFBU0MsTUFBVCxFQUFpQixDQUNuQztBQUNELEdBRkQ7O0FBR0EsU0FBT1QsT0FBUDtBQUNELENBWEQiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxhc3VzXFxEb2N1bWVudHNcXEtyb3dcXEF6dWx1bGEgLSBCb3lrYVxcYXp1VmVuZGFzIDEuMFxcc3JjXFxtb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5tb2R1bGUuZXhwb3J0cyA9IChzZXF1ZWxpemUsIERhdGFUeXBlcykgPT4ge1xuICBjb25zdCBTZXJ2aWNlID0gc2VxdWVsaXplLmRlZmluZSgnU2VydmljZScsIHtcbiAgICBrZXk6IERhdGFUeXBlcy5TVFJJTkcsXG4gICAgbmFtZTogRGF0YVR5cGVzLlNUUklORyxcbiAgICBpbnZlc3RpbWVudDogRGF0YVR5cGVzLkRFQ0lNQUwsXG4gICAgcHJpY2U6IERhdGFUeXBlcy5ERUNJTUFMXG4gIH0sIHt9KTtcbiAgU2VydmljZS5hc3NvY2lhdGUgPSBmdW5jdGlvbihtb2RlbHMpIHtcbiAgICAvLyBhc3NvY2lhdGlvbnMgY2FuIGJlIGRlZmluZWQgaGVyZVxuICB9O1xuICByZXR1cm4gU2VydmljZTtcbn07Il19",
    "map": {
      "version": 3,
      "sources": [
        "service.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "Service",
        "define",
        "key",
        "STRING",
        "name",
        "investiment",
        "DECIMAL",
        "price",
        "associate",
        "models"
      ],
      "mappings": "AAAA;;AACAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AACzC,MAAMC,OAAO,GAAGF,SAAS,CAACG,MAAV,CAAiB,SAAjB,EAA4B;AAC1CC,IAAAA,GAAG,EAAEH,SAAS,CAACI,MAD2B;AAE1CC,IAAAA,IAAI,EAAEL,SAAS,CAACI,MAF0B;AAG1CE,IAAAA,WAAW,EAAEN,SAAS,CAACO,OAHmB;AAI1CC,IAAAA,KAAK,EAAER,SAAS,CAACO;AAJyB,GAA5B,EAKb,EALa,CAAhB;;AAMAN,EAAAA,OAAO,CAACQ,SAAR,GAAoB,UAASC,MAAT,EAAiB,CACnC;AACD,GAFD;;AAGA,SAAOT,OAAP;AACD,CAXD",
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\models",
      "sourcesContent": [
        "'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const Service = sequelize.define('Service', {\n    key: DataTypes.STRING,\n    name: DataTypes.STRING,\n    investiment: DataTypes.DECIMAL,\n    price: DataTypes.DECIMAL\n  }, {});\n  Service.associate = function(models) {\n    // associations can be defined here\n  };\n  return Service;\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1579815777737
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\",\"filename\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\\\\src\\\\models\\\\provider.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0",
      "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\models\\provider.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\models\\provider.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\models\\provider.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\models",
        "sourceFileName": "provider.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nmodule.exports = function (sequelize, DataTypes) {\n  var Provider = sequelize.define('Provider', {\n    company: DataTypes.STRING,\n    name: DataTypes.STRING,\n    phone: DataTypes.STRING,\n    email: DataTypes.STRING,\n    address: DataTypes.STRING\n  }, {});\n\n  Provider.associate = function (models) {// associations can be defined here\n  };\n\n  return Provider;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb3ZpZGVyLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJzZXF1ZWxpemUiLCJEYXRhVHlwZXMiLCJQcm92aWRlciIsImRlZmluZSIsImNvbXBhbnkiLCJTVFJJTkciLCJuYW1lIiwicGhvbmUiLCJlbWFpbCIsImFkZHJlc3MiLCJhc3NvY2lhdGUiLCJtb2RlbHMiXSwibWFwcGluZ3MiOiJBQUFBOztBQUNBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUIsVUFBQ0MsU0FBRCxFQUFZQyxTQUFaLEVBQTBCO0FBQ3pDLE1BQU1DLFFBQVEsR0FBR0YsU0FBUyxDQUFDRyxNQUFWLENBQWlCLFVBQWpCLEVBQTZCO0FBQzVDQyxJQUFBQSxPQUFPLEVBQUVILFNBQVMsQ0FBQ0ksTUFEeUI7QUFFNUNDLElBQUFBLElBQUksRUFBRUwsU0FBUyxDQUFDSSxNQUY0QjtBQUc1Q0UsSUFBQUEsS0FBSyxFQUFFTixTQUFTLENBQUNJLE1BSDJCO0FBSTVDRyxJQUFBQSxLQUFLLEVBQUVQLFNBQVMsQ0FBQ0ksTUFKMkI7QUFLNUNJLElBQUFBLE9BQU8sRUFBRVIsU0FBUyxDQUFDSTtBQUx5QixHQUE3QixFQU1kLEVBTmMsQ0FBakI7O0FBT0FILEVBQUFBLFFBQVEsQ0FBQ1EsU0FBVCxHQUFxQixVQUFTQyxNQUFULEVBQWlCLENBQ3BDO0FBQ0QsR0FGRDs7QUFHQSxTQUFPVCxRQUFQO0FBQ0QsQ0FaRCIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGFzdXNcXERvY3VtZW50c1xcS3Jvd1xcQXp1bHVsYSAtIEJveWthXFxhenVWZW5kYXMgMS4wXFxzcmNcXG1vZGVscyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0Jztcbm1vZHVsZS5leHBvcnRzID0gKHNlcXVlbGl6ZSwgRGF0YVR5cGVzKSA9PiB7XG4gIGNvbnN0IFByb3ZpZGVyID0gc2VxdWVsaXplLmRlZmluZSgnUHJvdmlkZXInLCB7XG4gICAgY29tcGFueTogRGF0YVR5cGVzLlNUUklORyxcbiAgICBuYW1lOiBEYXRhVHlwZXMuU1RSSU5HLFxuICAgIHBob25lOiBEYXRhVHlwZXMuU1RSSU5HLFxuICAgIGVtYWlsOiBEYXRhVHlwZXMuU1RSSU5HLFxuICAgIGFkZHJlc3M6IERhdGFUeXBlcy5TVFJJTkdcbiAgfSwge30pO1xuICBQcm92aWRlci5hc3NvY2lhdGUgPSBmdW5jdGlvbihtb2RlbHMpIHtcbiAgICAvLyBhc3NvY2lhdGlvbnMgY2FuIGJlIGRlZmluZWQgaGVyZVxuICB9O1xuICByZXR1cm4gUHJvdmlkZXI7XG59OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "provider.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "Provider",
        "define",
        "company",
        "STRING",
        "name",
        "phone",
        "email",
        "address",
        "associate",
        "models"
      ],
      "mappings": "AAAA;;AACAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AACzC,MAAMC,QAAQ,GAAGF,SAAS,CAACG,MAAV,CAAiB,UAAjB,EAA6B;AAC5CC,IAAAA,OAAO,EAAEH,SAAS,CAACI,MADyB;AAE5CC,IAAAA,IAAI,EAAEL,SAAS,CAACI,MAF4B;AAG5CE,IAAAA,KAAK,EAAEN,SAAS,CAACI,MAH2B;AAI5CG,IAAAA,KAAK,EAAEP,SAAS,CAACI,MAJ2B;AAK5CI,IAAAA,OAAO,EAAER,SAAS,CAACI;AALyB,GAA7B,EAMd,EANc,CAAjB;;AAOAH,EAAAA,QAAQ,CAACQ,SAAT,GAAqB,UAASC,MAAT,EAAiB,CACpC;AACD,GAFD;;AAGA,SAAOT,QAAP;AACD,CAZD",
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\models",
      "sourcesContent": [
        "'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const Provider = sequelize.define('Provider', {\n    company: DataTypes.STRING,\n    name: DataTypes.STRING,\n    phone: DataTypes.STRING,\n    email: DataTypes.STRING,\n    address: DataTypes.STRING\n  }, {});\n  Provider.associate = function(models) {\n    // associations can be defined here\n  };\n  return Provider;\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1579815854281
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\",\"filename\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\\\\src\\\\models\\\\order.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0",
      "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\models\\order.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\models\\order.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\models\\order.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\models",
        "sourceFileName": "order.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nmodule.exports = function (sequelize, DataTypes) {\n  var Order = sequelize.define('Order', {\n    clientId: DataTypes.INTEGER,\n    userId: DataTypes.INTEGER,\n    status: DataTypes.BOOLEAN\n  }, {});\n\n  Order.associate = function (models) {\n    Order.belongsTo(models.User);\n    Order.belongsTo(models.Client);\n    Order.OrderItems = Order.hasMany(models.OrderItem);\n    Order.hasMany(models.Sale);\n  };\n\n  return Order;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9yZGVyLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJzZXF1ZWxpemUiLCJEYXRhVHlwZXMiLCJPcmRlciIsImRlZmluZSIsImNsaWVudElkIiwiSU5URUdFUiIsInVzZXJJZCIsInN0YXR1cyIsIkJPT0xFQU4iLCJhc3NvY2lhdGUiLCJtb2RlbHMiLCJiZWxvbmdzVG8iLCJVc2VyIiwiQ2xpZW50IiwiT3JkZXJJdGVtcyIsImhhc01hbnkiLCJPcmRlckl0ZW0iLCJTYWxlIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFDQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUNDLFNBQUQsRUFBWUMsU0FBWixFQUEwQjtBQUN6QyxNQUFNQyxLQUFLLEdBQUdGLFNBQVMsQ0FBQ0csTUFBVixDQUFpQixPQUFqQixFQUEwQjtBQUN0Q0MsSUFBQUEsUUFBUSxFQUFFSCxTQUFTLENBQUNJLE9BRGtCO0FBRXRDQyxJQUFBQSxNQUFNLEVBQUVMLFNBQVMsQ0FBQ0ksT0FGb0I7QUFHdENFLElBQUFBLE1BQU0sRUFBRU4sU0FBUyxDQUFDTztBQUhvQixHQUExQixFQUlYLEVBSlcsQ0FBZDs7QUFLQU4sRUFBQUEsS0FBSyxDQUFDTyxTQUFOLEdBQWtCLFVBQVNDLE1BQVQsRUFBaUI7QUFDakNSLElBQUFBLEtBQUssQ0FBQ1MsU0FBTixDQUFnQkQsTUFBTSxDQUFDRSxJQUF2QjtBQUNBVixJQUFBQSxLQUFLLENBQUNTLFNBQU4sQ0FBZ0JELE1BQU0sQ0FBQ0csTUFBdkI7QUFDQVgsSUFBQUEsS0FBSyxDQUFDWSxVQUFOLEdBQWtCWixLQUFLLENBQUNhLE9BQU4sQ0FBY0wsTUFBTSxDQUFDTSxTQUFyQixDQUFsQjtBQUNBZCxJQUFBQSxLQUFLLENBQUNhLE9BQU4sQ0FBY0wsTUFBTSxDQUFDTyxJQUFyQjtBQUNELEdBTEQ7O0FBTUEsU0FBT2YsS0FBUDtBQUNELENBYkQiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxhc3VzXFxEb2N1bWVudHNcXEtyb3dcXEF6dWx1bGEgLSBCb3lrYVxcYXp1VmVuZGFzIDEuMFxcc3JjXFxtb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5tb2R1bGUuZXhwb3J0cyA9IChzZXF1ZWxpemUsIERhdGFUeXBlcykgPT4ge1xuICBjb25zdCBPcmRlciA9IHNlcXVlbGl6ZS5kZWZpbmUoJ09yZGVyJywge1xuICAgIGNsaWVudElkOiBEYXRhVHlwZXMuSU5URUdFUixcbiAgICB1c2VySWQ6IERhdGFUeXBlcy5JTlRFR0VSLFxuICAgIHN0YXR1czogRGF0YVR5cGVzLkJPT0xFQU5cbiAgfSwge30pO1xuICBPcmRlci5hc3NvY2lhdGUgPSBmdW5jdGlvbihtb2RlbHMpIHtcbiAgICBPcmRlci5iZWxvbmdzVG8obW9kZWxzLlVzZXIpXG4gICAgT3JkZXIuYmVsb25nc1RvKG1vZGVscy5DbGllbnQpXG4gICAgT3JkZXIuT3JkZXJJdGVtcz0gT3JkZXIuaGFzTWFueShtb2RlbHMuT3JkZXJJdGVtKVxuICAgIE9yZGVyLmhhc01hbnkobW9kZWxzLlNhbGUpXG4gIH07XG4gIHJldHVybiBPcmRlcjtcbn07Il19",
    "map": {
      "version": 3,
      "sources": [
        "order.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "Order",
        "define",
        "clientId",
        "INTEGER",
        "userId",
        "status",
        "BOOLEAN",
        "associate",
        "models",
        "belongsTo",
        "User",
        "Client",
        "OrderItems",
        "hasMany",
        "OrderItem",
        "Sale"
      ],
      "mappings": "AAAA;;AACAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AACzC,MAAMC,KAAK,GAAGF,SAAS,CAACG,MAAV,CAAiB,OAAjB,EAA0B;AACtCC,IAAAA,QAAQ,EAAEH,SAAS,CAACI,OADkB;AAEtCC,IAAAA,MAAM,EAAEL,SAAS,CAACI,OAFoB;AAGtCE,IAAAA,MAAM,EAAEN,SAAS,CAACO;AAHoB,GAA1B,EAIX,EAJW,CAAd;;AAKAN,EAAAA,KAAK,CAACO,SAAN,GAAkB,UAASC,MAAT,EAAiB;AACjCR,IAAAA,KAAK,CAACS,SAAN,CAAgBD,MAAM,CAACE,IAAvB;AACAV,IAAAA,KAAK,CAACS,SAAN,CAAgBD,MAAM,CAACG,MAAvB;AACAX,IAAAA,KAAK,CAACY,UAAN,GAAkBZ,KAAK,CAACa,OAAN,CAAcL,MAAM,CAACM,SAArB,CAAlB;AACAd,IAAAA,KAAK,CAACa,OAAN,CAAcL,MAAM,CAACO,IAArB;AACD,GALD;;AAMA,SAAOf,KAAP;AACD,CAbD",
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\models",
      "sourcesContent": [
        "'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const Order = sequelize.define('Order', {\n    clientId: DataTypes.INTEGER,\n    userId: DataTypes.INTEGER,\n    status: DataTypes.BOOLEAN\n  }, {});\n  Order.associate = function(models) {\n    Order.belongsTo(models.User)\n    Order.belongsTo(models.Client)\n    Order.OrderItems= Order.hasMany(models.OrderItem)\n    Order.hasMany(models.Sale)\n  };\n  return Order;\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1579907826412
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\",\"filename\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\\\\src\\\\models\\\\orderitem.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0",
      "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\models\\orderitem.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\models\\orderitem.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\models\\orderitem.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\models",
        "sourceFileName": "orderitem.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nmodule.exports = function (sequelize, DataTypes) {\n  var OrderItem = sequelize.define('OrderItem', {\n    orderId: DataTypes.INTEGER,\n    productId: DataTypes.INTEGER,\n    quantity: DataTypes.INTEGER,\n    price: DataTypes.DECIMAL\n  }, {});\n\n  OrderItem.associate = function (models) {\n    OrderItem.belongsTo(models.Order);\n    OrderItem.Product = OrderItem.belongsTo(models.Product);\n  };\n\n  return OrderItem;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9yZGVyaXRlbS5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwic2VxdWVsaXplIiwiRGF0YVR5cGVzIiwiT3JkZXJJdGVtIiwiZGVmaW5lIiwib3JkZXJJZCIsIklOVEVHRVIiLCJwcm9kdWN0SWQiLCJxdWFudGl0eSIsInByaWNlIiwiREVDSU1BTCIsImFzc29jaWF0ZSIsIm1vZGVscyIsImJlbG9uZ3NUbyIsIk9yZGVyIiwiUHJvZHVjdCJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBQ0FBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixVQUFDQyxTQUFELEVBQVlDLFNBQVosRUFBMEI7QUFDekMsTUFBTUMsU0FBUyxHQUFHRixTQUFTLENBQUNHLE1BQVYsQ0FBaUIsV0FBakIsRUFBOEI7QUFDOUNDLElBQUFBLE9BQU8sRUFBRUgsU0FBUyxDQUFDSSxPQUQyQjtBQUU5Q0MsSUFBQUEsU0FBUyxFQUFFTCxTQUFTLENBQUNJLE9BRnlCO0FBRzlDRSxJQUFBQSxRQUFRLEVBQUVOLFNBQVMsQ0FBQ0ksT0FIMEI7QUFJOUNHLElBQUFBLEtBQUssRUFBRVAsU0FBUyxDQUFDUTtBQUo2QixHQUE5QixFQUtmLEVBTGUsQ0FBbEI7O0FBTUFQLEVBQUFBLFNBQVMsQ0FBQ1EsU0FBVixHQUFzQixVQUFTQyxNQUFULEVBQWlCO0FBQ3JDVCxJQUFBQSxTQUFTLENBQUNVLFNBQVYsQ0FBb0JELE1BQU0sQ0FBQ0UsS0FBM0I7QUFDQVgsSUFBQUEsU0FBUyxDQUFDWSxPQUFWLEdBQW1CWixTQUFTLENBQUNVLFNBQVYsQ0FBb0JELE1BQU0sQ0FBQ0csT0FBM0IsQ0FBbkI7QUFFRCxHQUpEOztBQUtBLFNBQU9aLFNBQVA7QUFDRCxDQWJEIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcYXN1c1xcRG9jdW1lbnRzXFxLcm93XFxBenVsdWxhIC0gQm95a2FcXGF6dVZlbmRhcyAxLjBcXHNyY1xcbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xubW9kdWxlLmV4cG9ydHMgPSAoc2VxdWVsaXplLCBEYXRhVHlwZXMpID0+IHtcbiAgY29uc3QgT3JkZXJJdGVtID0gc2VxdWVsaXplLmRlZmluZSgnT3JkZXJJdGVtJywge1xuICAgIG9yZGVySWQ6IERhdGFUeXBlcy5JTlRFR0VSLFxuICAgIHByb2R1Y3RJZDogRGF0YVR5cGVzLklOVEVHRVIsXG4gICAgcXVhbnRpdHk6IERhdGFUeXBlcy5JTlRFR0VSLFxuICAgIHByaWNlOiBEYXRhVHlwZXMuREVDSU1BTFxuICB9LCB7fSk7XG4gIE9yZGVySXRlbS5hc3NvY2lhdGUgPSBmdW5jdGlvbihtb2RlbHMpIHtcbiAgICBPcmRlckl0ZW0uYmVsb25nc1RvKG1vZGVscy5PcmRlcilcbiAgICBPcmRlckl0ZW0uUHJvZHVjdD0gT3JkZXJJdGVtLmJlbG9uZ3NUbyhtb2RlbHMuUHJvZHVjdClcbiAgICBcbiAgfTtcbiAgcmV0dXJuIE9yZGVySXRlbTtcbn07Il19",
    "map": {
      "version": 3,
      "sources": [
        "orderitem.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "OrderItem",
        "define",
        "orderId",
        "INTEGER",
        "productId",
        "quantity",
        "price",
        "DECIMAL",
        "associate",
        "models",
        "belongsTo",
        "Order",
        "Product"
      ],
      "mappings": "AAAA;;AACAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AACzC,MAAMC,SAAS,GAAGF,SAAS,CAACG,MAAV,CAAiB,WAAjB,EAA8B;AAC9CC,IAAAA,OAAO,EAAEH,SAAS,CAACI,OAD2B;AAE9CC,IAAAA,SAAS,EAAEL,SAAS,CAACI,OAFyB;AAG9CE,IAAAA,QAAQ,EAAEN,SAAS,CAACI,OAH0B;AAI9CG,IAAAA,KAAK,EAAEP,SAAS,CAACQ;AAJ6B,GAA9B,EAKf,EALe,CAAlB;;AAMAP,EAAAA,SAAS,CAACQ,SAAV,GAAsB,UAASC,MAAT,EAAiB;AACrCT,IAAAA,SAAS,CAACU,SAAV,CAAoBD,MAAM,CAACE,KAA3B;AACAX,IAAAA,SAAS,CAACY,OAAV,GAAmBZ,SAAS,CAACU,SAAV,CAAoBD,MAAM,CAACG,OAA3B,CAAnB;AAED,GAJD;;AAKA,SAAOZ,SAAP;AACD,CAbD",
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\models",
      "sourcesContent": [
        "'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const OrderItem = sequelize.define('OrderItem', {\n    orderId: DataTypes.INTEGER,\n    productId: DataTypes.INTEGER,\n    quantity: DataTypes.INTEGER,\n    price: DataTypes.DECIMAL\n  }, {});\n  OrderItem.associate = function(models) {\n    OrderItem.belongsTo(models.Order)\n    OrderItem.Product= OrderItem.belongsTo(models.Product)\n    \n  };\n  return OrderItem;\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1579907848526
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\",\"filename\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\\\\src\\\\models\\\\sale.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0",
      "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\models\\sale.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\models\\sale.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\models\\sale.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\models",
        "sourceFileName": "sale.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nmodule.exports = function (sequelize, DataTypes) {\n  var Sale = sequelize.define('Sale', {\n    orderId: DataTypes.INTEGER,\n    quantity_product: DataTypes.INTEGER,\n    price_total: DataTypes.DECIMAL,\n    discount: DataTypes.DECIMAL,\n    payed: DataTypes.DECIMAL,\n    pay: DataTypes.DECIMAL,\n    iva: DataTypes.DECIMAL,\n    payment_method: DataTypes.STRING,\n    expiration_date: DataTypes.DATE,\n    status: DataTypes.BOOLEAN\n  }, {});\n\n  Sale.associate = function (models) {\n    Sale.belongsTo(models.Order);\n  };\n\n  return Sale;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNhbGUuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInNlcXVlbGl6ZSIsIkRhdGFUeXBlcyIsIlNhbGUiLCJkZWZpbmUiLCJvcmRlcklkIiwiSU5URUdFUiIsInF1YW50aXR5X3Byb2R1Y3QiLCJwcmljZV90b3RhbCIsIkRFQ0lNQUwiLCJkaXNjb3VudCIsInBheWVkIiwicGF5IiwiaXZhIiwicGF5bWVudF9tZXRob2QiLCJTVFJJTkciLCJleHBpcmF0aW9uX2RhdGUiLCJEQVRFIiwic3RhdHVzIiwiQk9PTEVBTiIsImFzc29jaWF0ZSIsIm1vZGVscyIsImJlbG9uZ3NUbyIsIk9yZGVyIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFDQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUNDLFNBQUQsRUFBWUMsU0FBWixFQUEwQjtBQUN6QyxNQUFNQyxJQUFJLEdBQUdGLFNBQVMsQ0FBQ0csTUFBVixDQUFpQixNQUFqQixFQUF5QjtBQUNwQ0MsSUFBQUEsT0FBTyxFQUFFSCxTQUFTLENBQUNJLE9BRGlCO0FBRXBDQyxJQUFBQSxnQkFBZ0IsRUFBRUwsU0FBUyxDQUFDSSxPQUZRO0FBR3BDRSxJQUFBQSxXQUFXLEVBQUVOLFNBQVMsQ0FBQ08sT0FIYTtBQUlwQ0MsSUFBQUEsUUFBUSxFQUFFUixTQUFTLENBQUNPLE9BSmdCO0FBS3BDRSxJQUFBQSxLQUFLLEVBQUVULFNBQVMsQ0FBQ08sT0FMbUI7QUFNcENHLElBQUFBLEdBQUcsRUFBRVYsU0FBUyxDQUFDTyxPQU5xQjtBQU9wQ0ksSUFBQUEsR0FBRyxFQUFFWCxTQUFTLENBQUNPLE9BUHFCO0FBUXBDSyxJQUFBQSxjQUFjLEVBQUVaLFNBQVMsQ0FBQ2EsTUFSVTtBQVNwQ0MsSUFBQUEsZUFBZSxFQUFFZCxTQUFTLENBQUNlLElBVFM7QUFVcENDLElBQUFBLE1BQU0sRUFBRWhCLFNBQVMsQ0FBQ2lCO0FBVmtCLEdBQXpCLEVBV1YsRUFYVSxDQUFiOztBQVlBaEIsRUFBQUEsSUFBSSxDQUFDaUIsU0FBTCxHQUFpQixVQUFTQyxNQUFULEVBQWlCO0FBQ2hDbEIsSUFBQUEsSUFBSSxDQUFDbUIsU0FBTCxDQUFlRCxNQUFNLENBQUNFLEtBQXRCO0FBQ0QsR0FGRDs7QUFHQSxTQUFPcEIsSUFBUDtBQUNELENBakJEIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcYXN1c1xcRG9jdW1lbnRzXFxLcm93XFxBenVsdWxhIC0gQm95a2FcXGF6dVZlbmRhcyAxLjBcXHNyY1xcbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xubW9kdWxlLmV4cG9ydHMgPSAoc2VxdWVsaXplLCBEYXRhVHlwZXMpID0+IHtcbiAgY29uc3QgU2FsZSA9IHNlcXVlbGl6ZS5kZWZpbmUoJ1NhbGUnLCB7XG4gICAgb3JkZXJJZDogRGF0YVR5cGVzLklOVEVHRVIsXG4gICAgcXVhbnRpdHlfcHJvZHVjdDogRGF0YVR5cGVzLklOVEVHRVIsXG4gICAgcHJpY2VfdG90YWw6IERhdGFUeXBlcy5ERUNJTUFMLFxuICAgIGRpc2NvdW50OiBEYXRhVHlwZXMuREVDSU1BTCxcbiAgICBwYXllZDogRGF0YVR5cGVzLkRFQ0lNQUwsXG4gICAgcGF5OiBEYXRhVHlwZXMuREVDSU1BTCxcbiAgICBpdmE6IERhdGFUeXBlcy5ERUNJTUFMLFxuICAgIHBheW1lbnRfbWV0aG9kOiBEYXRhVHlwZXMuU1RSSU5HLFxuICAgIGV4cGlyYXRpb25fZGF0ZTogRGF0YVR5cGVzLkRBVEUsXG4gICAgc3RhdHVzOiBEYXRhVHlwZXMuQk9PTEVBTlxuICB9LCB7fSk7XG4gIFNhbGUuYXNzb2NpYXRlID0gZnVuY3Rpb24obW9kZWxzKSB7XG4gICAgU2FsZS5iZWxvbmdzVG8obW9kZWxzLk9yZGVyKVxuICB9O1xuICByZXR1cm4gU2FsZTtcbn07Il19",
    "map": {
      "version": 3,
      "sources": [
        "sale.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "Sale",
        "define",
        "orderId",
        "INTEGER",
        "quantity_product",
        "price_total",
        "DECIMAL",
        "discount",
        "payed",
        "pay",
        "iva",
        "payment_method",
        "STRING",
        "expiration_date",
        "DATE",
        "status",
        "BOOLEAN",
        "associate",
        "models",
        "belongsTo",
        "Order"
      ],
      "mappings": "AAAA;;AACAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AACzC,MAAMC,IAAI,GAAGF,SAAS,CAACG,MAAV,CAAiB,MAAjB,EAAyB;AACpCC,IAAAA,OAAO,EAAEH,SAAS,CAACI,OADiB;AAEpCC,IAAAA,gBAAgB,EAAEL,SAAS,CAACI,OAFQ;AAGpCE,IAAAA,WAAW,EAAEN,SAAS,CAACO,OAHa;AAIpCC,IAAAA,QAAQ,EAAER,SAAS,CAACO,OAJgB;AAKpCE,IAAAA,KAAK,EAAET,SAAS,CAACO,OALmB;AAMpCG,IAAAA,GAAG,EAAEV,SAAS,CAACO,OANqB;AAOpCI,IAAAA,GAAG,EAAEX,SAAS,CAACO,OAPqB;AAQpCK,IAAAA,cAAc,EAAEZ,SAAS,CAACa,MARU;AASpCC,IAAAA,eAAe,EAAEd,SAAS,CAACe,IATS;AAUpCC,IAAAA,MAAM,EAAEhB,SAAS,CAACiB;AAVkB,GAAzB,EAWV,EAXU,CAAb;;AAYAhB,EAAAA,IAAI,CAACiB,SAAL,GAAiB,UAASC,MAAT,EAAiB;AAChClB,IAAAA,IAAI,CAACmB,SAAL,CAAeD,MAAM,CAACE,KAAtB;AACD,GAFD;;AAGA,SAAOpB,IAAP;AACD,CAjBD",
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\models",
      "sourcesContent": [
        "'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const Sale = sequelize.define('Sale', {\n    orderId: DataTypes.INTEGER,\n    quantity_product: DataTypes.INTEGER,\n    price_total: DataTypes.DECIMAL,\n    discount: DataTypes.DECIMAL,\n    payed: DataTypes.DECIMAL,\n    pay: DataTypes.DECIMAL,\n    iva: DataTypes.DECIMAL,\n    payment_method: DataTypes.STRING,\n    expiration_date: DataTypes.DATE,\n    status: DataTypes.BOOLEAN\n  }, {});\n  Sale.associate = function(models) {\n    Sale.belongsTo(models.Order)\n  };\n  return Sale;\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1579907850707
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\",\"filename\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\\\\src\\\\routes\\\\users copy.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0",
      "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes\\users copy.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes\\users copy.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes\\users copy.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes",
        "sourceFileName": "users copy.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _bcrypt = _interopRequireDefault(require(\"bcrypt\"));\n\nvar _jwt = _interopRequireDefault(require(\"../utils/jwt.util\"));\n\nvar _models = _interopRequireDefault(require(\"../models\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.exports = function (app) {\n  app.get('/api/token_life', function (req, res) {\n    var headerAuth = req.headers['authorization'];\n\n    var userId = _jwt[\"default\"].getUserId(headerAuth);\n\n    if (userId < 0) return res.json({\n      'error': 'Wrong Token',\n      'code': 200,\n      'access': false\n    });else return res.json({\n      'code': 1,\n      'access': true\n    });\n  }); // List USER V\n\n  app.get('/api/users', function (req, res) {\n    _models[\"default\"].User.findAll().then(function (users) {\n      res.json({\n        users: users\n      });\n    });\n  }), function checkUser(id, username) {\n    _models[\"default\"].User.findOne({\n      attributes: [\"id\", \"username\"],\n      where: {\n        username: username,\n        id: id\n      }\n    }).then(function (userFound) {\n      if (userFound) return true;else return false;\n    })[\"catch\"](function (err) {\n      return false;\n    });\n  }; // REGISTER USER V\n\n  app.post('/api/users', function (req, res) {\n    // Params\n    var User = {\n      email: req.body.email,\n      username: req.body.username,\n      status: req.body.status,\n      password: req.body.password,\n      isAdmin: req.body.isAdmin,\n      info: req.body.info\n    };\n    if (User.email == null || User.username == null || User.password == null) return res.json({\n      'error': 'Missing parameters',\n      'code': 10\n    }); // Verify if exist into models.users\n\n    _models[\"default\"].User.findOne({\n      attributes: [\"username\"],\n      where: {\n        username: User.username\n      }\n    }).then(function (userFound) {\n      if (!userFound) {\n        _bcrypt[\"default\"].hash(User.password, 5, function (err, bcryptedPassword) {\n          var newUser = _models[\"default\"].User.create({\n            email: User.email,\n            username: User.username,\n            status: User.status,\n            password: bcryptedPassword,\n            isAdmin: User.isAdmin,\n            info: User.info\n          }).then(function (users) {\n            return res.json({\n              users: users,\n              'code': 1\n            });\n          })[\"catch\"](function (err) {\n            return res.json({\n              'error': 'Cannot add user',\n              'code': 0\n            });\n          });\n        });\n      } else {\n        return res.json({\n          'error': 'User already exist',\n          'code': 11\n        });\n      }\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify user',\n        err: err,\n        'code': 0\n      });\n    });\n  }); // UPDATE USER V\n\n  app.put('/api/users', function (req, res) {\n    var headerAuth = req.headers['authorization'];\n\n    var userId = _jwt[\"default\"].getUserId(headerAuth); // Params\n\n\n    var User = {\n      email: req.body.email,\n      username: req.body.username,\n      status: req.body.status,\n      isAdmin: req.body.isAdmin,\n      info: req.body.info\n    }; // Verify if exist into models.users\n\n    _models[\"default\"].User.findOne({\n      attributes: [\"id\"],\n      where: {\n        id: userId\n      }\n    }).then(function (userFound2) {\n      var newUser = userFound2.update({\n        email: User.email,\n        username: User.username,\n        status: User.status,\n        isAdmin: User.isAdmin,\n        info: User.info\n      }).then(function (users) {\n        return res.json({\n          users: users,\n          'code': 1\n        });\n      })[\"catch\"](function (err) {\n        return res.json({\n          'error': 'Cannot Update user',\n          'code': 0\n        });\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify user',\n        err: err,\n        'code': 0\n      });\n    });\n  }); // LOGIN V\n\n  app.post('/api/login', function (req, res) {\n    var User = {\n      username: req.body.username,\n      password: req.body.password\n    };\n\n    if (User.username == null || User.password == null) {\n      return res.json({\n        'error': 'missing parameters',\n        'code': 10\n      });\n    } // Verify\n\n\n    _models[\"default\"].User.findOne({\n      where: {\n        username: User.username\n      }\n    }).then(function (userFound) {\n      if (userFound) {\n        _bcrypt[\"default\"].compare(User.password, userFound.password, function (errBycrypt, resBycrypt) {\n          if (resBycrypt) {\n            return res.json({\n              'users': userFound,\n              'token': _jwt[\"default\"].generateTokenForUser(userFound),\n              'code': 12\n            });\n          } else {\n            return res.json({\n              'error': 'Invalid password',\n              'code': 111\n            });\n          }\n        });\n      } else {\n        return res.json({\n          'error': 'User does not exist',\n          'code': 110\n        });\n      }\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify user',\n        err: err,\n        'code': 0\n      });\n    });\n  }); // Get user profile V\n\n  app.get('/api/users/profile', function (req, res) {\n    var headerAuth = req.headers['authorization'];\n\n    var userId = _jwt[\"default\"].getUserId(headerAuth);\n\n    if (userId < 0) return res.json({\n      'error': 'Wrong Token',\n      'code': 200\n    });\n\n    _models[\"default\"].User.findOne({\n      attributes: ['id', 'email', 'username', 'info', 'isAdmin'],\n      where: {\n        id: userId\n      }\n    }).then(function (users) {\n      if (users) {\n        return res.json({\n          users: users,\n          'code': 1\n        });\n      } else {\n        return res.json({\n          'error': 'User does not exist',\n          'code': 110\n        });\n      }\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Cannot fetch user',\n        'code': 0\n      });\n    });\n  }); // Update password User V\n\n  app.put('/api/users/profile', function (req, res) {\n    var headerAuth = req.headers['authorization'];\n\n    var userId = _jwt[\"default\"].getUserId(headerAuth);\n\n    var passwordOld = req.body.passwordOld;\n    var passwordNew = req.body.passwordNew;\n    if (userId < 0) return res.json({\n      'error': 'Wrong Token',\n      'code': 200\n    });\n\n    _models[\"default\"].User.findOne({\n      where: {\n        id: userId\n      }\n    }).then(function (U) {\n      _bcrypt[\"default\"].compare(passwordOld, U.password, function (errBycrypt, resBycrypt) {\n        if (resBycrypt) {\n          _bcrypt[\"default\"].hash(passwordNew, 5, function (err, bcryptedPassword) {\n            var newUser = U.update({\n              password: bcryptedPassword\n            }).then(function (users) {\n              return res.json({\n                users: users,\n                'code': 1\n              });\n            })[\"catch\"](function (err) {\n              return res.json({\n                'error': 'Cannot add user',\n                'code': 0\n              });\n            });\n          });\n        } else {\n          return res.json({\n            'error': 'Old password invalid',\n            'code': 111\n          });\n        }\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify user',\n        err: err,\n        'code': 0\n      });\n    });\n  }); // Update password UserADMIN\n\n  app.put('/api/users/password', function (req, res) {\n    var headerAuth = req.headers['authorization'];\n\n    var userId = _jwt[\"default\"].getUserId(headerAuth);\n\n    var idUserNormal = req.body.idUserNormal;\n    var passwordNew = '123456';\n    if (userId < 0) return res.json({\n      'error': 'Wrong Token',\n      'code': 200\n    });\n\n    _models[\"default\"].User.findOne({\n      where: {\n        id: userId\n      }\n    }).then(function (UX) {\n      _models[\"default\"].User.findOne({\n        where: {\n          id: idUserNormal\n        }\n      }).then(function (U) {\n        if (UX.isAdmin == true) {\n          _bcrypt[\"default\"].hash(passwordNew, 5, function (err, bcryptedPassword) {\n            U.update({\n              password: bcryptedPassword\n            }).then(function (users) {\n              return res.json({\n                users: users,\n                'code': 1\n              });\n            })[\"catch\"](function (err) {\n              return res.json({\n                'error': 'Cannot Update password user',\n                'code': 0\n              });\n            });\n          });\n        } else {\n          return res.json({\n            'error': 'Only admin',\n            err: err,\n            'code': 333\n          });\n        }\n      })[\"catch\"](function (err) {\n        return res.json({\n          'error': 'Unable to verify user',\n          err: err,\n          'code': 0\n        });\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify user!',\n        err: err,\n        'code': 0\n      });\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "users copy.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "get",
        "req",
        "res",
        "headerAuth",
        "headers",
        "userId",
        "jwtUtil",
        "getUserId",
        "json",
        "models",
        "User",
        "findAll",
        "then",
        "users",
        "checkUser",
        "id",
        "username",
        "findOne",
        "attributes",
        "where",
        "userFound",
        "err",
        "post",
        "email",
        "body",
        "status",
        "password",
        "isAdmin",
        "info",
        "bcrypt",
        "hash",
        "bcryptedPassword",
        "newUser",
        "create",
        "put",
        "userFound2",
        "update",
        "compare",
        "errBycrypt",
        "resBycrypt",
        "generateTokenForUser",
        "passwordOld",
        "passwordNew",
        "U",
        "idUserNormal",
        "UX"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes",
      "sourcesContent": [
        "import bcrypt from 'bcrypt'\r\nimport jwtUtil from '../utils/jwt.util'\r\nimport models from '../models'\r\n\r\n\r\nmodule.exports = app => {\r\n\r\n    app.get('/api/token_life', (req, res)=>{\r\n        var headerAuth = req.headers['authorization']\r\n        var userId = jwtUtil.getUserId(headerAuth)\r\n\r\n        if (userId < 0)\r\n            return res.json({ 'error': 'Wrong Token', 'code': 200, 'access': false })\r\n        else\r\n            return res.json({ 'code': 1, 'access': true })\r\n    })\r\n    // List USER V\r\n    app.get('/api/users', (req, res) => {\r\n        models.User.findAll().then((users) => {\r\n\r\n            res.json({\r\n                users\r\n            })\r\n        })\r\n    }),\r\n        function checkUser(id, username) {\r\n            models.User.findOne({\r\n                attributes: [\"id\", \"username\"],\r\n                where: { username: username, id: id }\r\n            })\r\n                .then((userFound) => {\r\n                    if (userFound)\r\n                        return true\r\n                    else\r\n                        return false\r\n                })\r\n                .catch((err) => {\r\n                    return false\r\n                })\r\n        }\r\n    // REGISTER USER V\r\n    app.post('/api/users', (req, res) => {\r\n        // Params\r\n        var User = {\r\n            email: req.body.email,\r\n            username: req.body.username,\r\n            status: req.body.status,\r\n            password: req.body.password,\r\n            isAdmin: req.body.isAdmin,\r\n            info: req.body.info\r\n        }\r\n\r\n        if (User.email == null || User.username == null || User.password == null)\r\n            return res.json({ 'error': 'Missing parameters', 'code': 10 })\r\n        // Verify if exist into models.users\r\n        models.User.findOne({\r\n            attributes: [\"username\"],\r\n            where: { username: User.username }\r\n        })\r\n            .then((userFound) => {\r\n                if (!userFound) {\r\n                    bcrypt.hash(User.password, 5, (err, bcryptedPassword) => {\r\n                        var newUser = models.User.create({\r\n                            email: User.email,\r\n                            username: User.username,\r\n                            status: User.status,\r\n                            password: bcryptedPassword,\r\n                            isAdmin: User.isAdmin,\r\n                            info: User.info\r\n                        })\r\n                            .then((users) => {\r\n                                return res.json({ users, 'code': 1 })\r\n                            })\r\n                            .catch((err) => {\r\n                                return res.json({ 'error': 'Cannot add user', 'code': 0 })\r\n                            })\r\n                    })\r\n                } else {\r\n                    return res.json({ 'error': 'User already exist', 'code': 11 })\r\n                }\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify user', err, 'code': 0 })\r\n            })\r\n    })\r\n\r\n    // UPDATE USER V\r\n    app.put('/api/users', (req, res) => {\r\n        var headerAuth = req.headers['authorization']\r\n        var userId = jwtUtil.getUserId(headerAuth)\r\n        // Params\r\n        var User = {\r\n            email: req.body.email,\r\n            username: req.body.username,\r\n            status: req.body.status,\r\n            isAdmin: req.body.isAdmin,\r\n            info: req.body.info\r\n        }\r\n\r\n        // Verify if exist into models.users\r\n\r\n        models.User.findOne({\r\n            attributes: [\"id\"],\r\n            where: { id: userId }\r\n        })\r\n            .then((userFound2) => {\r\n                var newUser = userFound2.update({\r\n                    email: User.email,\r\n                    username: User.username,\r\n                    status: User.status,\r\n                    isAdmin: User.isAdmin,\r\n                    info: User.info\r\n                })\r\n                    .then((users) => {\r\n                        return res.json({ users, 'code': 1 })\r\n                    })\r\n                    .catch((err) => {\r\n                        return res.json({ 'error': 'Cannot Update user', 'code': 0 })\r\n                    })\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify user', err, 'code': 0 })\r\n            })\r\n\r\n    })\r\n    // LOGIN V\r\n    app.post('/api/login', (req, res) => {\r\n        var User = {\r\n            username: req.body.username,\r\n            password: req.body.password\r\n        }\r\n\r\n        if (User.username == null || User.password == null) {\r\n            return res.json({ 'error': 'missing parameters', 'code': 10 })\r\n        }\r\n\r\n        // Verify\r\n\r\n        models.User.findOne({\r\n            where: { username: User.username }\r\n        })\r\n            .then((userFound) => {\r\n                if (userFound) {\r\n                    bcrypt.compare(User.password, userFound.password, (errBycrypt, resBycrypt) => {\r\n                        if (resBycrypt) {\r\n                            return res.json({ 'users': userFound, 'token': jwtUtil.generateTokenForUser(userFound), 'code': 12 })\r\n                        } else {\r\n                            return res.json({ 'error': 'Invalid password', 'code': 111 })\r\n                        }\r\n                    })\r\n                } else {\r\n                    return res.json({ 'error': 'User does not exist', 'code': 110 })\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify user', err, 'code': 0 })\r\n            })\r\n    })\r\n\r\n    // Get user profile V\r\n    app.get('/api/users/profile', (req, res) => {\r\n        var headerAuth = req.headers['authorization']\r\n        var userId = jwtUtil.getUserId(headerAuth)\r\n\r\n        if (userId < 0)\r\n            return res.json({ 'error': 'Wrong Token', 'code': 200 })\r\n\r\n        models.User.findOne({\r\n            attributes: ['id', 'email', 'username', 'info', 'isAdmin'],\r\n            where: { id: userId }\r\n        })\r\n            .then((users) => {\r\n                if (users) {\r\n                    return res.json({ users, 'code': 1 })\r\n                } else {\r\n                    return res.json({ 'error': 'User does not exist', 'code': 110 })\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Cannot fetch user', 'code': 0 })\r\n            })\r\n    })\r\n\r\n    // Update password User V\r\n    app.put('/api/users/profile', (req, res) => {\r\n        var headerAuth = req.headers['authorization']\r\n        var userId = jwtUtil.getUserId(headerAuth)\r\n        var passwordOld = req.body.passwordOld\r\n        var passwordNew = req.body.passwordNew\r\n\r\n        if (userId < 0)\r\n            return res.json({ 'error': 'Wrong Token', 'code': 200 })\r\n\r\n\r\n        models.User.findOne({ where: { id: userId } })\r\n            .then((U) => {\r\n\r\n                bcrypt.compare(passwordOld, U.password, (errBycrypt, resBycrypt) => {\r\n                    if (resBycrypt) {\r\n                        bcrypt.hash(passwordNew, 5, (err, bcryptedPassword) => {\r\n                            var newUser = U.update({ password: bcryptedPassword })\r\n                                .then((users) => {\r\n                                    return res.json({ users, 'code': 1 })\r\n                                })\r\n                                .catch((err) => {\r\n                                    return res.json({ 'error': 'Cannot add user', 'code': 0 })\r\n                                })\r\n                        })\r\n                    } else {\r\n                        return res.json({ 'error': 'Old password invalid', 'code': 111 })\r\n                    }\r\n                })\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify user', err, 'code': 0 })\r\n            })\r\n\r\n    })\r\n\r\n    // Update password UserADMIN\r\n    app.put('/api/users/password', (req, res) => {\r\n        var headerAuth = req.headers['authorization']\r\n        var userId = jwtUtil.getUserId(headerAuth)\r\n        var idUserNormal = req.body.idUserNormal\r\n        var passwordNew = '123456'\r\n\r\n        if (userId < 0)\r\n            return res.json({ 'error': 'Wrong Token', 'code': 200 })\r\n\r\n        models.User.findOne({ where: { id: userId } })\r\n            .then((UX) => {\r\n                models.User.findOne({ where: { id: idUserNormal } })\r\n                    .then((U) => {\r\n                        if (UX.isAdmin == true) {\r\n                            bcrypt.hash(passwordNew, 5, (err, bcryptedPassword) => {\r\n                                 U.update({ password: bcryptedPassword })\r\n                                    .then((users) => {\r\n                                        return res.json({ users, 'code': 1 })\r\n                                    })\r\n                                    .catch((err) => {\r\n                                        return res.json({ 'error': 'Cannot Update password user', 'code': 0 })\r\n                                    })\r\n                            })\r\n                        } else {\r\n                            return res.json({ 'error': 'Only admin', err, 'code': 333 })\r\n                        }\r\n                    })\r\n                    .catch((err) => {\r\n                        return res.json({ 'error': 'Unable to verify user', err, 'code': 0 })\r\n                    })\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify user!', err, 'code': 0 })\r\n            })\r\n    })\r\n}\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1579823237603
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\",\"filename\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\\\\src\\\\routes\\\\product.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0",
      "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes\\product.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes\\product.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes\\product.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes",
        "sourceFileName": "product.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _verifyToken = _interopRequireDefault(require(\"../utils/verifyToken\"));\n\nvar _models = _interopRequireDefault(require(\"../models\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.exports = function (app) {\n  // List Product/service\n  app.get('/api/products', _verifyToken[\"default\"], function (req, res) {\n    _models[\"default\"].Product.findAll({\n      include: [_models[\"default\"].Category]\n    }).then(function (products) {\n      res.json({\n        products: products\n      });\n    });\n  }), // REGISTER Product V\n  app.post('/api/products', function (req, res) {\n    // Params\n    var product = req.body; // Verify if exist into models.products\n\n    _models[\"default\"].Product.findOne({\n      attributes: [\"key\"],\n      where: {\n        key: product.key\n      }\n    }).then(function (productFound) {\n      if (!productFound) {\n        _models[\"default\"].Product.create(product).then(function (products) {\n          return res.json({\n            products: products,\n            'code': 1\n          });\n        })[\"catch\"](function (err) {\n          return res.json({\n            'error': 'Cannot add product',\n            'code': 0\n          });\n        });\n      } else {\n        return res.json({\n          'error': 'product already exist',\n          'code': 11\n        });\n      }\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify product',\n        err: err,\n        'code': -1\n      });\n    });\n  }); // UPDATE Product\n\n  app.put('/api/products/:id', function (req, res) {\n    // Params\n    var product = req.body; // Verify if exist into models.products\n\n    _models[\"default\"].Product.findOne({\n      attributes: [\"id\"],\n      where: {\n        id: req.params.id\n      }\n    }).then(function (productFound2) {\n      productFound2.update(product).then(function (products) {\n        return res.json({\n          products: products,\n          'code': 1\n        });\n      })[\"catch\"](function (err) {\n        return res.json({\n          'error': 'Cannot Update product',\n          'code': 0\n        });\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify product',\n        err: err,\n        'code': 0\n      });\n    });\n  }); // Delete Product\n\n  app[\"delete\"]('/api/products/:id', function (req, res) {\n    // Params\n    var product = {\n      id: req.params.id\n    }; // Verify if exist into models.products\n\n    _models[\"default\"].Product.findOne({\n      attributes: [\"id\"],\n      where: {\n        id: product.id\n      }\n    }).then(function (productFound2) {\n      productFound2.destroy(product).then(function () {\n        return res.json({\n          'status': 'success',\n          'code': 1\n        });\n      })[\"catch\"](function (err) {\n        return res.json({\n          'error': 'Cannot Delete product',\n          'code': 0\n        });\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify product',\n        err: err,\n        'code': 0\n      });\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "product.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "get",
        "verifyToken",
        "req",
        "res",
        "models",
        "Product",
        "findAll",
        "include",
        "Category",
        "then",
        "products",
        "json",
        "post",
        "product",
        "body",
        "findOne",
        "attributes",
        "where",
        "key",
        "productFound",
        "create",
        "err",
        "put",
        "id",
        "params",
        "productFound2",
        "update",
        "destroy"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes",
      "sourcesContent": [
        "import verifyToken from '../utils/verifyToken'\r\nimport models from '../models'\r\n\r\n\r\nmodule.exports = app => {\r\n    \r\n    // List Product/service\r\n    app.get('/api/products',verifyToken,(req, res) => {\r\n\r\n        models.Product.findAll({include:[models.Category]}).then((products) => {\r\n            res.json({\r\n                products\r\n            })\r\n        })\r\n    }),\r\n    // REGISTER Product V\r\n    app.post('/api/products', (req, res) => {\r\n\r\n        // Params\r\n        var product = req.body\r\n\r\n\r\n        // Verify if exist into models.products\r\n        models.Product.findOne({\r\n            attributes: [\"key\"],\r\n            where: { key: product.key }\r\n        })\r\n            .then((productFound) => {\r\n                if (!productFound) {\r\n                    models.Product.create(product)\r\n                        .then((products) => {\r\n                            return res.json({ products, 'code': 1 })\r\n                        })\r\n                        .catch((err) => {\r\n                            return res.json({ 'error': 'Cannot add product', 'code': 0 })\r\n                        })\r\n                } else {\r\n                    return res.json({ 'error': 'product already exist', 'code': 11 })\r\n                }\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify product', err, 'code': -1 })\r\n            })\r\n    })\r\n\r\n    // UPDATE Product\r\n    app.put('/api/products/:id', (req, res) => {\r\n\r\n        // Params\r\n        var product = req.body\r\n\r\n        // Verify if exist into models.products\r\n\r\n        models.Product.findOne({\r\n            attributes: [\"id\"],\r\n            where: { id: req.params.id }\r\n        })\r\n            .then((productFound2) => {\r\n                productFound2.update(product)\r\n                    .then((products) => {\r\n                        return res.json({ products, 'code': 1 })\r\n                    })\r\n                    .catch((err) => {\r\n                        return res.json({ 'error': 'Cannot Update product', 'code': 0 })\r\n                    })\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify product', err, 'code': 0 })\r\n            })\r\n\r\n    })\r\n\r\n     // Delete Product\r\n     app.delete('/api/products/:id',(req, res) => {\r\n\r\n        // Params\r\n        var product = { id:req.params.id}\r\n\r\n        // Verify if exist into models.products\r\n\r\n        models.Product.findOne({\r\n            attributes: [\"id\"],\r\n            where: { id: product.id }\r\n        })\r\n            .then((productFound2) => {\r\n                productFound2.destroy(product)\r\n                    .then(() => {\r\n                        return res.json({ 'status':'success', 'code': 1 })\r\n                    })\r\n                    .catch((err) => {\r\n                        return res.json({ 'error': 'Cannot Delete product', 'code': 0 })\r\n                    })\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify product', err, 'code': 0 })\r\n            })\r\n\r\n    })\r\n   }\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1580563843922
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\",\"filename\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\\\\src\\\\routes\\\\product copy.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0",
      "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes\\product copy.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes\\product copy.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes\\product copy.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes",
        "sourceFileName": "product copy.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _verifyToken = _interopRequireDefault(require(\"../utils/verifyToken\"));\n\nvar _models = _interopRequireDefault(require(\"../models\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.exports = function (app) {\n  // List Product/service\n  app.get('/api/products', _verifyToken[\"default\"], function (req, res) {\n    _models[\"default\"].Product.findAll({\n      include: [_models[\"default\"].Category]\n    }).then(function (products) {\n      res.json({\n        products: products,\n        'Amor': 'Aqui'\n      });\n    });\n  }), // REGISTER USER V\n  app.post('/api/products', function (req, res) {\n    // Params\n    var product = {\n      key: req.body.key,\n      name: req.body.name,\n      unity: req.body.unity,\n      categoryId: req.body.categoryId,\n      quantity: req.body.quantity,\n      purchase: req.body.purchase,\n      sale_price: req.body.sale_price,\n      expiration_date: req.body.expiration_date\n    }; // Verify if exist into models.products\n\n    _models[\"default\"].Product.findOne({\n      attributes: [\"key\"],\n      where: {\n        key: product.key\n      }\n    }).then(function (productFound) {\n      if (!productFound) {\n        _models[\"default\"].Product.create(product).then(function (products) {\n          return res.json({\n            products: products,\n            'code': 1\n          });\n        })[\"catch\"](function (err) {\n          return res.json({\n            'error': 'Cannot add product',\n            'code': 0\n          });\n        });\n      } else {\n        return res.json({\n          'error': 'product already exist',\n          'code': 11\n        });\n      }\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify product',\n        err: err,\n        'code': 0\n      });\n    });\n  }); // UPDATE Product\n\n  app.put('/api/products', function (req, res) {\n    // Params\n    var product = {\n      key: req.body.key,\n      name: req.body.name,\n      unity: req.body.unity,\n      categoryId: req.body.categoryId,\n      quantity: req.body.quantity,\n      purchase: req.body.purchase,\n      sale_price: req.body.sale_price,\n      expiration_date: req.body.expiration_date\n    }; // Verify if exist into models.products\n\n    _models[\"default\"].Product.findOne({\n      attributes: [\"id\"],\n      where: {\n        id: req.body.id\n      }\n    }).then(function (productFound2) {\n      productFound2.update(product).then(function (products) {\n        return res.json({\n          products: products,\n          'code': 1\n        });\n      })[\"catch\"](function (err) {\n        return res.json({\n          'error': 'Cannot Update product',\n          'code': 0\n        });\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify product',\n        err: err,\n        'code': 0\n      });\n    });\n  }); // Delete Product\n\n  app[\"delete\"]('/api/products', function (req, res) {\n    // Params\n    var product = {\n      id: req.body.id\n    }; // Verify if exist into models.products\n\n    _models[\"default\"].Product.findOne({\n      attributes: [\"id\"],\n      where: {\n        id: product.id\n      }\n    }).then(function (productFound2) {\n      productFound2.destroy(product).then(function () {\n        return res.json({\n          'status': 'success',\n          'code': 1\n        });\n      })[\"catch\"](function (err) {\n        return res.json({\n          'error': 'Cannot Delete product',\n          'code': 0\n        });\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify product',\n        err: err,\n        'code': 0\n      });\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "product copy.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "get",
        "verifyToken",
        "req",
        "res",
        "models",
        "Product",
        "findAll",
        "include",
        "Category",
        "then",
        "products",
        "json",
        "post",
        "product",
        "key",
        "body",
        "name",
        "unity",
        "categoryId",
        "quantity",
        "purchase",
        "sale_price",
        "expiration_date",
        "findOne",
        "attributes",
        "where",
        "productFound",
        "create",
        "err",
        "put",
        "id",
        "productFound2",
        "update",
        "destroy"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes",
      "sourcesContent": [
        "import verifyToken from '../utils/verifyToken'\r\nimport models from '../models'\r\n\r\n\r\nmodule.exports = app => {\r\n    \r\n    // List Product/service\r\n    app.get('/api/products',verifyToken,(req, res) => {\r\n\r\n        models.Product.findAll({include:[models.Category]}).then((products) => {\r\n            res.json({\r\n                products, 'Amor':'Aqui'\r\n            })\r\n        })\r\n    }),\r\n    // REGISTER USER V\r\n    app.post('/api/products', (req, res) => {\r\n\r\n        // Params\r\n        var product = {\r\n            key: req.body.key,\r\n            name: req.body.name,\r\n            unity: req.body.unity,\r\n            categoryId: req.body.categoryId,\r\n            quantity: req.body.quantity,\r\n            purchase: req.body.purchase,\r\n            sale_price: req.body.sale_price,\r\n            expiration_date: req.body.expiration_date,\r\n        }\r\n\r\n\r\n        // Verify if exist into models.products\r\n        models.Product.findOne({\r\n            attributes: [\"key\"],\r\n            where: { key: product.key }\r\n        })\r\n            .then((productFound) => {\r\n                if (!productFound) {\r\n                    models.Product.create(product)\r\n                        .then((products) => {\r\n                            return res.json({ products, 'code': 1 })\r\n                        })\r\n                        .catch((err) => {\r\n                            return res.json({ 'error': 'Cannot add product', 'code': 0 })\r\n                        })\r\n                } else {\r\n                    return res.json({ 'error': 'product already exist', 'code': 11 })\r\n                }\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify product', err, 'code': 0 })\r\n            })\r\n    })\r\n\r\n    // UPDATE Product\r\n    app.put('/api/products', (req, res) => {\r\n\r\n        // Params\r\n        var product = {\r\n            key: req.body.key,\r\n            name: req.body.name,\r\n            unity: req.body.unity,\r\n            categoryId: req.body.categoryId,\r\n            quantity: req.body.quantity,\r\n            purchase: req.body.purchase,\r\n            sale_price: req.body.sale_price,\r\n            expiration_date: req.body.expiration_date,\r\n        }\r\n\r\n        // Verify if exist into models.products\r\n\r\n        models.Product.findOne({\r\n            attributes: [\"id\"],\r\n            where: { id: req.body.id }\r\n        })\r\n            .then((productFound2) => {\r\n                productFound2.update(product)\r\n                    .then((products) => {\r\n                        return res.json({ products, 'code': 1 })\r\n                    })\r\n                    .catch((err) => {\r\n                        return res.json({ 'error': 'Cannot Update product', 'code': 0 })\r\n                    })\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify product', err, 'code': 0 })\r\n            })\r\n\r\n    })\r\n\r\n     // Delete Product\r\n     app.delete('/api/products',(req, res) => {\r\n\r\n        // Params\r\n        var product = { id:req.body.id}\r\n\r\n        // Verify if exist into models.products\r\n\r\n        models.Product.findOne({\r\n            attributes: [\"id\"],\r\n            where: { id: product.id }\r\n        })\r\n            .then((productFound2) => {\r\n                productFound2.destroy(product)\r\n                    .then(() => {\r\n                        return res.json({ 'status':'success', 'code': 1 })\r\n                    })\r\n                    .catch((err) => {\r\n                        return res.json({ 'error': 'Cannot Delete product', 'code': 0 })\r\n                    })\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify product', err, 'code': 0 })\r\n            })\r\n\r\n    })\r\n   }\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1579884484740
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\",\"filename\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\\\\src\\\\routes\\\\category.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0",
      "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes\\category.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes\\category.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes\\category.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes",
        "sourceFileName": "category.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _verifyToken = _interopRequireDefault(require(\"../utils/verifyToken\"));\n\nvar _models = _interopRequireDefault(require(\"../models\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.exports = function (app) {\n  // List category/service\n  app.get('/api/categories', _verifyToken[\"default\"], function (req, res) {\n    _models[\"default\"].Category.findAll().then(function (categories) {\n      res.json({\n        categories: categories\n      });\n    });\n  }), // REGISTER USER V\n  app.post('/api/categories', _verifyToken[\"default\"], function (req, res) {\n    // Params\n    var category = req.body; // Verify if exist into models.categories\n\n    _models[\"default\"].Category.findOne({\n      attributes: [\"name\"],\n      where: {\n        name: category.name\n      }\n    }).then(function (categoryFound) {\n      if (!categoryFound) {\n        _models[\"default\"].Category.create(category).then(function (categories) {\n          return res.json({\n            categories: categories,\n            'code': 1\n          });\n        })[\"catch\"](function (err) {\n          return res.json({\n            'error': 'Cannot add category',\n            'code': 0\n          });\n        });\n      } else {\n        return res.json({\n          'error': 'product already exist',\n          'code': 11\n        });\n      }\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify category',\n        err: err,\n        'code': 0\n      });\n    });\n  }); // UPDATE category\n\n  app.put('/api/categories/:id', _verifyToken[\"default\"], function (req, res) {\n    // Params\n    var category = req.body; // Verify if exist into models.categories\n\n    _models[\"default\"].Category.findOne({\n      attributes: [\"id\"],\n      where: {\n        id: req.params.id\n      }\n    }).then(function (categoryFound2) {\n      categoryFound2.update(category).then(function (categories) {\n        return res.json({\n          categories: categories,\n          'code': 1\n        });\n      })[\"catch\"](function (err) {\n        return res.json({\n          'error': 'Cannot Update category',\n          'code': 0\n        });\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify category',\n        err: err,\n        'code': 0\n      });\n    });\n  }); // Delete category\n\n  app[\"delete\"]('/api/categories/:id', _verifyToken[\"default\"], function (req, res) {\n    // Params\n    var category = {\n      id: req.params.id\n    }; // Verify if exist into models.categories\n\n    _models[\"default\"].Category.findOne({\n      attributes: [\"id\"],\n      where: {\n        id: category.id\n      }\n    }).then(function (categoryFound2) {\n      categoryFound2.destroy(category).then(function () {\n        return res.json({\n          'status': 'success',\n          'code': 1\n        });\n      })[\"catch\"](function (err) {\n        return res.json({\n          'error': 'Cannot Delete category',\n          'code': 0\n        });\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify category',\n        err: err,\n        'code': 0\n      });\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "category.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "get",
        "verifyToken",
        "req",
        "res",
        "models",
        "Category",
        "findAll",
        "then",
        "categories",
        "json",
        "post",
        "category",
        "body",
        "findOne",
        "attributes",
        "where",
        "name",
        "categoryFound",
        "create",
        "err",
        "put",
        "id",
        "params",
        "categoryFound2",
        "update",
        "destroy"
      ],
      "mappings": ";;AACA;;AACA;;;;AAGAA,MAAM,CAACC,OAAP,GAAiB,UAAAC,GAAG,EAAI;AAEpB;AACAA,EAAAA,GAAG,CAACC,GAAJ,CAAQ,iBAAR,EAA2BC,uBAA3B,EAAwC,UAACC,GAAD,EAAMC,GAAN,EAAc;AAClDC,uBAAOC,QAAP,CAAgBC,OAAhB,GAA0BC,IAA1B,CAA+B,UAACC,UAAD,EAAgB;AAE3CL,MAAAA,GAAG,CAACM,IAAJ,CAAS;AACLD,QAAAA,UAAU,EAAVA;AADK,OAAT;AAGH,KALD;AAMH,GAPD,GAQA;AACAT,EAAAA,GAAG,CAACW,IAAJ,CAAS,iBAAT,EAA4BT,uBAA5B,EAAyC,UAACC,GAAD,EAAMC,GAAN,EAAc;AACnD;AACA,QAAIQ,QAAQ,GAAGT,GAAG,CAACU,IAAnB,CAFmD,CAInD;;AACAR,uBAAOC,QAAP,CAAgBQ,OAAhB,CAAwB;AACpBC,MAAAA,UAAU,EAAE,CAAC,MAAD,CADQ;AAEpBC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,IAAI,EAAEL,QAAQ,CAACK;AAAjB;AAFa,KAAxB,EAIKT,IAJL,CAIU,UAACU,aAAD,EAAmB;AACrB,UAAI,CAACA,aAAL,EAAoB;AAChBb,2BAAOC,QAAP,CAAgBa,MAAhB,CAAuBP,QAAvB,EACKJ,IADL,CACU,UAACC,UAAD,EAAgB;AAClB,iBAAOL,GAAG,CAACM,IAAJ,CAAS;AAAED,YAAAA,UAAU,EAAVA,UAAF;AAAc,oBAAQ;AAAtB,WAAT,CAAP;AACH,SAHL,WAIW,UAACW,GAAD,EAAS;AACZ,iBAAOhB,GAAG,CAACM,IAAJ,CAAS;AAAE,qBAAS,qBAAX;AAAkC,oBAAQ;AAA1C,WAAT,CAAP;AACH,SANL;AAOH,OARD,MAQO;AACH,eAAON,GAAG,CAACM,IAAJ,CAAS;AAAE,mBAAS,uBAAX;AAAoC,kBAAQ;AAA5C,SAAT,CAAP;AACH;AAEJ,KAjBL,WAkBW,UAACU,GAAD,EAAS;AACZ,aAAOhB,GAAG,CAACM,IAAJ,CAAS;AAAE,iBAAS,2BAAX;AAAwCU,QAAAA,GAAG,EAAHA,GAAxC;AAA6C,gBAAQ;AAArD,OAAT,CAAP;AACH,KApBL;AAuBH,GA5BD,CATA,CAHoB,CA0CpB;;AACApB,EAAAA,GAAG,CAACqB,GAAJ,CAAQ,qBAAR,EAA+BnB,uBAA/B,EAA4C,UAACC,GAAD,EAAMC,GAAN,EAAc;AAEtD;AACA,QAAIQ,QAAQ,GAAGT,GAAG,CAACU,IAAnB,CAHsD,CAKtD;;AAEAR,uBAAOC,QAAP,CAAgBQ,OAAhB,CAAwB;AACpBC,MAAAA,UAAU,EAAE,CAAC,IAAD,CADQ;AAEpBC,MAAAA,KAAK,EAAE;AAAEM,QAAAA,EAAE,EAAEnB,GAAG,CAACoB,MAAJ,CAAWD;AAAjB;AAFa,KAAxB,EAIKd,IAJL,CAIU,UAACgB,cAAD,EAAoB;AACtBA,MAAAA,cAAc,CAACC,MAAf,CAAsBb,QAAtB,EACKJ,IADL,CACU,UAACC,UAAD,EAAgB;AAClB,eAAOL,GAAG,CAACM,IAAJ,CAAS;AAAED,UAAAA,UAAU,EAAVA,UAAF;AAAc,kBAAQ;AAAtB,SAAT,CAAP;AACH,OAHL,WAIW,UAACW,GAAD,EAAS;AACZ,eAAOhB,GAAG,CAACM,IAAJ,CAAS;AAAE,mBAAS,wBAAX;AAAqC,kBAAQ;AAA7C,SAAT,CAAP;AACH,OANL;AAQH,KAbL,WAcW,UAACU,GAAD,EAAS;AACZ,aAAOhB,GAAG,CAACM,IAAJ,CAAS;AAAE,iBAAS,2BAAX;AAAwCU,QAAAA,GAAG,EAAHA,GAAxC;AAA6C,gBAAQ;AAArD,OAAT,CAAP;AACH,KAhBL;AAkBH,GAzBD,EA3CoB,CAsEnB;;AACApB,EAAAA,GAAG,UAAH,CAAW,qBAAX,EAAkCE,uBAAlC,EAA+C,UAACC,GAAD,EAAMC,GAAN,EAAc;AAE1D;AACA,QAAIQ,QAAQ,GAAG;AAAEU,MAAAA,EAAE,EAACnB,GAAG,CAACoB,MAAJ,CAAWD;AAAhB,KAAf,CAH0D,CAK1D;;AAEAjB,uBAAOC,QAAP,CAAgBQ,OAAhB,CAAwB;AACpBC,MAAAA,UAAU,EAAE,CAAC,IAAD,CADQ;AAEpBC,MAAAA,KAAK,EAAE;AAAEM,QAAAA,EAAE,EAAEV,QAAQ,CAACU;AAAf;AAFa,KAAxB,EAIKd,IAJL,CAIU,UAACgB,cAAD,EAAoB;AACtBA,MAAAA,cAAc,CAACE,OAAf,CAAuBd,QAAvB,EACKJ,IADL,CACU,YAAM;AACR,eAAOJ,GAAG,CAACM,IAAJ,CAAS;AAAE,oBAAS,SAAX;AAAsB,kBAAQ;AAA9B,SAAT,CAAP;AACH,OAHL,WAIW,UAACU,GAAD,EAAS;AACZ,eAAOhB,GAAG,CAACM,IAAJ,CAAS;AAAE,mBAAS,wBAAX;AAAqC,kBAAQ;AAA7C,SAAT,CAAP;AACH,OANL;AAQH,KAbL,WAcW,UAACU,GAAD,EAAS;AACZ,aAAOhB,GAAG,CAACM,IAAJ,CAAS;AAAE,iBAAS,2BAAX;AAAwCU,QAAAA,GAAG,EAAHA,GAAxC;AAA6C,gBAAQ;AAArD,OAAT,CAAP;AACH,KAhBL;AAkBH,GAzBA;AA0BD,CAjGJ",
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes",
      "sourcesContent": [
        "\r\nimport verifyToken from '../utils/verifyToken'\r\nimport models from '../models'\r\n\r\n\r\nmodule.exports = app => {\r\n\r\n    // List category/service\r\n    app.get('/api/categories', verifyToken, (req, res) => {\r\n        models.Category.findAll().then((categories) => {\r\n\r\n            res.json({\r\n                categories\r\n            })\r\n        })\r\n    }),\r\n    // REGISTER USER V\r\n    app.post('/api/categories', verifyToken, (req, res) => {\r\n        // Params\r\n        var category = req.body\r\n\r\n        // Verify if exist into models.categories\r\n        models.Category.findOne({\r\n            attributes: [\"name\"],\r\n            where: { name: category.name }\r\n        })\r\n            .then((categoryFound) => {\r\n                if (!categoryFound) {\r\n                    models.Category.create(category)\r\n                        .then((categories) => {\r\n                            return res.json({ categories, 'code': 1 })\r\n                        })\r\n                        .catch((err) => {\r\n                            return res.json({ 'error': 'Cannot add category', 'code': 0 })\r\n                        })\r\n                } else {\r\n                    return res.json({ 'error': 'product already exist', 'code': 11 })\r\n                }\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify category', err, 'code': 0 })\r\n            })\r\n\r\n       \r\n    })\r\n\r\n    // UPDATE category\r\n    app.put('/api/categories/:id', verifyToken, (req, res) => {\r\n\r\n        // Params\r\n        var category = req.body\r\n\r\n        // Verify if exist into models.categories\r\n\r\n        models.Category.findOne({\r\n            attributes: [\"id\"],\r\n            where: { id: req.params.id }\r\n        })\r\n            .then((categoryFound2) => {\r\n                categoryFound2.update(category)\r\n                    .then((categories) => {\r\n                        return res.json({ categories, 'code': 1 })\r\n                    })\r\n                    .catch((err) => {\r\n                        return res.json({ 'error': 'Cannot Update category', 'code': 0 })\r\n                    })\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify category', err, 'code': 0 })\r\n            })\r\n\r\n    })\r\n\r\n     // Delete category\r\n     app.delete('/api/categories/:id', verifyToken, (req, res) => {\r\n\r\n        // Params\r\n        var category = { id:req.params.id}\r\n\r\n        // Verify if exist into models.categories\r\n\r\n        models.Category.findOne({\r\n            attributes: [\"id\"],\r\n            where: { id: category.id }\r\n        })\r\n            .then((categoryFound2) => {\r\n                categoryFound2.destroy(category)\r\n                    .then(() => {\r\n                        return res.json({ 'status':'success', 'code': 1 })\r\n                    })\r\n                    .catch((err) => {\r\n                        return res.json({ 'error': 'Cannot Delete category', 'code': 0 })\r\n                    })\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify category', err, 'code': 0 })\r\n            })\r\n\r\n    })\r\n   }\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1579890852512
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\",\"filename\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\\\\src\\\\routes\\\\verifyToken.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0",
      "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes\\verifyToken.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes\\verifyToken.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes\\verifyToken.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes",
        "sourceFileName": "verifyToken.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.exports = function (req, res, next) {\n  var token = req.header('auth-token');\n  if (!token) return res.json({\n    'error': 'Wrong Token',\n    'code': 200\n  });\n\n  try {\n    var verified = _jsonwebtoken[\"default\"].verify(token, process.env.TOKEN_SECRET);\n\n    req.user = verified;\n    next();\n  } catch (err) {\n    return res.json({\n      'error': 'Wrong Token',\n      'code': 200\n    });\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZlcmlmeVRva2VuLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJyZXEiLCJyZXMiLCJuZXh0IiwidG9rZW4iLCJoZWFkZXIiLCJqc29uIiwidmVyaWZpZWQiLCJqd3QiLCJ2ZXJpZnkiLCJwcm9jZXNzIiwiZW52IiwiVE9LRU5fU0VDUkVUIiwidXNlciIsImVyciJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7OztBQUVBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUIsVUFBVUMsR0FBVixFQUFlQyxHQUFmLEVBQW9CQyxJQUFwQixFQUEwQjtBQUN2QyxNQUFNQyxLQUFLLEdBQUdILEdBQUcsQ0FBQ0ksTUFBSixDQUFXLFlBQVgsQ0FBZDtBQUNBLE1BQUcsQ0FBQ0QsS0FBSixFQUFXLE9BQU9GLEdBQUcsQ0FBQ0ksSUFBSixDQUFTO0FBQUUsYUFBUyxhQUFYO0FBQTBCLFlBQVE7QUFBbEMsR0FBVCxDQUFQOztBQUVYLE1BQUk7QUFDQSxRQUFNQyxRQUFRLEdBQUdDLHlCQUFJQyxNQUFKLENBQVdMLEtBQVgsRUFBa0JNLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxZQUE5QixDQUFqQjs7QUFDQVgsSUFBQUEsR0FBRyxDQUFDWSxJQUFKLEdBQVdOLFFBQVg7QUFDQUosSUFBQUEsSUFBSTtBQUNQLEdBSkQsQ0FJRSxPQUFPVyxHQUFQLEVBQVk7QUFDVixXQUFPWixHQUFHLENBQUNJLElBQUosQ0FBUztBQUFFLGVBQVMsYUFBWDtBQUEwQixjQUFRO0FBQWxDLEtBQVQsQ0FBUDtBQUNIO0FBQ0osQ0FYRCIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGFzdXNcXERvY3VtZW50c1xcS3Jvd1xcQXp1bHVsYSAtIEJveWthXFxhenVWZW5kYXMgMS4wXFxzcmNcXHJvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBqd3QgZnJvbSAnanNvbndlYnRva2VuJ1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAocmVxLCByZXMsIG5leHQpIHtcclxuICAgIGNvbnN0IHRva2VuID0gcmVxLmhlYWRlcignYXV0aC10b2tlbicpXHJcbiAgICBpZighdG9rZW4pIHJldHVybiByZXMuanNvbih7ICdlcnJvcic6ICdXcm9uZyBUb2tlbicsICdjb2RlJzogMjAwIH0pXHJcblxyXG4gICAgdHJ5IHtcclxuICAgICAgICBjb25zdCB2ZXJpZmllZCA9IGp3dC52ZXJpZnkodG9rZW4sIHByb2Nlc3MuZW52LlRPS0VOX1NFQ1JFVClcclxuICAgICAgICByZXEudXNlciA9IHZlcmlmaWVkXHJcbiAgICAgICAgbmV4dCgpXHJcbiAgICB9IGNhdGNoIChlcnIpIHtcclxuICAgICAgICByZXR1cm4gcmVzLmpzb24oeyAnZXJyb3InOiAnV3JvbmcgVG9rZW4nLCAnY29kZSc6IDIwMCB9KVxyXG4gICAgfVxyXG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "verifyToken.js"
      ],
      "names": [
        "module",
        "exports",
        "req",
        "res",
        "next",
        "token",
        "header",
        "json",
        "verified",
        "jwt",
        "verify",
        "process",
        "env",
        "TOKEN_SECRET",
        "user",
        "err"
      ],
      "mappings": ";;AAAA;;;;AAEAA,MAAM,CAACC,OAAP,GAAiB,UAAUC,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AACvC,MAAMC,KAAK,GAAGH,GAAG,CAACI,MAAJ,CAAW,YAAX,CAAd;AACA,MAAG,CAACD,KAAJ,EAAW,OAAOF,GAAG,CAACI,IAAJ,CAAS;AAAE,aAAS,aAAX;AAA0B,YAAQ;AAAlC,GAAT,CAAP;;AAEX,MAAI;AACA,QAAMC,QAAQ,GAAGC,yBAAIC,MAAJ,CAAWL,KAAX,EAAkBM,OAAO,CAACC,GAAR,CAAYC,YAA9B,CAAjB;;AACAX,IAAAA,GAAG,CAACY,IAAJ,GAAWN,QAAX;AACAJ,IAAAA,IAAI;AACP,GAJD,CAIE,OAAOW,GAAP,EAAY;AACV,WAAOZ,GAAG,CAACI,IAAJ,CAAS;AAAE,eAAS,aAAX;AAA0B,cAAQ;AAAlC,KAAT,CAAP;AACH;AACJ,CAXD",
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes",
      "sourcesContent": [
        "import jwt from 'jsonwebtoken'\r\n\r\nmodule.exports = function (req, res, next) {\r\n    const token = req.header('auth-token')\r\n    if(!token) return res.json({ 'error': 'Wrong Token', 'code': 200 })\r\n\r\n    try {\r\n        const verified = jwt.verify(token, process.env.TOKEN_SECRET)\r\n        req.user = verified\r\n        next()\r\n    } catch (err) {\r\n        return res.json({ 'error': 'Wrong Token', 'code': 200 })\r\n    }\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1579872326309
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\\\\src\\\\utils\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\",\"filename\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\\\\src\\\\utils\\\\verifyToken.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\utils",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0",
      "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\utils\\verifyToken.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\utils\\verifyToken.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\utils\\verifyToken.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\utils",
        "sourceFileName": "verifyToken.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _jwt = _interopRequireDefault(require(\"./jwt.util\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar JWT_SIGN_SECRET = '8ogu4o8g0gg8043gg8g8ulg4go834uug4o303407743g7344380g0';\n\nmodule.exports = function (req, res, next) {\n  var token = req.headers['authorization'];\n  if (!token) return res.json({\n    'error': 'Wrong Token',\n    'code': 200,\n    'access': false\n  });\n\n  var userId = _jwt[\"default\"].getUserId(token);\n\n  try {\n    if (userId < 0) return res.json({\n      'error': 'Wrong Token',\n      'code': 200,\n      'access': false\n    });\n    next();\n  } catch (err) {\n    return res.json({\n      'error': 'Wrong Token',\n      'code': 200,\n      'access': false\n    });\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZlcmlmeVRva2VuLmpzIl0sIm5hbWVzIjpbIkpXVF9TSUdOX1NFQ1JFVCIsIm1vZHVsZSIsImV4cG9ydHMiLCJyZXEiLCJyZXMiLCJuZXh0IiwidG9rZW4iLCJoZWFkZXJzIiwianNvbiIsInVzZXJJZCIsImp3dFV0aWwiLCJnZXRVc2VySWQiLCJlcnIiXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7Ozs7QUFDQSxJQUFNQSxlQUFlLEdBQUcsdURBQXhCOztBQUVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUIsVUFBVUMsR0FBVixFQUFlQyxHQUFmLEVBQW9CQyxJQUFwQixFQUEwQjtBQUN2QyxNQUFNQyxLQUFLLEdBQUdILEdBQUcsQ0FBQ0ksT0FBSixDQUFZLGVBQVosQ0FBZDtBQUNBLE1BQUcsQ0FBQ0QsS0FBSixFQUFXLE9BQU9GLEdBQUcsQ0FBQ0ksSUFBSixDQUFTO0FBQUUsYUFBUyxhQUFYO0FBQTBCLFlBQVEsR0FBbEM7QUFBdUMsY0FBVTtBQUFqRCxHQUFULENBQVA7O0FBRVgsTUFBTUMsTUFBTSxHQUFHQyxnQkFBUUMsU0FBUixDQUFrQkwsS0FBbEIsQ0FBZjs7QUFFQSxNQUFJO0FBRUEsUUFBSUcsTUFBTSxHQUFHLENBQWIsRUFDSSxPQUFPTCxHQUFHLENBQUNJLElBQUosQ0FBUztBQUFFLGVBQVMsYUFBWDtBQUEwQixjQUFRLEdBQWxDO0FBQXVDLGdCQUFVO0FBQWpELEtBQVQsQ0FBUDtBQUNKSCxJQUFBQSxJQUFJO0FBQ1AsR0FMRCxDQUtFLE9BQU9PLEdBQVAsRUFBWTtBQUNWLFdBQU9SLEdBQUcsQ0FBQ0ksSUFBSixDQUFTO0FBQUUsZUFBUyxhQUFYO0FBQTBCLGNBQVEsR0FBbEM7QUFBdUMsZ0JBQVU7QUFBakQsS0FBVCxDQUFQO0FBQ0g7QUFDSixDQWREIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcYXN1c1xcRG9jdW1lbnRzXFxLcm93XFxBenVsdWxhIC0gQm95a2FcXGF6dVZlbmRhcyAxLjBcXHNyY1xcdXRpbHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgand0IGZyb20gJ2pzb253ZWJ0b2tlbidcclxuaW1wb3J0IGp3dFV0aWwgZnJvbSAnLi9qd3QudXRpbCdcclxuY29uc3QgSldUX1NJR05fU0VDUkVUID0gJzhvZ3U0bzhnMGdnODA0M2dnOGc4dWxnNGdvODM0dXVnNG8zMDM0MDc3NDNnNzM0NDM4MGcwJ1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAocmVxLCByZXMsIG5leHQpIHtcclxuICAgIGNvbnN0IHRva2VuID0gcmVxLmhlYWRlcnNbJ2F1dGhvcml6YXRpb24nXVxyXG4gICAgaWYoIXRva2VuKSByZXR1cm4gcmVzLmpzb24oeyAnZXJyb3InOiAnV3JvbmcgVG9rZW4nLCAnY29kZSc6IDIwMCwgJ2FjY2Vzcyc6IGZhbHNlICB9KVxyXG5cclxuICAgIGNvbnN0IHVzZXJJZCA9IGp3dFV0aWwuZ2V0VXNlcklkKHRva2VuKVxyXG5cclxuICAgIHRyeSB7XHJcbiAgICBcclxuICAgICAgICBpZiAodXNlcklkIDwgMClcclxuICAgICAgICAgICAgcmV0dXJuIHJlcy5qc29uKHsgJ2Vycm9yJzogJ1dyb25nIFRva2VuJywgJ2NvZGUnOiAyMDAsICdhY2Nlc3MnOiBmYWxzZSB9KVxyXG4gICAgICAgIG5leHQoKVxyXG4gICAgfSBjYXRjaCAoZXJyKSB7XHJcbiAgICAgICAgcmV0dXJuIHJlcy5qc29uKHsgJ2Vycm9yJzogJ1dyb25nIFRva2VuJywgJ2NvZGUnOiAyMDAsICdhY2Nlc3MnOiBmYWxzZSAgfSlcclxuICAgIH1cclxufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "verifyToken.js"
      ],
      "names": [
        "JWT_SIGN_SECRET",
        "module",
        "exports",
        "req",
        "res",
        "next",
        "token",
        "headers",
        "json",
        "userId",
        "jwtUtil",
        "getUserId",
        "err"
      ],
      "mappings": ";;AAAA;;AACA;;;;AACA,IAAMA,eAAe,GAAG,uDAAxB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,UAAUC,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AACvC,MAAMC,KAAK,GAAGH,GAAG,CAACI,OAAJ,CAAY,eAAZ,CAAd;AACA,MAAG,CAACD,KAAJ,EAAW,OAAOF,GAAG,CAACI,IAAJ,CAAS;AAAE,aAAS,aAAX;AAA0B,YAAQ,GAAlC;AAAuC,cAAU;AAAjD,GAAT,CAAP;;AAEX,MAAMC,MAAM,GAAGC,gBAAQC,SAAR,CAAkBL,KAAlB,CAAf;;AAEA,MAAI;AAEA,QAAIG,MAAM,GAAG,CAAb,EACI,OAAOL,GAAG,CAACI,IAAJ,CAAS;AAAE,eAAS,aAAX;AAA0B,cAAQ,GAAlC;AAAuC,gBAAU;AAAjD,KAAT,CAAP;AACJH,IAAAA,IAAI;AACP,GALD,CAKE,OAAOO,GAAP,EAAY;AACV,WAAOR,GAAG,CAACI,IAAJ,CAAS;AAAE,eAAS,aAAX;AAA0B,cAAQ,GAAlC;AAAuC,gBAAU;AAAjD,KAAT,CAAP;AACH;AACJ,CAdD",
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\utils",
      "sourcesContent": [
        "import jwt from 'jsonwebtoken'\r\nimport jwtUtil from './jwt.util'\r\nconst JWT_SIGN_SECRET = '8ogu4o8g0gg8043gg8g8ulg4go834uug4o303407743g7344380g0'\r\n\r\nmodule.exports = function (req, res, next) {\r\n    const token = req.headers['authorization']\r\n    if(!token) return res.json({ 'error': 'Wrong Token', 'code': 200, 'access': false  })\r\n\r\n    const userId = jwtUtil.getUserId(token)\r\n\r\n    try {\r\n    \r\n        if (userId < 0)\r\n            return res.json({ 'error': 'Wrong Token', 'code': 200, 'access': false })\r\n        next()\r\n    } catch (err) {\r\n        return res.json({ 'error': 'Wrong Token', 'code': 200, 'access': false  })\r\n    }\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1580345770909
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\",\"filename\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\\\\src\\\\routes\\\\category copy.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0",
      "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes\\category copy.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes\\category copy.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes\\category copy.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes",
        "sourceFileName": "category copy.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _verifyToken = _interopRequireDefault(require(\"../utils/verifyToken\"));\n\nvar _models = _interopRequireDefault(require(\"../models\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.exports = function (app) {\n  // List category/service\n  app.get('/api/categories', _verifyToken[\"default\"], function (req, res) {\n    _models[\"default\"].Category.findAll().then(function (categories) {\n      res.json({\n        categories: categories\n      });\n    });\n  }), // REGISTER USER V\n  app.post('/api/categories', _verifyToken[\"default\"], function (req, res) {\n    // Params\n    var category = {\n      name: req.body.name\n    }; // Verify if exist into models.categories\n\n    _models[\"default\"].Category.findOne({\n      attributes: [\"name\"],\n      where: {\n        name: category.name\n      }\n    }).then(function (categoryFound) {\n      if (!categoryFound) {\n        _models[\"default\"].Category.create(category).then(function (categories) {\n          return res.json({\n            categories: categories,\n            'code': 1\n          });\n        })[\"catch\"](function (err) {\n          return res.json({\n            'error': 'Cannot add category',\n            'code': 0\n          });\n        });\n      } else {\n        return res.json({\n          'error': 'product already exist',\n          'code': 11\n        });\n      }\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify category',\n        err: err,\n        'code': 0\n      });\n    });\n  }); // UPDATE category\n\n  app.put('/api/categories', _verifyToken[\"default\"], function (req, res) {\n    // Params\n    var category = {\n      name: req.body.name\n    }; // Verify if exist into models.categories\n\n    _models[\"default\"].Category.findOne({\n      attributes: [\"id\"],\n      where: {\n        id: req.body.id\n      }\n    }).then(function (categoryFound2) {\n      categoryFound2.update(category).then(function (categories) {\n        return res.json({\n          categories: categories,\n          'code': 1\n        });\n      })[\"catch\"](function (err) {\n        return res.json({\n          'error': 'Cannot Update category',\n          'code': 0\n        });\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify category',\n        err: err,\n        'code': 0\n      });\n    });\n  }); // Delete category\n\n  app[\"delete\"]('/api/categories', _verifyToken[\"default\"], function (req, res) {\n    // Params\n    var category = {\n      id: req.body.id\n    }; // Verify if exist into models.categories\n\n    _models[\"default\"].Category.findOne({\n      attributes: [\"id\"],\n      where: {\n        id: category.id\n      }\n    }).then(function (categoryFound2) {\n      categoryFound2.destroy(category).then(function () {\n        return res.json({\n          'status': 'success',\n          'code': 1\n        });\n      })[\"catch\"](function (err) {\n        return res.json({\n          'error': 'Cannot Delete category',\n          'code': 0\n        });\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify category',\n        err: err,\n        'code': 0\n      });\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "category copy.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "get",
        "verifyToken",
        "req",
        "res",
        "models",
        "Category",
        "findAll",
        "then",
        "categories",
        "json",
        "post",
        "category",
        "name",
        "body",
        "findOne",
        "attributes",
        "where",
        "categoryFound",
        "create",
        "err",
        "put",
        "id",
        "categoryFound2",
        "update",
        "destroy"
      ],
      "mappings": ";;AACA;;AACA;;;;AAGAA,MAAM,CAACC,OAAP,GAAiB,UAAAC,GAAG,EAAI;AAEpB;AACAA,EAAAA,GAAG,CAACC,GAAJ,CAAQ,iBAAR,EAA2BC,uBAA3B,EAAwC,UAACC,GAAD,EAAMC,GAAN,EAAc;AAClDC,uBAAOC,QAAP,CAAgBC,OAAhB,GAA0BC,IAA1B,CAA+B,UAACC,UAAD,EAAgB;AAE3CL,MAAAA,GAAG,CAACM,IAAJ,CAAS;AACLD,QAAAA,UAAU,EAAVA;AADK,OAAT;AAGH,KALD;AAMH,GAPD,GAQA;AACAT,EAAAA,GAAG,CAACW,IAAJ,CAAS,iBAAT,EAA4BT,uBAA5B,EAAyC,UAACC,GAAD,EAAMC,GAAN,EAAc;AACnD;AACA,QAAIQ,QAAQ,GAAG;AACXC,MAAAA,IAAI,EAAEV,GAAG,CAACW,IAAJ,CAASD;AADJ,KAAf,CAFmD,CAOnD;;AACAR,uBAAOC,QAAP,CAAgBS,OAAhB,CAAwB;AACpBC,MAAAA,UAAU,EAAE,CAAC,MAAD,CADQ;AAEpBC,MAAAA,KAAK,EAAE;AAAEJ,QAAAA,IAAI,EAAED,QAAQ,CAACC;AAAjB;AAFa,KAAxB,EAIKL,IAJL,CAIU,UAACU,aAAD,EAAmB;AACrB,UAAI,CAACA,aAAL,EAAoB;AAChBb,2BAAOC,QAAP,CAAgBa,MAAhB,CAAuBP,QAAvB,EACKJ,IADL,CACU,UAACC,UAAD,EAAgB;AAClB,iBAAOL,GAAG,CAACM,IAAJ,CAAS;AAAED,YAAAA,UAAU,EAAVA,UAAF;AAAc,oBAAQ;AAAtB,WAAT,CAAP;AACH,SAHL,WAIW,UAACW,GAAD,EAAS;AACZ,iBAAOhB,GAAG,CAACM,IAAJ,CAAS;AAAE,qBAAS,qBAAX;AAAkC,oBAAQ;AAA1C,WAAT,CAAP;AACH,SANL;AAOH,OARD,MAQO;AACH,eAAON,GAAG,CAACM,IAAJ,CAAS;AAAE,mBAAS,uBAAX;AAAoC,kBAAQ;AAA5C,SAAT,CAAP;AACH;AAEJ,KAjBL,WAkBW,UAACU,GAAD,EAAS;AACZ,aAAOhB,GAAG,CAACM,IAAJ,CAAS;AAAE,iBAAS,2BAAX;AAAwCU,QAAAA,GAAG,EAAHA,GAAxC;AAA6C,gBAAQ;AAArD,OAAT,CAAP;AACH,KApBL;AAuBH,GA/BD,CATA,CAHoB,CA6CpB;;AACApB,EAAAA,GAAG,CAACqB,GAAJ,CAAQ,iBAAR,EAA2BnB,uBAA3B,EAAwC,UAACC,GAAD,EAAMC,GAAN,EAAc;AAElD;AACA,QAAIQ,QAAQ,GAAG;AACXC,MAAAA,IAAI,EAAEV,GAAG,CAACW,IAAJ,CAASD;AADJ,KAAf,CAHkD,CAOlD;;AAEAR,uBAAOC,QAAP,CAAgBS,OAAhB,CAAwB;AACpBC,MAAAA,UAAU,EAAE,CAAC,IAAD,CADQ;AAEpBC,MAAAA,KAAK,EAAE;AAAEK,QAAAA,EAAE,EAAEnB,GAAG,CAACW,IAAJ,CAASQ;AAAf;AAFa,KAAxB,EAIKd,IAJL,CAIU,UAACe,cAAD,EAAoB;AACtBA,MAAAA,cAAc,CAACC,MAAf,CAAsBZ,QAAtB,EACKJ,IADL,CACU,UAACC,UAAD,EAAgB;AAClB,eAAOL,GAAG,CAACM,IAAJ,CAAS;AAAED,UAAAA,UAAU,EAAVA,UAAF;AAAc,kBAAQ;AAAtB,SAAT,CAAP;AACH,OAHL,WAIW,UAACW,GAAD,EAAS;AACZ,eAAOhB,GAAG,CAACM,IAAJ,CAAS;AAAE,mBAAS,wBAAX;AAAqC,kBAAQ;AAA7C,SAAT,CAAP;AACH,OANL;AAQH,KAbL,WAcW,UAACU,GAAD,EAAS;AACZ,aAAOhB,GAAG,CAACM,IAAJ,CAAS;AAAE,iBAAS,2BAAX;AAAwCU,QAAAA,GAAG,EAAHA,GAAxC;AAA6C,gBAAQ;AAArD,OAAT,CAAP;AACH,KAhBL;AAkBH,GA3BD,EA9CoB,CA2EnB;;AACApB,EAAAA,GAAG,UAAH,CAAW,iBAAX,EAA8BE,uBAA9B,EAA2C,UAACC,GAAD,EAAMC,GAAN,EAAc;AAEtD;AACA,QAAIQ,QAAQ,GAAG;AAAEU,MAAAA,EAAE,EAACnB,GAAG,CAACW,IAAJ,CAASQ;AAAd,KAAf,CAHsD,CAKtD;;AAEAjB,uBAAOC,QAAP,CAAgBS,OAAhB,CAAwB;AACpBC,MAAAA,UAAU,EAAE,CAAC,IAAD,CADQ;AAEpBC,MAAAA,KAAK,EAAE;AAAEK,QAAAA,EAAE,EAAEV,QAAQ,CAACU;AAAf;AAFa,KAAxB,EAIKd,IAJL,CAIU,UAACe,cAAD,EAAoB;AACtBA,MAAAA,cAAc,CAACE,OAAf,CAAuBb,QAAvB,EACKJ,IADL,CACU,YAAM;AACR,eAAOJ,GAAG,CAACM,IAAJ,CAAS;AAAE,oBAAS,SAAX;AAAsB,kBAAQ;AAA9B,SAAT,CAAP;AACH,OAHL,WAIW,UAACU,GAAD,EAAS;AACZ,eAAOhB,GAAG,CAACM,IAAJ,CAAS;AAAE,mBAAS,wBAAX;AAAqC,kBAAQ;AAA7C,SAAT,CAAP;AACH,OANL;AAQH,KAbL,WAcW,UAACU,GAAD,EAAS;AACZ,aAAOhB,GAAG,CAACM,IAAJ,CAAS;AAAE,iBAAS,2BAAX;AAAwCU,QAAAA,GAAG,EAAHA,GAAxC;AAA6C,gBAAQ;AAArD,OAAT,CAAP;AACH,KAhBL;AAkBH,GAzBA;AA0BD,CAtGJ",
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes",
      "sourcesContent": [
        "\r\nimport verifyToken from '../utils/verifyToken'\r\nimport models from '../models'\r\n\r\n\r\nmodule.exports = app => {\r\n\r\n    // List category/service\r\n    app.get('/api/categories', verifyToken, (req, res) => {\r\n        models.Category.findAll().then((categories) => {\r\n\r\n            res.json({\r\n                categories\r\n            })\r\n        })\r\n    }),\r\n    // REGISTER USER V\r\n    app.post('/api/categories', verifyToken, (req, res) => {\r\n        // Params\r\n        var category = {\r\n            name: req.body.name\r\n        }\r\n\r\n\r\n        // Verify if exist into models.categories\r\n        models.Category.findOne({\r\n            attributes: [\"name\"],\r\n            where: { name: category.name }\r\n        })\r\n            .then((categoryFound) => {\r\n                if (!categoryFound) {\r\n                    models.Category.create(category)\r\n                        .then((categories) => {\r\n                            return res.json({ categories, 'code': 1 })\r\n                        })\r\n                        .catch((err) => {\r\n                            return res.json({ 'error': 'Cannot add category', 'code': 0 })\r\n                        })\r\n                } else {\r\n                    return res.json({ 'error': 'product already exist', 'code': 11 })\r\n                }\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify category', err, 'code': 0 })\r\n            })\r\n\r\n       \r\n    })\r\n\r\n    // UPDATE category\r\n    app.put('/api/categories', verifyToken, (req, res) => {\r\n\r\n        // Params\r\n        var category = {\r\n            name: req.body.name\r\n        }\r\n\r\n        // Verify if exist into models.categories\r\n\r\n        models.Category.findOne({\r\n            attributes: [\"id\"],\r\n            where: { id: req.body.id }\r\n        })\r\n            .then((categoryFound2) => {\r\n                categoryFound2.update(category)\r\n                    .then((categories) => {\r\n                        return res.json({ categories, 'code': 1 })\r\n                    })\r\n                    .catch((err) => {\r\n                        return res.json({ 'error': 'Cannot Update category', 'code': 0 })\r\n                    })\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify category', err, 'code': 0 })\r\n            })\r\n\r\n    })\r\n\r\n     // Delete category\r\n     app.delete('/api/categories', verifyToken, (req, res) => {\r\n\r\n        // Params\r\n        var category = { id:req.body.id}\r\n\r\n        // Verify if exist into models.categories\r\n\r\n        models.Category.findOne({\r\n            attributes: [\"id\"],\r\n            where: { id: category.id }\r\n        })\r\n            .then((categoryFound2) => {\r\n                categoryFound2.destroy(category)\r\n                    .then(() => {\r\n                        return res.json({ 'status':'success', 'code': 1 })\r\n                    })\r\n                    .catch((err) => {\r\n                        return res.json({ 'error': 'Cannot Delete category', 'code': 0 })\r\n                    })\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify category', err, 'code': 0 })\r\n            })\r\n\r\n    })\r\n   }\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1579883852214
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\",\"filename\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\\\\src\\\\routes\\\\client.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0",
      "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes\\client.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes\\client.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes\\client.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes",
        "sourceFileName": "client.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _verifyToken = _interopRequireDefault(require(\"../utils/verifyToken\"));\n\nvar _models = _interopRequireDefault(require(\"../models\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.exports = function (app) {\n  // List client/service\n  app.get('/api/clients', _verifyToken[\"default\"], function (req, res) {\n    _models[\"default\"].Client.findAll({\n      include: [_models[\"default\"].Order]\n    }).then(function (clients) {\n      res.json({\n        clients: clients\n      });\n    });\n  }), // REGISTER USER V\n  app.post('/api/clients', _verifyToken[\"default\"], function (req, res) {\n    // Params\n    var client = req.body; // Verify if exist into models.clients\n\n    _models[\"default\"].Client.create(client).then(function (clients) {\n      return res.json({\n        clients: clients,\n        'code': 1\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Cannot add client',\n        'code': 0\n      });\n    });\n  }); // UPDATE client\n\n  app.put('/api/clients/:id', _verifyToken[\"default\"], function (req, res) {\n    // Params\n    var client = req.body; // Verify if exist into models.clients\n\n    _models[\"default\"].Client.findOne({\n      attributes: [\"id\"],\n      where: {\n        id: req.params.id\n      }\n    }).then(function (clientFound2) {\n      clientFound2.update(client).then(function (clients) {\n        return res.json({\n          clients: clients,\n          'code': 1\n        });\n      })[\"catch\"](function (err) {\n        return res.json({\n          'error': 'Cannot Update client',\n          'code': 0\n        });\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify client',\n        err: err,\n        'code': 0\n      });\n    });\n  }); // Delete client\n\n  app[\"delete\"]('/api/clients/:id', _verifyToken[\"default\"], function (req, res) {\n    // Params\n    var client = {\n      id: req.params.id\n    }; // Verify if exist into models.clients\n\n    _models[\"default\"].Client.findOne({\n      attributes: [\"id\"],\n      where: {\n        id: client.id\n      }\n    }).then(function (clientFound2) {\n      clientFound2.destroy(client).then(function () {\n        return res.json({\n          'status': 'success',\n          'code': 1\n        });\n      })[\"catch\"](function (err) {\n        return res.json({\n          'error': 'Cannot Delete client',\n          'code': 0\n        });\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify client',\n        err: err,\n        'code': 0\n      });\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsaWVudC5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiYXBwIiwiZ2V0IiwidmVyaWZ5VG9rZW4iLCJyZXEiLCJyZXMiLCJtb2RlbHMiLCJDbGllbnQiLCJmaW5kQWxsIiwiaW5jbHVkZSIsIk9yZGVyIiwidGhlbiIsImNsaWVudHMiLCJqc29uIiwicG9zdCIsImNsaWVudCIsImJvZHkiLCJjcmVhdGUiLCJlcnIiLCJwdXQiLCJmaW5kT25lIiwiYXR0cmlidXRlcyIsIndoZXJlIiwiaWQiLCJwYXJhbXMiLCJjbGllbnRGb3VuZDIiLCJ1cGRhdGUiLCJkZXN0cm95Il0sIm1hcHBpbmdzIjoiOztBQUNBOztBQUNBOzs7O0FBR0FBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixVQUFBQyxHQUFHLEVBQUk7QUFFcEI7QUFDQUEsRUFBQUEsR0FBRyxDQUFDQyxHQUFKLENBQVEsY0FBUixFQUF3QkMsdUJBQXhCLEVBQXFDLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQy9DQyx1QkFBT0MsTUFBUCxDQUFjQyxPQUFkLENBQXNCO0FBQUNDLE1BQUFBLE9BQU8sRUFBRSxDQUFDSCxtQkFBT0ksS0FBUjtBQUFWLEtBQXRCLEVBQWlEQyxJQUFqRCxDQUFzRCxVQUFDQyxPQUFELEVBQWE7QUFFL0RQLE1BQUFBLEdBQUcsQ0FBQ1EsSUFBSixDQUFTO0FBQ0xELFFBQUFBLE9BQU8sRUFBUEE7QUFESyxPQUFUO0FBR0gsS0FMRDtBQU1ILEdBUEQsR0FRQTtBQUNBWCxFQUFBQSxHQUFHLENBQUNhLElBQUosQ0FBUyxjQUFULEVBQXlCWCx1QkFBekIsRUFBc0MsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDaEQ7QUFDQSxRQUFJVSxNQUFNLEdBQUdYLEdBQUcsQ0FBQ1ksSUFBakIsQ0FGZ0QsQ0FJaEQ7O0FBRUFWLHVCQUFPQyxNQUFQLENBQWNVLE1BQWQsQ0FBcUJGLE1BQXJCLEVBQ0tKLElBREwsQ0FDVSxVQUFDQyxPQUFELEVBQWE7QUFDZixhQUFP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RCxDQW5GSiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGFzdXNcXERvY3VtZW50c1xcS3Jvd1xcQXp1bHVsYSAtIEJveWthXFxhenVWZW5kYXMgMS4wXFxzcmNcXHJvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5pbXBvcnQgdmVyaWZ5VG9rZW4gZnJvbSAnLi4vdXRpbHMvdmVyaWZ5VG9rZW4nXHJcbmltcG9ydCBtb2RlbHMgZnJvbSAnLi4vbW9kZWxzJ1xyXG5cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gYXBwID0+IHtcclxuXHJcbiAgICAvLyBMaXN0IGNsaWVudC9zZXJ2aWNlXHJcbiAgICBhcHAuZ2V0KCcvYXBpL2NsaWVudHMnLCB2ZXJpZnlUb2tlbiwgKHJlcSwgcmVzKSA9PiB7XHJcbiAgICAgICAgbW9kZWxzLkNsaWVudC5maW5kQWxsKHtpbmNsdWRlOiBbbW9kZWxzLk9yZGVyXX0pLnRoZW4oKGNsaWVudHMpID0+IHtcclxuXHJcbiAgICAgICAgICAgIHJlcy5qc29uKHtcclxuICAgICAgICAgICAgICAgIGNsaWVudHNcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9KVxyXG4gICAgfSksXHJcbiAgICAvLyBSRUdJU1RFUiBVU0VSIFZcclxuICAgIGFwcC5wb3N0KCcvYXBpL2NsaWVudHMnLCB2ZXJpZnlUb2tlbiwgKHJlcSwgcmVzKSA9PiB7XHJcbiAgICAgICAgLy8gUGFyYW1zXHJcbiAgICAgICAgdmFyIGNsaWVudCA9IHJlcS5ib2R5XHJcblxyXG4gICAgICAgIC8vIFZlcmlmeSBpZiBleGlzdCBpbnRvIG1vZGVscy5jbGllbnRzXHJcbiAgICAgXHJcbiAgICAgICAgbW9kZWxzLkNsaWVudC5jcmVhdGUoY2xpZW50KVxyXG4gICAgICAgICAgICAudGhlbigoY2xpZW50cykgPT4ge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5qc29uKHsgY2xpZW50cywgJ2NvZGUnOiAxIH0pXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzLmpzb24oeyAnZXJyb3InOiAnQ2Fubm90IGFkZCBjbGllbnQnLCAnY29kZSc6IDAgfSlcclxuICAgICAgICAgICAgfSlcclxuXHJcbiAgICB9KVxyXG5cclxuICAgIC8vIFVQREFURSBjbGllbnRcclxuICAgIGFwcC5wdXQoJy9hcGkvY2xpZW50cy86aWQnLCB2ZXJpZnlUb2tlbiwgKHJlcSwgcmVzKSA9PiB7XHJcblxyXG4gICAgICAgIC8vIFBhcmFtc1xyXG4gICAgICAgIHZhciBjbGllbnQgPSByZXEuYm9keVxyXG5cclxuICAgICAgICAvLyBWZXJpZnkgaWYgZXhpc3QgaW50byBtb2RlbHMuY2xpZW50c1xyXG5cclxuICAgICAgICBtb2RlbHMuQ2xpZW50LmZpbmRPbmUoe1xyXG4gICAgICAgICAgICBhdHRyaWJ1dGVzOiBbXCJpZFwiXSxcclxuICAgICAgICAgICAgd2hlcmU6IHsgaWQ6IHJlcS5wYXJhbXMuaWQgfVxyXG4gICAgICAgIH0pXHJcbiAgICAgICAgICAgIC50aGVuKChjbGllbnRGb3VuZDIpID0+IHtcclxuICAgICAgICAgICAgICAgIGNsaWVudEZvdW5kMi51cGRhdGUoY2xpZW50KVxyXG4gICAgICAgICAgICAgICAgICAgIC50aGVuKChjbGllbnRzKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByZXMuanNvbih7IGNsaWVudHMsICdjb2RlJzogMSB9KVxyXG4gICAgICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5qc29uKHsgJ2Vycm9yJzogJ0Nhbm5vdCBVcGRhdGUgY2xpZW50JywgJ2NvZGUnOiAwIH0pXHJcbiAgICAgICAgICAgICAgICAgICAgfSlcclxuXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzLmpzb24oeyAnZXJyb3InOiAnVW5hYmxlIHRvIHZlcmlmeSBjbGllbnQnLCBlcnIsICdjb2RlJzogMCB9KVxyXG4gICAgICAgICAgICB9KVxyXG5cclxuICAgIH0pXHJcblxyXG4gICAgIC8vIERlbGV0ZSBjbGllbnRcclxuICAgICBhcHAuZGVsZXRlKCcvYXBpL2NsaWVudHMvOmlkJywgdmVyaWZ5VG9rZW4sIChyZXEsIHJlcykgPT4ge1xyXG5cclxuICAgICAgICAvLyBQYXJhbXNcclxuICAgICAgICB2YXIgY2xpZW50ID0geyBpZDpyZXEucGFyYW1zLmlkfVxyXG5cclxuICAgICAgICAvLyBWZXJpZnkgaWYgZXhpc3QgaW50byBtb2RlbHMuY2xpZW50c1xyXG5cclxuICAgICAgICBtb2RlbHMuQ2xpZW50LmZpbmRPbmUoe1xyXG4gICAgICAgICAgICBhdHRyaWJ1dGVzOiBbXCJpZFwiXSxcclxuICAgICAgICAgICAgd2hlcmU6IHsgaWQ6IGNsaWVudC5pZCB9XHJcbiAgICAgICAgfSlcclxuICAgICAgICAgICAgLnRoZW4oKGNsaWVudEZvdW5kMikgPT4ge1xyXG4gICAgICAgICAgICAgICAgY2xpZW50Rm91bmQyLmRlc3Ryb3koY2xpZW50KVxyXG4gICAgICAgICAgICAgICAgICAgIC50aGVuKCgpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5qc29uKHsgJ3N0YXR1cyc6J3N1Y2Nlc3MnLCAnY29kZSc6IDEgfSlcclxuICAgICAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByZXMuanNvbih7ICdlcnJvcic6ICdDYW5ub3QgRGVsZXRlIGNsaWVudCcsICdjb2RlJzogMCB9KVxyXG4gICAgICAgICAgICAgICAgICAgIH0pXHJcblxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5qc29uKHsgJ2Vycm9yJzogJ1VuYWJsZSB0byB2ZXJpZnkgY2xpZW50JywgZXJyLCAnY29kZSc6IDAgfSlcclxuICAgICAgICAgICAgfSlcclxuXHJcbiAgICB9KVxyXG4gICB9XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "client.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "get",
        "verifyToken",
        "req",
        "res",
        "models",
        "Client",
        "findAll",
        "include",
        "Order",
        "then",
        "clients",
        "json",
        "post",
        "client",
        "body",
        "create",
        "err",
        "put",
        "findOne",
        "attributes",
        "where",
        "id",
        "params",
        "clientFound2",
        "update",
        "destroy"
      ],
      "mappings": ";;AACA;;AACA;;;;AAGAA,MAAM,CAACC,OAAP,GAAiB,UAAAC,GAAG,EAAI;AAEpB;AACAA,EAAAA,GAAG,CAACC,GAAJ,CAAQ,cAAR,EAAwBC,uBAAxB,EAAqC,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC/CC,uBAAOC,MAAP,CAAcC,OAAd,CAAsB;AAACC,MAAAA,OAAO,EAAE,CAACH,mBAAOI,KAAR;AAAV,KAAtB,EAAiDC,IAAjD,CAAsD,UAACC,OAAD,EAAa;AAE/DP,MAAAA,GAAG,CAACQ,IAAJ,CAAS;AACLD,QAAAA,OAAO,EAAPA;AADK,OAAT;AAGH,KALD;AAMH,GAPD,GAQA;AACAX,EAAAA,GAAG,CAACa,IAAJ,CAAS,cAAT,EAAyBX,uBAAzB,EAAsC,UAACC,GAAD,EAAMC,GAAN,EAAc;AAChD;AACA,QAAIU,MAAM,GAAGX,GAAG,CAACY,IAAjB,CAFgD,CAIhD;;AAEAV,uBAAOC,MAAP,CAAcU,MAAd,CAAqBF,MAArB,EACKJ,IADL,CACU,UAACC,OAAD,EAAa;AACf,aAAOP,GAAG,CAACQ,IAAJ,CAAS;AAAED,QAAAA,OAAO,EAAPA,OAAF;AAAW,gBAAQ;AAAnB,OAAT,CAAP;AACH,KAHL,WAIW,UAACM,GAAD,EAAS;AACZ,aAAOb,GAAG,CAACQ,IAAJ,CAAS;AAAE,iBAAS,mBAAX;AAAgC,gBAAQ;AAAxC,OAAT,CAAP;AACH,KANL;AAQH,GAdD,CATA,CAHoB,CA4BpB;;AACAZ,EAAAA,GAAG,CAACkB,GAAJ,CAAQ,kBAAR,EAA4BhB,uBAA5B,EAAyC,UAACC,GAAD,EAAMC,GAAN,EAAc;AAEnD;AACA,QAAIU,MAAM,GAAGX,GAAG,CAACY,IAAjB,CAHmD,CAKnD;;AAEAV,uBAAOC,MAAP,CAAca,OAAd,CAAsB;AAClBC,MAAAA,UAAU,EAAE,CAAC,IAAD,CADM;AAElBC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,EAAE,EAAEnB,GAAG,CAACoB,MAAJ,CAAWD;AAAjB;AAFW,KAAtB,EAIKZ,IAJL,CAIU,UAACc,YAAD,EAAkB;AACpBA,MAAAA,YAAY,CAACC,MAAb,CAAoBX,MAApB,EACKJ,IADL,CACU,UAACC,OAAD,EAAa;AACf,eAAOP,GAAG,CAACQ,IAAJ,CAAS;AAAED,UAAAA,OAAO,EAAPA,OAAF;AAAW,kBAAQ;AAAnB,SAAT,CAAP;AACH,OAHL,WAIW,UAACM,GAAD,EAAS;AACZ,eAAOb,GAAG,CAACQ,IAAJ,CAAS;AAAE,mBAAS,sBAAX;AAAmC,kBAAQ;AAA3C,SAAT,CAAP;AACH,OANL;AAQH,KAbL,WAcW,UAACK,GAAD,EAAS;AACZ,aAAOb,GAAG,CAACQ,IAAJ,CAAS;AAAE,iBAAS,yBAAX;AAAsCK,QAAAA,GAAG,EAAHA,GAAtC;AAA2C,gBAAQ;AAAnD,OAAT,CAAP;AACH,KAhBL;AAkBH,GAzBD,EA7BoB,CAwDnB;;AACAjB,EAAAA,GAAG,UAAH,CAAW,kBAAX,EAA+BE,uBAA/B,EAA4C,UAACC,GAAD,EAAMC,GAAN,EAAc;AAEvD;AACA,QAAIU,MAAM,GAAG;AAAEQ,MAAAA,EAAE,EAACnB,GAAG,CAACoB,MAAJ,CAAWD;AAAhB,KAAb,CAHuD,CAKvD;;AAEAjB,uBAAOC,MAAP,CAAca,OAAd,CAAsB;AAClBC,MAAAA,UAAU,EAAE,CAAC,IAAD,CADM;AAElBC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,EAAE,EAAER,MAAM,CAACQ;AAAb;AAFW,KAAtB,EAIKZ,IAJL,CAIU,UAACc,YAAD,EAAkB;AACpBA,MAAAA,YAAY,CAACE,OAAb,CAAqBZ,MAArB,EACKJ,IADL,CACU,YAAM;AACR,eAAON,GAAG,CAACQ,IAAJ,CAAS;AAAE,oBAAS,SAAX;AAAsB,kBAAQ;AAA9B,SAAT,CAAP;AACH,OAHL,WAIW,UAACK,GAAD,EAAS;AACZ,eAAOb,GAAG,CAACQ,IAAJ,CAAS;AAAE,mBAAS,sBAAX;AAAmC,kBAAQ;AAA3C,SAAT,CAAP;AACH,OANL;AAQH,KAbL,WAcW,UAACK,GAAD,EAAS;AACZ,aAAOb,GAAG,CAACQ,IAAJ,CAAS;AAAE,iBAAS,yBAAX;AAAsCK,QAAAA,GAAG,EAAHA,GAAtC;AAA2C,gBAAQ;AAAnD,OAAT,CAAP;AACH,KAhBL;AAkBH,GAzBA;AA0BD,CAnFJ",
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes",
      "sourcesContent": [
        "\r\nimport verifyToken from '../utils/verifyToken'\r\nimport models from '../models'\r\n\r\n\r\nmodule.exports = app => {\r\n\r\n    // List client/service\r\n    app.get('/api/clients', verifyToken, (req, res) => {\r\n        models.Client.findAll({include: [models.Order]}).then((clients) => {\r\n\r\n            res.json({\r\n                clients\r\n            })\r\n        })\r\n    }),\r\n    // REGISTER USER V\r\n    app.post('/api/clients', verifyToken, (req, res) => {\r\n        // Params\r\n        var client = req.body\r\n\r\n        // Verify if exist into models.clients\r\n     \r\n        models.Client.create(client)\r\n            .then((clients) => {\r\n                return res.json({ clients, 'code': 1 })\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Cannot add client', 'code': 0 })\r\n            })\r\n\r\n    })\r\n\r\n    // UPDATE client\r\n    app.put('/api/clients/:id', verifyToken, (req, res) => {\r\n\r\n        // Params\r\n        var client = req.body\r\n\r\n        // Verify if exist into models.clients\r\n\r\n        models.Client.findOne({\r\n            attributes: [\"id\"],\r\n            where: { id: req.params.id }\r\n        })\r\n            .then((clientFound2) => {\r\n                clientFound2.update(client)\r\n                    .then((clients) => {\r\n                        return res.json({ clients, 'code': 1 })\r\n                    })\r\n                    .catch((err) => {\r\n                        return res.json({ 'error': 'Cannot Update client', 'code': 0 })\r\n                    })\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify client', err, 'code': 0 })\r\n            })\r\n\r\n    })\r\n\r\n     // Delete client\r\n     app.delete('/api/clients/:id', verifyToken, (req, res) => {\r\n\r\n        // Params\r\n        var client = { id:req.params.id}\r\n\r\n        // Verify if exist into models.clients\r\n\r\n        models.Client.findOne({\r\n            attributes: [\"id\"],\r\n            where: { id: client.id }\r\n        })\r\n            .then((clientFound2) => {\r\n                clientFound2.destroy(client)\r\n                    .then(() => {\r\n                        return res.json({ 'status':'success', 'code': 1 })\r\n                    })\r\n                    .catch((err) => {\r\n                        return res.json({ 'error': 'Cannot Delete client', 'code': 0 })\r\n                    })\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify client', err, 'code': 0 })\r\n            })\r\n\r\n    })\r\n   }\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1579890915071
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\",\"filename\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\\\\src\\\\routes\\\\client copy.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0",
      "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes\\client copy.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes\\client copy.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes\\client copy.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes",
        "sourceFileName": "client copy.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _verifyToken = _interopRequireDefault(require(\"../utils/verifyToken\"));\n\nvar _models = _interopRequireDefault(require(\"../models\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.exports = function (app) {\n  // List client/service\n  app.get('/api/clients', _verifyToken[\"default\"], function (req, res) {\n    _models[\"default\"].Client.findAll().then(function (clients) {\n      res.json({\n        clients: clients\n      });\n    });\n  }), // REGISTER USER V\n  app.post('/api/clients', _verifyToken[\"default\"], function (req, res) {\n    // Params\n    var client = {\n      name: req.body.name,\n      phone: req.body.phone\n    }; // Verify if exist into models.clients\n\n    _models[\"default\"].Client.create(client).then(function (clients) {\n      return res.json({\n        clients: clients,\n        'code': 1\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Cannot add client',\n        'code': 0\n      });\n    });\n  }); // UPDATE client\n\n  app.put('/api/clients', _verifyToken[\"default\"], function (req, res) {\n    // Params\n    var client = {\n      name: req.body.name,\n      phone: req.body.phone\n    }; // Verify if exist into models.clients\n\n    _models[\"default\"].Client.findOne({\n      attributes: [\"id\"],\n      where: {\n        id: req.body.id\n      }\n    }).then(function (clientFound2) {\n      clientFound2.update(client).then(function (clients) {\n        return res.json({\n          clients: clients,\n          'code': 1\n        });\n      })[\"catch\"](function (err) {\n        return res.json({\n          'error': 'Cannot Update client',\n          'code': 0\n        });\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify client',\n        err: err,\n        'code': 0\n      });\n    });\n  }); // Delete client\n\n  app[\"delete\"]('/api/clients', _verifyToken[\"default\"], function (req, res) {\n    // Params\n    var client = {\n      id: req.body.id\n    }; // Verify if exist into models.clients\n\n    _models[\"default\"].Client.findOne({\n      attributes: [\"id\"],\n      where: {\n        id: client.id\n      }\n    }).then(function (clientFound2) {\n      clientFound2.destroy(client).then(function () {\n        return res.json({\n          'status': 'success',\n          'code': 1\n        });\n      })[\"catch\"](function (err) {\n        return res.json({\n          'error': 'Cannot Delete client',\n          'code': 0\n        });\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify client',\n        err: err,\n        'code': 0\n      });\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsaWVudCBjb3B5LmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJhcHAiLCJnZXQiLCJ2ZXJpZnlUb2tlbiIsInJlcSIsInJlcyIsIm1vZGVscyIsIkNsaWVudCIsImZpbmRBbGwiLCJ0aGVuIiwiY2xpZW50cyIsImpzb24iLCJwb3N0IiwiY2xpZW50IiwibmFtZSIsImJvZHkiLCJwaG9uZSIsImNyZWF0ZSIsImVyciIsInB1dCIsImZpbmRPbmUiLCJhdHRyaWJ1dGVzIiwid2hlcmUiLCJpZCIsImNsaWVudEZvdW5kMiIsInVwZGF0ZSIsImRlc3Ryb3kiXSwibWFwcGluZ3MiOiI7O0FBQ0E7O0FBQ0E7Ozs7QUFHQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUFDLEdBQUcsRUFBSTtBQUVwQjtBQUNBQSxFQUFBQSxHQUFHLENBQUNDLEdBQUosQ0FBUSxjQUFSLEVBQXdCQyx1QkFBeEIsRUFBcUMsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDL0NDLHVCQUFPQyxNQUFQLENBQWNDLE9BQWQsR0FBd0JDLElBQXhCLENBQTZCLFVBQUNDLE9BQUQsRUFBYTtBQUV0Q0wsTUFBQUEsR0FBRyxDQUFDTSxJQUFKLENBQVM7QUFDTEQsUUFBQUEsT0FBTyxFQUFQQTtBQURLLE9BQVQ7QUFHSCxLQUxEO0FBTUgsR0FQRCxHQVFBO0FBQ0FULEVBQUFBLEdBQUcsQ0FBQ1csSUFBSixDQUFTLGNBQVQsRUFBeUJULHVCQUF6QixFQUFzQyxVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUNoRDtBQUNBLFFBQUlRLE1BQU0sR0FBRztBQUNUQyxNQUFBQSxJQUFJLEVBQUVWLEdBQUcsQ0FBQ1csSUFBSixDQUFTRCxJQUROO0FBRVRFLE1BQUFBLEtBQUssRUFBRVosR0FBRyxDQUFDVyxJQUFKLENBQVNDO0FBRlAsS0FBYixDQUZnRCxDQU9oRDs7QUFFQVYsdUJBQU9DLE1BQVAsQ0FBY1UsTUFBZCxDQUFxQkosTUFBckIsRUFDS0osSUFETCxDQUNVLFVB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QVM7QUFBRSxpQkFBUyx5QkFBWDtBQUFzQ08sUUFBQUEsR0FBRyxFQUFIQSxHQUF0QztBQUEyQyxnQkFBUTtBQUFuRCxPQUFULENBQVA7QUFDSCxLQWhCTDtBQWtCSCxHQXpCQTtBQTBCRCxDQXpGSiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGFzdXNcXERvY3VtZW50c1xcS3Jvd1xcQXp1bHVsYSAtIEJveWthXFxhenVWZW5kYXMgMS4wXFxzcmNcXHJvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5pbXBvcnQgdmVyaWZ5VG9rZW4gZnJvbSAnLi4vdXRpbHMvdmVyaWZ5VG9rZW4nXHJcbmltcG9ydCBtb2RlbHMgZnJvbSAnLi4vbW9kZWxzJ1xyXG5cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gYXBwID0+IHtcclxuXHJcbiAgICAvLyBMaXN0IGNsaWVudC9zZXJ2aWNlXHJcbiAgICBhcHAuZ2V0KCcvYXBpL2NsaWVudHMnLCB2ZXJpZnlUb2tlbiwgKHJlcSwgcmVzKSA9PiB7XHJcbiAgICAgICAgbW9kZWxzLkNsaWVudC5maW5kQWxsKCkudGhlbigoY2xpZW50cykgPT4ge1xyXG5cclxuICAgICAgICAgICAgcmVzLmpzb24oe1xyXG4gICAgICAgICAgICAgICAgY2xpZW50c1xyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIH0pXHJcbiAgICB9KSxcclxuICAgIC8vIFJFR0lTVEVSIFVTRVIgVlxyXG4gICAgYXBwLnBvc3QoJy9hcGkvY2xpZW50cycsIHZlcmlmeVRva2VuLCAocmVxLCByZXMpID0+IHtcclxuICAgICAgICAvLyBQYXJhbXNcclxuICAgICAgICB2YXIgY2xpZW50ID0ge1xyXG4gICAgICAgICAgICBuYW1lOiByZXEuYm9keS5uYW1lLFxyXG4gICAgICAgICAgICBwaG9uZTogcmVxLmJvZHkucGhvbmVcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIFZlcmlmeSBpZiBleGlzdCBpbnRvIG1vZGVscy5jbGllbnRzXHJcbiAgICAgXHJcbiAgICAgICAgbW9kZWxzLkNsaWVudC5jcmVhdGUoY2xpZW50KVxyXG4gICAgICAgICAgICAudGhlbigoY2xpZW50cykgPT4ge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5qc29uKHsgY2xpZW50cywgJ2NvZGUnOiAxIH0pXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzLmpzb24oeyAnZXJyb3InOiAnQ2Fubm90IGFkZCBjbGllbnQnLCAnY29kZSc6IDAgfSlcclxuICAgICAgICAgICAgfSlcclxuXHJcbiAgICB9KVxyXG5cclxuICAgIC8vIFVQREFURSBjbGllbnRcclxuICAgIGFwcC5wdXQoJy9hcGkvY2xpZW50cycsIHZlcmlmeVRva2VuLCAocmVxLCByZXMpID0+IHtcclxuXHJcbiAgICAgICAgLy8gUGFyYW1zXHJcbiAgICAgICAgdmFyIGNsaWVudCA9IHtcclxuICAgICAgICAgICAgbmFtZTogcmVxLmJvZHkubmFtZSxcclxuICAgICAgICAgICAgcGhvbmU6IHJlcS5ib2R5LnBob25lXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvLyBWZXJpZnkgaWYgZXhpc3QgaW50byBtb2RlbHMuY2xpZW50c1xyXG5cclxuICAgICAgICBtb2RlbHMuQ2xpZW50LmZpbmRPbmUoe1xyXG4gICAgICAgICAgICBhdHRyaWJ1dGVzOiBbXCJpZFwiXSxcclxuICAgICAgICAgICAgd2hlcmU6IHsgaWQ6IHJlcS5ib2R5LmlkIH1cclxuICAgICAgICB9KVxyXG4gICAgICAgICAgICAudGhlbigoY2xpZW50Rm91bmQyKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBjbGllbnRGb3VuZDIudXBkYXRlKGNsaWVudClcclxuICAgICAgICAgICAgICAgICAgICAudGhlbigoY2xpZW50cykgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzLmpzb24oeyBjbGllbnRzLCAnY29kZSc6IDEgfSlcclxuICAgICAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByZXMuanNvbih7ICdlcnJvcic6ICdDYW5ub3QgVXBkYXRlIGNsaWVudCcsICdjb2RlJzogMCB9KVxyXG4gICAgICAgICAgICAgICAgICAgIH0pXHJcblxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5qc29uKHsgJ2Vycm9yJzogJ1VuYWJsZSB0byB2ZXJpZnkgY2xpZW50JywgZXJyLCAnY29kZSc6IDAgfSlcclxuICAgICAgICAgICAgfSlcclxuXHJcbiAgICB9KVxyXG5cclxuICAgICAvLyBEZWxldGUgY2xpZW50XHJcbiAgICAgYXBwLmRlbGV0ZSgnL2FwaS9jbGllbnRzJywgdmVyaWZ5VG9rZW4sIChyZXEsIHJlcykgPT4ge1xyXG5cclxuICAgICAgICAvLyBQYXJhbXNcclxuICAgICAgICB2YXIgY2xpZW50ID0geyBpZDpyZXEuYm9keS5pZH1cclxuXHJcbiAgICAgICAgLy8gVmVyaWZ5IGlmIGV4aXN0IGludG8gbW9kZWxzLmNsaWVudHNcclxuXHJcbiAgICAgICAgbW9kZWxzLkNsaWVudC5maW5kT25lKHtcclxuICAgICAgICAgICAgYXR0cmlidXRlczogW1wiaWRcIl0sXHJcbiAgICAgICAgICAgIHdoZXJlOiB7IGlkOiBjbGllbnQuaWQgfVxyXG4gICAgICAgIH0pXHJcbiAgICAgICAgICAgIC50aGVuKChjbGllbnRGb3VuZDIpID0+IHtcclxuICAgICAgICAgICAgICAgIGNsaWVudEZvdW5kMi5kZXN0cm95KGNsaWVudClcclxuICAgICAgICAgICAgICAgICAgICAudGhlbigoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByZXMuanNvbih7ICdzdGF0dXMnOidzdWNjZXNzJywgJ2NvZGUnOiAxIH0pXHJcbiAgICAgICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgICAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzLmpzb24oeyAnZXJyb3InOiAnQ2Fubm90IERlbGV0ZSBjbGllbnQnLCAnY29kZSc6IDAgfSlcclxuICAgICAgICAgICAgICAgICAgICB9KVxyXG5cclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgICAgICAgICAgIHJldHVybiByZXMuanNvbih7ICdlcnJvcic6ICdVbmFibGUgdG8gdmVyaWZ5IGNsaWVudCcsIGVyciwgJ2NvZGUnOiAwIH0pXHJcbiAgICAgICAgICAgIH0pXHJcblxyXG4gICAgfSlcclxuICAgfVxyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "client copy.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "get",
        "verifyToken",
        "req",
        "res",
        "models",
        "Client",
        "findAll",
        "then",
        "clients",
        "json",
        "post",
        "client",
        "name",
        "body",
        "phone",
        "create",
        "err",
        "put",
        "findOne",
        "attributes",
        "where",
        "id",
        "clientFound2",
        "update",
        "destroy"
      ],
      "mappings": ";;AACA;;AACA;;;;AAGAA,MAAM,CAACC,OAAP,GAAiB,UAAAC,GAAG,EAAI;AAEpB;AACAA,EAAAA,GAAG,CAACC,GAAJ,CAAQ,cAAR,EAAwBC,uBAAxB,EAAqC,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC/CC,uBAAOC,MAAP,CAAcC,OAAd,GAAwBC,IAAxB,CAA6B,UAACC,OAAD,EAAa;AAEtCL,MAAAA,GAAG,CAACM,IAAJ,CAAS;AACLD,QAAAA,OAAO,EAAPA;AADK,OAAT;AAGH,KALD;AAMH,GAPD,GAQA;AACAT,EAAAA,GAAG,CAACW,IAAJ,CAAS,cAAT,EAAyBT,uBAAzB,EAAsC,UAACC,GAAD,EAAMC,GAAN,EAAc;AAChD;AACA,QAAIQ,MAAM,GAAG;AACTC,MAAAA,IAAI,EAAEV,GAAG,CAACW,IAAJ,CAASD,IADN;AAETE,MAAAA,KAAK,EAAEZ,GAAG,CAACW,IAAJ,CAASC;AAFP,KAAb,CAFgD,CAOhD;;AAEAV,uBAAOC,MAAP,CAAcU,MAAd,CAAqBJ,MAArB,EACKJ,IADL,CACU,UAACC,OAAD,EAAa;AACf,aAAOL,GAAG,CAACM,IAAJ,CAAS;AAAED,QAAAA,OAAO,EAAPA,OAAF;AAAW,gBAAQ;AAAnB,OAAT,CAAP;AACH,KAHL,WAIW,UAACQ,GAAD,EAAS;AACZ,aAAOb,GAAG,CAACM,IAAJ,CAAS;AAAE,iBAAS,mBAAX;AAAgC,gBAAQ;AAAxC,OAAT,CAAP;AACH,KANL;AAQH,GAjBD,CATA,CAHoB,CA+BpB;;AACAV,EAAAA,GAAG,CAACkB,GAAJ,CAAQ,cAAR,EAAwBhB,uBAAxB,EAAqC,UAACC,GAAD,EAAMC,GAAN,EAAc;AAE/C;AACA,QAAIQ,MAAM,GAAG;AACTC,MAAAA,IAAI,EAAEV,GAAG,CAACW,IAAJ,CAASD,IADN;AAETE,MAAAA,KAAK,EAAEZ,GAAG,CAACW,IAAJ,CAASC;AAFP,KAAb,CAH+C,CAQ/C;;AAEAV,uBAAOC,MAAP,CAAca,OAAd,CAAsB;AAClBC,MAAAA,UAAU,EAAE,CAAC,IAAD,CADM;AAElBC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,EAAE,EAAEnB,GAAG,CAACW,IAAJ,CAASQ;AAAf;AAFW,KAAtB,EAIKd,IAJL,CAIU,UAACe,YAAD,EAAkB;AACpBA,MAAAA,YAAY,CAACC,MAAb,CAAoBZ,MAApB,EACKJ,IADL,CACU,UAACC,OAAD,EAAa;AACf,eAAOL,GAAG,CAACM,IAAJ,CAAS;AAAED,UAAAA,OAAO,EAAPA,OAAF;AAAW,kBAAQ;AAAnB,SAAT,CAAP;AACH,OAHL,WAIW,UAACQ,GAAD,EAAS;AACZ,eAAOb,GAAG,CAACM,IAAJ,CAAS;AAAE,mBAAS,sBAAX;AAAmC,kBAAQ;AAA3C,SAAT,CAAP;AACH,OANL;AAQH,KAbL,WAcW,UAACO,GAAD,EAAS;AACZ,aAAOb,GAAG,CAACM,IAAJ,CAAS;AAAE,iBAAS,yBAAX;AAAsCO,QAAAA,GAAG,EAAHA,GAAtC;AAA2C,gBAAQ;AAAnD,OAAT,CAAP;AACH,KAhBL;AAkBH,GA5BD,EAhCoB,CA8DnB;;AACAjB,EAAAA,GAAG,UAAH,CAAW,cAAX,EAA2BE,uBAA3B,EAAwC,UAACC,GAAD,EAAMC,GAAN,EAAc;AAEnD;AACA,QAAIQ,MAAM,GAAG;AAAEU,MAAAA,EAAE,EAACnB,GAAG,CAACW,IAAJ,CAASQ;AAAd,KAAb,CAHmD,CAKnD;;AAEAjB,uBAAOC,MAAP,CAAca,OAAd,CAAsB;AAClBC,MAAAA,UAAU,EAAE,CAAC,IAAD,CADM;AAElBC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,EAAE,EAAEV,MAAM,CAACU;AAAb;AAFW,KAAtB,EAIKd,IAJL,CAIU,UAACe,YAAD,EAAkB;AACpBA,MAAAA,YAAY,CAACE,OAAb,CAAqBb,MAArB,EACKJ,IADL,CACU,YAAM;AACR,eAAOJ,GAAG,CAACM,IAAJ,CAAS;AAAE,oBAAS,SAAX;AAAsB,kBAAQ;AAA9B,SAAT,CAAP;AACH,OAHL,WAIW,UAACO,GAAD,EAAS;AACZ,eAAOb,GAAG,CAACM,IAAJ,CAAS;AAAE,mBAAS,sBAAX;AAAmC,kBAAQ;AAA3C,SAAT,CAAP;AACH,OANL;AAQH,KAbL,WAcW,UAACO,GAAD,EAAS;AACZ,aAAOb,GAAG,CAACM,IAAJ,CAAS;AAAE,iBAAS,yBAAX;AAAsCO,QAAAA,GAAG,EAAHA,GAAtC;AAA2C,gBAAQ;AAAnD,OAAT,CAAP;AACH,KAhBL;AAkBH,GAzBA;AA0BD,CAzFJ",
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes",
      "sourcesContent": [
        "\r\nimport verifyToken from '../utils/verifyToken'\r\nimport models from '../models'\r\n\r\n\r\nmodule.exports = app => {\r\n\r\n    // List client/service\r\n    app.get('/api/clients', verifyToken, (req, res) => {\r\n        models.Client.findAll().then((clients) => {\r\n\r\n            res.json({\r\n                clients\r\n            })\r\n        })\r\n    }),\r\n    // REGISTER USER V\r\n    app.post('/api/clients', verifyToken, (req, res) => {\r\n        // Params\r\n        var client = {\r\n            name: req.body.name,\r\n            phone: req.body.phone\r\n        }\r\n\r\n        // Verify if exist into models.clients\r\n     \r\n        models.Client.create(client)\r\n            .then((clients) => {\r\n                return res.json({ clients, 'code': 1 })\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Cannot add client', 'code': 0 })\r\n            })\r\n\r\n    })\r\n\r\n    // UPDATE client\r\n    app.put('/api/clients', verifyToken, (req, res) => {\r\n\r\n        // Params\r\n        var client = {\r\n            name: req.body.name,\r\n            phone: req.body.phone\r\n        }\r\n\r\n        // Verify if exist into models.clients\r\n\r\n        models.Client.findOne({\r\n            attributes: [\"id\"],\r\n            where: { id: req.body.id }\r\n        })\r\n            .then((clientFound2) => {\r\n                clientFound2.update(client)\r\n                    .then((clients) => {\r\n                        return res.json({ clients, 'code': 1 })\r\n                    })\r\n                    .catch((err) => {\r\n                        return res.json({ 'error': 'Cannot Update client', 'code': 0 })\r\n                    })\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify client', err, 'code': 0 })\r\n            })\r\n\r\n    })\r\n\r\n     // Delete client\r\n     app.delete('/api/clients', verifyToken, (req, res) => {\r\n\r\n        // Params\r\n        var client = { id:req.body.id}\r\n\r\n        // Verify if exist into models.clients\r\n\r\n        models.Client.findOne({\r\n            attributes: [\"id\"],\r\n            where: { id: client.id }\r\n        })\r\n            .then((clientFound2) => {\r\n                clientFound2.destroy(client)\r\n                    .then(() => {\r\n                        return res.json({ 'status':'success', 'code': 1 })\r\n                    })\r\n                    .catch((err) => {\r\n                        return res.json({ 'error': 'Cannot Delete client', 'code': 0 })\r\n                    })\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify client', err, 'code': 0 })\r\n            })\r\n\r\n    })\r\n   }\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1579878117593
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\",\"filename\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\\\\src\\\\routes\\\\provider.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0",
      "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes\\provider.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes\\provider.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes\\provider.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes",
        "sourceFileName": "provider.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _verifyToken = _interopRequireDefault(require(\"../utils/verifyToken\"));\n\nvar _models = _interopRequireDefault(require(\"../models\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.exports = function (app) {\n  // List provider/service\n  app.get('/api/providers', _verifyToken[\"default\"], function (req, res) {\n    _models[\"default\"].Provider.findAll().then(function (providers) {\n      res.json({\n        providers: providers\n      });\n    });\n  }), // REGISTER provider\n  app.post('/api/providers', _verifyToken[\"default\"], function (req, res) {\n    // Params\n    var provider = req.body; // Verify if exist into models.providers\n\n    _models[\"default\"].Provider.findOne({\n      attributes: [\"company\"],\n      where: {\n        company: provider.company\n      }\n    }).then(function (providerFound) {\n      if (!providerFound) {\n        _models[\"default\"].Provider.create(provider).then(function (providers) {\n          return res.json({\n            providers: providers,\n            'code': 1\n          });\n        })[\"catch\"](function (err) {\n          return res.json({\n            'error': 'Cannot add provider',\n            'code': 0\n          });\n        });\n      } else {\n        return res.json({\n          'error': 'provider already exist',\n          'code': 11\n        });\n      }\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify provider',\n        err: err,\n        'code': 0\n      });\n    });\n  }); // UPDATE provider\n\n  app.put('/api/providers/:id', _verifyToken[\"default\"], function (req, res) {\n    // Params\n    var provider = req.body; // Verify if exist into models.providers\n\n    _models[\"default\"].Provider.findOne({\n      attributes: [\"id\"],\n      where: {\n        id: req.params.id\n      }\n    }).then(function (providerFound2) {\n      providerFound2.update(provider).then(function (providers) {\n        return res.json({\n          providers: providers,\n          'code': 1\n        });\n      })[\"catch\"](function (err) {\n        return res.json({\n          'error': 'Cannot Update provider',\n          'code': 0\n        });\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify provider',\n        err: err,\n        'code': 0\n      });\n    });\n  }); // Delete provider\n\n  app[\"delete\"]('/api/providers/:id', _verifyToken[\"default\"], function (req, res) {\n    // Params\n    var provider = {\n      id: req.params.id\n    }; // Verify if exist into models.providers\n\n    _models[\"default\"].Provider.findOne({\n      attributes: [\"id\"],\n      where: {\n        id: provider.id\n      }\n    }).then(function (providerFound2) {\n      providerFound2.destroy(provider).then(function () {\n        return res.json({\n          'status': 'success',\n          'code': 1\n        });\n      })[\"catch\"](function (err) {\n        return res.json({\n          'error': 'Cannot Delete provider',\n          'code': 0\n        });\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify provider',\n        err: err,\n        'code': 0\n      });\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "provider.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "get",
        "verifyToken",
        "req",
        "res",
        "models",
        "Provider",
        "findAll",
        "then",
        "providers",
        "json",
        "post",
        "provider",
        "body",
        "findOne",
        "attributes",
        "where",
        "company",
        "providerFound",
        "create",
        "err",
        "put",
        "id",
        "params",
        "providerFound2",
        "update",
        "destroy"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes",
      "sourcesContent": [
        "\r\nimport verifyToken from '../utils/verifyToken'\r\nimport models from '../models'\r\n\r\nmodule.exports = app => {\r\n\r\n    // List provider/service\r\n    app.get('/api/providers', verifyToken, (req, res) => {\r\n        models.Provider.findAll().then((providers) => {\r\n\r\n            res.json({\r\n                providers\r\n            })\r\n        })\r\n    }),\r\n    // REGISTER provider\r\n    app.post('/api/providers', verifyToken, (req, res) => {\r\n        // Params\r\n        var provider = req.body\r\n\r\n        // Verify if exist into models.providers\r\n        models.Provider.findOne({\r\n            attributes: [\"company\"],\r\n            where: { company: provider.company }\r\n        })\r\n            .then((providerFound) => {\r\n                if (!providerFound) {\r\n                    models.Provider.create(provider)\r\n                        .then((providers) => {\r\n                            return res.json({ providers, 'code': 1 })\r\n                        })\r\n                        .catch((err) => {\r\n                            return res.json({ 'error': 'Cannot add provider', 'code': 0 })\r\n                        })\r\n                    } else {\r\n                        return res.json({ 'error': 'provider already exist', 'code': 11 })\r\n                    }\r\n\r\n                })\r\n        .catch((err) => {\r\n            return res.json({ 'error': 'Unable to verify provider', err, 'code': 0 })\r\n        })\r\n\r\n    })\r\n\r\n    // UPDATE provider\r\n    app.put('/api/providers/:id', verifyToken, (req, res) => {\r\n\r\n        // Params\r\n        var provider = req.body\r\n\r\n        // Verify if exist into models.providers\r\n\r\n        models.Provider.findOne({\r\n            attributes: [\"id\"],\r\n            where: { id: req.params.id }\r\n        })\r\n            .then((providerFound2) => {\r\n                providerFound2.update(provider)\r\n                    .then((providers) => {\r\n                        return res.json({ providers, 'code': 1 })\r\n                    })\r\n                    .catch((err) => {\r\n                        return res.json({ 'error': 'Cannot Update provider', 'code': 0 })\r\n                    })\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify provider', err, 'code': 0 })\r\n            })\r\n\r\n    })\r\n\r\n     // Delete provider\r\n     app.delete('/api/providers/:id', verifyToken, (req, res) => {\r\n\r\n        // Params\r\n        var provider = { id:req.params.id}\r\n\r\n        // Verify if exist into models.providers\r\n\r\n        models.Provider.findOne({\r\n            attributes: [\"id\"],\r\n            where: { id: provider.id }\r\n        })\r\n            .then((providerFound2) => {\r\n                providerFound2.destroy(provider)\r\n                    .then(() => {\r\n                        return res.json({ 'status':'success', 'code': 1 })\r\n                    })\r\n                    .catch((err) => {\r\n                        return res.json({ 'error': 'Cannot Delete provider', 'code': 0 })\r\n                    })\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify provider', err, 'code': 0 })\r\n            })\r\n\r\n    })\r\n   }\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1579890593061
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\",\"filename\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\\\\src\\\\routes\\\\order.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0",
      "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes\\order.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes\\order.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes\\order.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes",
        "sourceFileName": "order.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _verifyToken = _interopRequireDefault(require(\"../utils/verifyToken\"));\n\nvar _models = _interopRequireDefault(require(\"../models\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.exports = function (app) {\n  // List order/service\n  app.get('/api/orders', _verifyToken[\"default\"], function (req, res) {\n    _models[\"default\"].Order.findAll({\n      include: [_models[\"default\"].Client, {\n        association: _models[\"default\"].Order.OrderItems,\n        include: [_models[\"default\"].OrderItem.Product]\n      }]\n    }).then(function (orders) {\n      res.json({\n        orders: orders\n      });\n    });\n  }), // REGISTER Orders\n  app.post('/api/orders', _verifyToken[\"default\"], function (req, res) {\n    // Params\n    // Verify if exist into models.orders\n    _models[\"default\"].Order.create(req.body, {\n      include: [_models[\"default\"].OrderItem]\n    }).then(function (orders) {\n      return res.json({\n        orders: orders,\n        'code': 1\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Cannot add order',\n        'code': 0\n      });\n    });\n  }); // UPDATE order\n\n  app.put('/api/orders/:id', _verifyToken[\"default\"], function (req, res) {\n    // Params\n    var order = req.body; // Verify if exist into models.orders\n\n    _models[\"default\"].Order.findOne({\n      attributes: [\"id\"],\n      where: {\n        id: req.params.id\n      }\n    }).then(function (orderFound2) {\n      orderFound2.update(order).then(function (orders) {\n        return res.json({\n          orders: orders,\n          'code': 1\n        });\n      })[\"catch\"](function (err) {\n        return res.json({\n          'error': 'Cannot Update order',\n          'code': 0\n        });\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify order',\n        err: err,\n        'code': 0\n      });\n    });\n  }); // Delete order\n\n  app[\"delete\"]('/api/orders/:id', _verifyToken[\"default\"], function (req, res) {\n    // Params\n    var order = {\n      id: req.params.id\n    }; // Verify if exist into models.orders\n\n    _models[\"default\"].Order.findOne({\n      attributes: [\"id\"],\n      where: {\n        id: order.id\n      }\n    }).then(function (orderFound2) {\n      orderFound2.destroy(order).then(function () {\n        _models[\"default\"].OrderItem.destroy({\n          attributes: [\"orderId\"],\n          where: {\n            orderId: order.id\n          }\n        }).then(function () {\n          return res.json({\n            'status': 'success',\n            'code': 1\n          });\n        });\n      })[\"catch\"](function (err) {\n        return res.json({\n          'error': 'Cannot Delete order',\n          'code': 0\n        });\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify order',\n        err: err,\n        'code': 0\n      });\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "order.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "get",
        "verifyToken",
        "req",
        "res",
        "models",
        "Order",
        "findAll",
        "include",
        "Client",
        "association",
        "OrderItems",
        "OrderItem",
        "Product",
        "then",
        "orders",
        "json",
        "post",
        "create",
        "body",
        "err",
        "put",
        "order",
        "findOne",
        "attributes",
        "where",
        "id",
        "params",
        "orderFound2",
        "update",
        "destroy",
        "orderId"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes",
      "sourcesContent": [
        "\r\nimport verifyToken from '../utils/verifyToken'\r\nimport models from '../models'\r\n\r\n\r\nmodule.exports = app => {\r\n\r\n    // List order/service\r\n    app.get('/api/orders', verifyToken, (req, res) => {\r\n        models.Order.findAll(\r\n            {include: [models.Client, {association: models.Order.OrderItems, include: [models.OrderItem.Product]}]})\r\n            .then((orders) => {\r\n\r\n            res.json({\r\n                orders\r\n            })\r\n        })\r\n    }),\r\n    // REGISTER Orders\r\n    app.post('/api/orders', verifyToken, (req, res) => {\r\n        // Params\r\n\r\n\r\n        // Verify if exist into models.orders\r\n\r\n        models.Order.create(req.body, {include: [models.OrderItem]})\r\n            .then((orders) => {\r\n                return res.json({ orders, 'code': 1 })\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Cannot add order', 'code': 0 })\r\n            })\r\n            \r\n\r\n       \r\n    })\r\n\r\n    // UPDATE order\r\n    app.put('/api/orders/:id', verifyToken, (req, res) => {\r\n\r\n        // Params\r\n        var order = req.body\r\n\r\n        // Verify if exist into models.orders\r\n\r\n        models.Order.findOne({\r\n            attributes: [\"id\"],\r\n            where: { id: req.params.id }\r\n        })\r\n            .then((orderFound2) => {\r\n                orderFound2.update(order)\r\n                    .then((orders) => {\r\n                        return res.json({ orders, 'code': 1 })\r\n                    })\r\n                    .catch((err) => {\r\n                        return res.json({ 'error': 'Cannot Update order', 'code': 0 })\r\n                    })\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify order', err, 'code': 0 })\r\n            })\r\n\r\n    })\r\n\r\n     // Delete order\r\n     app.delete('/api/orders/:id', verifyToken, (req, res) => {\r\n\r\n        // Params\r\n        var order = { id:req.params.id}\r\n\r\n        // Verify if exist into models.orders\r\n\r\n        models.Order.findOne({\r\n            attributes: [\"id\"],\r\n            where: { id: order.id }\r\n        }).then((orderFound2) => {\r\n                orderFound2.destroy(order)\r\n                    .then(() => {\r\n                        models.OrderItem.destroy({\r\n                            attributes: [\"orderId\"],\r\n                            where: { orderId: order.id }\r\n                        }).then(()=>{\r\n                            return res.json({ 'status':'success', 'code': 1 })\r\n                        }) \r\n                    })\r\n                    .catch((err) => {\r\n                        return res.json({ 'error': 'Cannot Delete order', 'code': 0 })\r\n                    })\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify order', err, 'code': 0 })\r\n            })\r\n\r\n    })\r\n   }\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1579907207879
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\",\"filename\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\\\\src\\\\routes\\\\order copy.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0",
      "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes\\order copy.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes\\order copy.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes\\order copy.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes",
        "sourceFileName": "order copy.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _verifyToken = _interopRequireDefault(require(\"../utils/verifyToken\"));\n\nvar _models = _interopRequireDefault(require(\"../models\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.exports = function (app) {\n  // List order/service\n  app.get('/api/orders', _verifyToken[\"default\"], function (req, res) {\n    _models[\"default\"].Order.findAll().then(function (orders) {\n      res.json({\n        orders: orders\n      });\n    });\n  }), // REGISTER USER V\n  app.post('/api/orders', _verifyToken[\"default\"], function (req, res) {\n    // Params\n    // Verify if exist into models.orders\n    _models[\"default\"].Order.create(req.body.body, {\n      include: [_models[\"default\"].OrderItem]\n    }).then(function (orders) {\n      return res.json({\n        orders: orders,\n        'code': 1\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Cannot add order',\n        'code': 0\n      });\n    });\n  }); // UPDATE order\n\n  app.put('/api/orders', _verifyToken[\"default\"], function (req, res) {\n    // Params\n    var order = {\n      name: req.body.name\n    }; // Verify if exist into models.orders\n\n    _models[\"default\"].order.findOne({\n      attributes: [\"id\"],\n      where: {\n        id: req.body.id\n      }\n    }).then(function (orderFound2) {\n      orderFound2.update(order).then(function (orders) {\n        return res.json({\n          orders: orders,\n          'code': 1\n        });\n      })[\"catch\"](function (err) {\n        return res.json({\n          'error': 'Cannot Update order',\n          'code': 0\n        });\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify order',\n        err: err,\n        'code': 0\n      });\n    });\n  }); // Delete order\n\n  app[\"delete\"]('/api/orders', _verifyToken[\"default\"], function (req, res) {\n    // Params\n    var order = {\n      id: req.body.id\n    }; // Verify if exist into models.orders\n\n    _models[\"default\"].order.findOne({\n      attributes: [\"id\"],\n      where: {\n        id: order.id\n      }\n    }).then(function (orderFound2) {\n      orderFound2.destroy(order).then(function () {\n        return res.json({\n          'status': 'success',\n          'code': 1\n        });\n      })[\"catch\"](function (err) {\n        return res.json({\n          'error': 'Cannot Delete order',\n          'code': 0\n        });\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify order',\n        err: err,\n        'code': 0\n      });\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9yZGVyIGNvcHkuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImFwcCIsImdldCIsInZlcmlmeVRva2VuIiwicmVxIiwicmVzIiwibW9kZWxzIiwiT3JkZXIiLCJmaW5kQWxsIiwidGhlbiIsIm9yZGVycyIsImpzb24iLCJwb3N0IiwiY3JlYXRlIiwiYm9keSIsImluY2x1ZGUiLCJPcmRlckl0ZW0iLCJlcnIiLCJwdXQiLCJvcmRlciIsIm5hbWUiLCJmaW5kT25lIiwiYXR0cmlidXRlcyIsIndoZXJlIiwiaWQiLCJvcmRlckZvdW5kMiIsInVwZGF0ZSIsImRlc3Ryb3kiXSwibWFwcGluZ3MiOiI7O0FBQ0E7O0FBQ0E7Ozs7QUFHQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUFDLEdBQUcsRUFBSTtBQUVwQjtBQUNBQSxFQUFBQSxHQUFHLENBQUNDLEdBQUosQ0FBUSxhQUFSLEVBQXVCQyx1QkFBdkIsRUFBb0MsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDOUNDLHVCQUFPQyxLQUFQLENBQWFDLE9BQWIsR0FBdUJDLElBQXZCLENBQTRCLFVBQUNDLE1BQUQsRUFBWTtBQUVwQ0wsTUFBQUEsR0FBRyxDQUFDTSxJQUFKLENBQVM7QUFDTEQsUUFBQUEsTUFBTSxFQUFOQTtBQURLLE9BQVQ7QUFHSCxLQUxEO0FBTUgsR0FQRCxHQVFBO0FBQ0FULEVBQUFBLEdBQUcsQ0FBQ1csSUFBSixDQUFTLGFBQVQsRUFBd0JULHVCQUF4QixFQUFxQyxVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUMvQztBQUdBO0FBRUFDLHVCQUFPQyxLQUFQLENBQWFNLE1BQWIsQ0FBb0JULEdBQUcsQ0FBQ1UsSUFBSixDQUFTQSxJQUE3QixFQUFtQztBQUFDQyxNQUFBQSxPQUFPLEVBQUUsQ0FBQ1QsbUJBQU9VLFNBQVI7QUFBVixLQUFuQyxFQUNLUCxJQURMLENBQ1UsVUFBQ0MsTUFBRCxFQUFZO0FBQ2QsYUFBT0wsR0FBRyxDQUFDTSxJQUFKLENBQVM7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LEdBekJBO0FBMEJELENBdkZKIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcYXN1c1xcRG9jdW1lbnRzXFxLcm93XFxBenVsdWxhIC0gQm95a2FcXGF6dVZlbmRhcyAxLjBcXHNyY1xccm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmltcG9ydCB2ZXJpZnlUb2tlbiBmcm9tICcuLi91dGlscy92ZXJpZnlUb2tlbidcclxuaW1wb3J0IG1vZGVscyBmcm9tICcuLi9tb2RlbHMnXHJcblxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBhcHAgPT4ge1xyXG5cclxuICAgIC8vIExpc3Qgb3JkZXIvc2VydmljZVxyXG4gICAgYXBwLmdldCgnL2FwaS9vcmRlcnMnLCB2ZXJpZnlUb2tlbiwgKHJlcSwgcmVzKSA9PiB7XHJcbiAgICAgICAgbW9kZWxzLk9yZGVyLmZpbmRBbGwoKS50aGVuKChvcmRlcnMpID0+IHtcclxuXHJcbiAgICAgICAgICAgIHJlcy5qc29uKHtcclxuICAgICAgICAgICAgICAgIG9yZGVyc1xyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIH0pXHJcbiAgICB9KSxcclxuICAgIC8vIFJFR0lTVEVSIFVTRVIgVlxyXG4gICAgYXBwLnBvc3QoJy9hcGkvb3JkZXJzJywgdmVyaWZ5VG9rZW4sIChyZXEsIHJlcykgPT4ge1xyXG4gICAgICAgIC8vIFBhcmFtc1xyXG5cclxuXHJcbiAgICAgICAgLy8gVmVyaWZ5IGlmIGV4aXN0IGludG8gbW9kZWxzLm9yZGVyc1xyXG5cclxuICAgICAgICBtb2RlbHMuT3JkZXIuY3JlYXRlKHJlcS5ib2R5LmJvZHksIHtpbmNsdWRlOiBbbW9kZWxzLk9yZGVySXRlbV19KVxyXG4gICAgICAgICAgICAudGhlbigob3JkZXJzKSA9PiB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzLmpzb24oeyBvcmRlcnMsICdjb2RlJzogMSB9KVxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5qc29uKHsgJ2Vycm9yJzogJ0Nhbm5vdCBhZGQgb3JkZXInLCAnY29kZSc6IDAgfSlcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgXHJcblxyXG4gICAgICAgXHJcbiAgICB9KVxyXG5cclxuICAgIC8vIFVQREFURSBvcmRlclxyXG4gICAgYXBwLnB1dCgnL2FwaS9vcmRlcnMnLCB2ZXJpZnlUb2tlbiwgKHJlcSwgcmVzKSA9PiB7XHJcblxyXG4gICAgICAgIC8vIFBhcmFtc1xyXG4gICAgICAgIHZhciBvcmRlciA9IHtcclxuICAgICAgICAgICAgbmFtZTogcmVxLmJvZHkubmFtZVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy8gVmVyaWZ5IGlmIGV4aXN0IGludG8gbW9kZWxzLm9yZGVyc1xyXG5cclxuICAgICAgICBtb2RlbHMub3JkZXIuZmluZE9uZSh7XHJcbiAgICAgICAgICAgIGF0dHJpYnV0ZXM6IFtcImlkXCJdLFxyXG4gICAgICAgICAgICB3aGVyZTogeyBpZDogcmVxLmJvZHkuaWQgfVxyXG4gICAgICAgIH0pXHJcbiAgICAgICAgICAgIC50aGVuKChvcmRlckZvdW5kMikgPT4ge1xyXG4gICAgICAgICAgICAgICAgb3JkZXJGb3VuZDIudXBkYXRlKG9yZGVyKVxyXG4gICAgICAgICAgICAgICAgICAgIC50aGVuKChvcmRlcnMpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5qc29uKHsgb3JkZXJzLCAnY29kZSc6IDEgfSlcclxuICAgICAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByZXMuanNvbih7ICdlcnJvcic6ICdDYW5ub3QgVXBkYXRlIG9yZGVyJywgJ2NvZGUnOiAwIH0pXHJcbiAgICAgICAgICAgICAgICAgICAgfSlcclxuXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzLmpzb24oeyAnZXJyb3InOiAnVW5hYmxlIHRvIHZlcmlmeSBvcmRlcicsIGVyciwgJ2NvZGUnOiAwIH0pXHJcbiAgICAgICAgICAgIH0pXHJcblxyXG4gICAgfSlcclxuXHJcbiAgICAgLy8gRGVsZXRlIG9yZGVyXHJcbiAgICAgYXBwLmRlbGV0ZSgnL2FwaS9vcmRlcnMnLCB2ZXJpZnlUb2tlbiwgKHJlcSwgcmVzKSA9PiB7XHJcblxyXG4gICAgICAgIC8vIFBhcmFtc1xyXG4gICAgICAgIHZhciBvcmRlciA9IHsgaWQ6cmVxLmJvZHkuaWR9XHJcblxyXG4gICAgICAgIC8vIFZlcmlmeSBpZiBleGlzdCBpbnRvIG1vZGVscy5vcmRlcnNcclxuXHJcbiAgICAgICAgbW9kZWxzLm9yZGVyLmZpbmRPbmUoe1xyXG4gICAgICAgICAgICBhdHRyaWJ1dGVzOiBbXCJpZFwiXSxcclxuICAgICAgICAgICAgd2hlcmU6IHsgaWQ6IG9yZGVyLmlkIH1cclxuICAgICAgICB9KVxyXG4gICAgICAgICAgICAudGhlbigob3JkZXJGb3VuZDIpID0+IHtcclxuICAgICAgICAgICAgICAgIG9yZGVyRm91bmQyLmRlc3Ryb3kob3JkZXIpXHJcbiAgICAgICAgICAgICAgICAgICAgLnRoZW4oKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzLmpzb24oeyAnc3RhdHVzJzonc3VjY2VzcycsICdjb2RlJzogMSB9KVxyXG4gICAgICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5qc29uKHsgJ2Vycm9yJzogJ0Nhbm5vdCBEZWxldGUgb3JkZXInLCAnY29kZSc6IDAgfSlcclxuICAgICAgICAgICAgICAgICAgICB9KVxyXG5cclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgICAgICAgICAgIHJldHVybiByZXMuanNvbih7ICdlcnJvcic6ICdVbmFibGUgdG8gdmVyaWZ5IG9yZGVyJywgZXJyLCAnY29kZSc6IDAgfSlcclxuICAgICAgICAgICAgfSlcclxuXHJcbiAgICB9KVxyXG4gICB9XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "order copy.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "get",
        "verifyToken",
        "req",
        "res",
        "models",
        "Order",
        "findAll",
        "then",
        "orders",
        "json",
        "post",
        "create",
        "body",
        "include",
        "OrderItem",
        "err",
        "put",
        "order",
        "name",
        "findOne",
        "attributes",
        "where",
        "id",
        "orderFound2",
        "update",
        "destroy"
      ],
      "mappings": ";;AACA;;AACA;;;;AAGAA,MAAM,CAACC,OAAP,GAAiB,UAAAC,GAAG,EAAI;AAEpB;AACAA,EAAAA,GAAG,CAACC,GAAJ,CAAQ,aAAR,EAAuBC,uBAAvB,EAAoC,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC9CC,uBAAOC,KAAP,CAAaC,OAAb,GAAuBC,IAAvB,CAA4B,UAACC,MAAD,EAAY;AAEpCL,MAAAA,GAAG,CAACM,IAAJ,CAAS;AACLD,QAAAA,MAAM,EAANA;AADK,OAAT;AAGH,KALD;AAMH,GAPD,GAQA;AACAT,EAAAA,GAAG,CAACW,IAAJ,CAAS,aAAT,EAAwBT,uBAAxB,EAAqC,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC/C;AAGA;AAEAC,uBAAOC,KAAP,CAAaM,MAAb,CAAoBT,GAAG,CAACU,IAAJ,CAASA,IAA7B,EAAmC;AAACC,MAAAA,OAAO,EAAE,CAACT,mBAAOU,SAAR;AAAV,KAAnC,EACKP,IADL,CACU,UAACC,MAAD,EAAY;AACd,aAAOL,GAAG,CAACM,IAAJ,CAAS;AAAED,QAAAA,MAAM,EAANA,MAAF;AAAU,gBAAQ;AAAlB,OAAT,CAAP;AACH,KAHL,WAIW,UAACO,GAAD,EAAS;AACZ,aAAOZ,GAAG,CAACM,IAAJ,CAAS;AAAE,iBAAS,kBAAX;AAA+B,gBAAQ;AAAvC,OAAT,CAAP;AACH,KANL;AAUH,GAhBD,CATA,CAHoB,CA8BpB;;AACAV,EAAAA,GAAG,CAACiB,GAAJ,CAAQ,aAAR,EAAuBf,uBAAvB,EAAoC,UAACC,GAAD,EAAMC,GAAN,EAAc;AAE9C;AACA,QAAIc,KAAK,GAAG;AACRC,MAAAA,IAAI,EAAEhB,GAAG,CAACU,IAAJ,CAASM;AADP,KAAZ,CAH8C,CAO9C;;AAEAd,uBAAOa,KAAP,CAAaE,OAAb,CAAqB;AACjBC,MAAAA,UAAU,EAAE,CAAC,IAAD,CADK;AAEjBC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,EAAE,EAAEpB,GAAG,CAACU,IAAJ,CAASU;AAAf;AAFU,KAArB,EAIKf,IAJL,CAIU,UAACgB,WAAD,EAAiB;AACnBA,MAAAA,WAAW,CAACC,MAAZ,CAAmBP,KAAnB,EACKV,IADL,CACU,UAACC,MAAD,EAAY;AACd,eAAOL,GAAG,CAACM,IAAJ,CAAS;AAAED,UAAAA,MAAM,EAANA,MAAF;AAAU,kBAAQ;AAAlB,SAAT,CAAP;AACH,OAHL,WAIW,UAACO,GAAD,EAAS;AACZ,eAAOZ,GAAG,CAACM,IAAJ,CAAS;AAAE,mBAAS,qBAAX;AAAkC,kBAAQ;AAA1C,SAAT,CAAP;AACH,OANL;AAQH,KAbL,WAcW,UAACM,GAAD,EAAS;AACZ,aAAOZ,GAAG,CAACM,IAAJ,CAAS;AAAE,iBAAS,wBAAX;AAAqCM,QAAAA,GAAG,EAAHA,GAArC;AAA0C,gBAAQ;AAAlD,OAAT,CAAP;AACH,KAhBL;AAkBH,GA3BD,EA/BoB,CA4DnB;;AACAhB,EAAAA,GAAG,UAAH,CAAW,aAAX,EAA0BE,uBAA1B,EAAuC,UAACC,GAAD,EAAMC,GAAN,EAAc;AAElD;AACA,QAAIc,KAAK,GAAG;AAAEK,MAAAA,EAAE,EAACpB,GAAG,CAACU,IAAJ,CAASU;AAAd,KAAZ,CAHkD,CAKlD;;AAEAlB,uBAAOa,KAAP,CAAaE,OAAb,CAAqB;AACjBC,MAAAA,UAAU,EAAE,CAAC,IAAD,CADK;AAEjBC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,EAAE,EAAEL,KAAK,CAACK;AAAZ;AAFU,KAArB,EAIKf,IAJL,CAIU,UAACgB,WAAD,EAAiB;AACnBA,MAAAA,WAAW,CAACE,OAAZ,CAAoBR,KAApB,EACKV,IADL,CACU,YAAM;AACR,eAAOJ,GAAG,CAACM,IAAJ,CAAS;AAAE,oBAAS,SAAX;AAAsB,kBAAQ;AAA9B,SAAT,CAAP;AACH,OAHL,WAIW,UAACM,GAAD,EAAS;AACZ,eAAOZ,GAAG,CAACM,IAAJ,CAAS;AAAE,mBAAS,qBAAX;AAAkC,kBAAQ;AAA1C,SAAT,CAAP;AACH,OANL;AAQH,KAbL,WAcW,UAACM,GAAD,EAAS;AACZ,aAAOZ,GAAG,CAACM,IAAJ,CAAS;AAAE,iBAAS,wBAAX;AAAqCM,QAAAA,GAAG,EAAHA,GAArC;AAA0C,gBAAQ;AAAlD,OAAT,CAAP;AACH,KAhBL;AAkBH,GAzBA;AA0BD,CAvFJ",
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes",
      "sourcesContent": [
        "\r\nimport verifyToken from '../utils/verifyToken'\r\nimport models from '../models'\r\n\r\n\r\nmodule.exports = app => {\r\n\r\n    // List order/service\r\n    app.get('/api/orders', verifyToken, (req, res) => {\r\n        models.Order.findAll().then((orders) => {\r\n\r\n            res.json({\r\n                orders\r\n            })\r\n        })\r\n    }),\r\n    // REGISTER USER V\r\n    app.post('/api/orders', verifyToken, (req, res) => {\r\n        // Params\r\n\r\n\r\n        // Verify if exist into models.orders\r\n\r\n        models.Order.create(req.body.body, {include: [models.OrderItem]})\r\n            .then((orders) => {\r\n                return res.json({ orders, 'code': 1 })\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Cannot add order', 'code': 0 })\r\n            })\r\n            \r\n\r\n       \r\n    })\r\n\r\n    // UPDATE order\r\n    app.put('/api/orders', verifyToken, (req, res) => {\r\n\r\n        // Params\r\n        var order = {\r\n            name: req.body.name\r\n        }\r\n\r\n        // Verify if exist into models.orders\r\n\r\n        models.order.findOne({\r\n            attributes: [\"id\"],\r\n            where: { id: req.body.id }\r\n        })\r\n            .then((orderFound2) => {\r\n                orderFound2.update(order)\r\n                    .then((orders) => {\r\n                        return res.json({ orders, 'code': 1 })\r\n                    })\r\n                    .catch((err) => {\r\n                        return res.json({ 'error': 'Cannot Update order', 'code': 0 })\r\n                    })\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify order', err, 'code': 0 })\r\n            })\r\n\r\n    })\r\n\r\n     // Delete order\r\n     app.delete('/api/orders', verifyToken, (req, res) => {\r\n\r\n        // Params\r\n        var order = { id:req.body.id}\r\n\r\n        // Verify if exist into models.orders\r\n\r\n        models.order.findOne({\r\n            attributes: [\"id\"],\r\n            where: { id: order.id }\r\n        })\r\n            .then((orderFound2) => {\r\n                orderFound2.destroy(order)\r\n                    .then(() => {\r\n                        return res.json({ 'status':'success', 'code': 1 })\r\n                    })\r\n                    .catch((err) => {\r\n                        return res.json({ 'error': 'Cannot Delete order', 'code': 0 })\r\n                    })\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify order', err, 'code': 0 })\r\n            })\r\n\r\n    })\r\n   }\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1579884471777
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\",\"filename\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\\\\src\\\\routes\\\\orderItem.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0",
      "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes\\orderItem.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes\\orderItem.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes\\orderItem.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes",
        "sourceFileName": "orderItem.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _verifyToken = _interopRequireDefault(require(\"../utils/verifyToken\"));\n\nvar _models = _interopRequireDefault(require(\"../models\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.exports = function (app) {\n  // List order/service\n  app.get('/api/orders', _verifyToken[\"default\"], function (req, res) {\n    _models[\"default\"].Order.findAll().then(function (orders) {\n      res.json({\n        orders: orders\n      });\n    });\n  }), // REGISTER USER V\n  app.post('/api/orders', _verifyToken[\"default\"], function (req, res) {\n    // Params\n    // Verify if exist into models.orders\n    _models[\"default\"].Order.create(req.body.body, {\n      include: [_models[\"default\"].OrderItem]\n    }).then(function (orders) {\n      return res.json({\n        orders: orders,\n        'code': 1\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Cannot add order',\n        'code': 0\n      });\n    });\n  }); // UPDATE order\n\n  app.put('/api/orders', _verifyToken[\"default\"], function (req, res) {\n    // Params\n    var order = {\n      name: req.body.name\n    }; // Verify if exist into models.orders\n\n    _models[\"default\"].order.findOne({\n      attributes: [\"id\"],\n      where: {\n        id: req.body.id\n      }\n    }).then(function (orderFound2) {\n      orderFound2.update(order).then(function (orders) {\n        return res.json({\n          orders: orders,\n          'code': 1\n        });\n      })[\"catch\"](function (err) {\n        return res.json({\n          'error': 'Cannot Update order',\n          'code': 0\n        });\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify order',\n        err: err,\n        'code': 0\n      });\n    });\n  }); // Delete order\n\n  app[\"delete\"]('/api/orders', _verifyToken[\"default\"], function (req, res) {\n    // Params\n    var order = {\n      id: req.body.id\n    }; // Verify if exist into models.orders\n\n    _models[\"default\"].order.findOne({\n      attributes: [\"id\"],\n      where: {\n        id: order.id\n      }\n    }).then(function (orderFound2) {\n      orderFound2.destroy(order).then(function () {\n        return res.json({\n          'status': 'success',\n          'code': 1\n        });\n      })[\"catch\"](function (err) {\n        return res.json({\n          'error': 'Cannot Delete order',\n          'code': 0\n        });\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify order',\n        err: err,\n        'code': 0\n      });\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9yZGVySXRlbS5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiYXBwIiwiZ2V0IiwidmVyaWZ5VG9rZW4iLCJyZXEiLCJyZXMiLCJtb2RlbHMiLCJPcmRlciIsImZpbmRBbGwiLCJ0aGVuIiwib3JkZXJzIiwianNvbiIsInBvc3QiLCJjcmVhdGUiLCJib2R5IiwiaW5jbHVkZSIsIk9yZGVySXRlbSIsImVyciIsInB1dCIsIm9yZGVyIiwibmFtZSIsImZpbmRPbmUiLCJhdHRyaWJ1dGVzIiwid2hlcmUiLCJpZCIsIm9yZGVyRm91bmQyIiwidXBkYXRlIiwiZGVzdHJveSJdLCJtYXBwaW5ncyI6Ijs7QUFDQTs7QUFDQTs7OztBQUdBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUIsVUFBQUMsR0FBRyxFQUFJO0FBRXBCO0FBQ0FBLEVBQUFBLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLGFBQVIsRUFBdUJDLHVCQUF2QixFQUFvQyxVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUM5Q0MsdUJBQU9DLEtBQVAsQ0FBYUMsT0FBYixHQUF1QkMsSUFBdkIsQ0FBNEIsVUFBQ0MsTUFBRCxFQUFZO0FBRXBDTCxNQUFBQSxHQUFHLENBQUNNLElBQUosQ0FBUztBQUNMRCxRQUFBQSxNQUFNLEVBQU5BO0FBREssT0FBVDtBQUdILEtBTEQ7QUFNSCxHQVBELEdBUUE7QUFDQVQsRUFBQUEsR0FBRyxDQUFDVyxJQUFKLENBQVMsYUFBVCxFQUF3QlQsdUJBQXhCLEVBQXFDLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQy9DO0FBR0E7QUFFQUMsdUJBQU9DLEtBQVAsQ0FBYU0sTUFBYixDQUFvQlQsR0FBRyxDQUFDVSxJQUFKLENBQVNBLElBQTdCLEVBQW1DO0FBQUNDLE1BQUFBLE9BQU8sRUFBRSxDQUFDVCxtQkFBT1UsU0FBUjtBQUFWLEtBQW5DLEVBQ0tQLElBREwsQ0FDVSxVQUFDQyxNQUFELEVBQVk7QUFDZCxhQUFPTCxHQUFHLENBQUNNLElBQUosQ0FBUztB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R0F6QkE7QUEwQkQsQ0F2RkoiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxhc3VzXFxEb2N1bWVudHNcXEtyb3dcXEF6dWx1bGEgLSBCb3lrYVxcYXp1VmVuZGFzIDEuMFxcc3JjXFxyb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuaW1wb3J0IHZlcmlmeVRva2VuIGZyb20gJy4uL3V0aWxzL3ZlcmlmeVRva2VuJ1xyXG5pbXBvcnQgbW9kZWxzIGZyb20gJy4uL21vZGVscydcclxuXHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IGFwcCA9PiB7XHJcblxyXG4gICAgLy8gTGlzdCBvcmRlci9zZXJ2aWNlXHJcbiAgICBhcHAuZ2V0KCcvYXBpL29yZGVycycsIHZlcmlmeVRva2VuLCAocmVxLCByZXMpID0+IHtcclxuICAgICAgICBtb2RlbHMuT3JkZXIuZmluZEFsbCgpLnRoZW4oKG9yZGVycykgPT4ge1xyXG5cclxuICAgICAgICAgICAgcmVzLmpzb24oe1xyXG4gICAgICAgICAgICAgICAgb3JkZXJzXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfSlcclxuICAgIH0pLFxyXG4gICAgLy8gUkVHSVNURVIgVVNFUiBWXHJcbiAgICBhcHAucG9zdCgnL2FwaS9vcmRlcnMnLCB2ZXJpZnlUb2tlbiwgKHJlcSwgcmVzKSA9PiB7XHJcbiAgICAgICAgLy8gUGFyYW1zXHJcblxyXG5cclxuICAgICAgICAvLyBWZXJpZnkgaWYgZXhpc3QgaW50byBtb2RlbHMub3JkZXJzXHJcblxyXG4gICAgICAgIG1vZGVscy5PcmRlci5jcmVhdGUocmVxLmJvZHkuYm9keSwge2luY2x1ZGU6IFttb2RlbHMuT3JkZXJJdGVtXX0pXHJcbiAgICAgICAgICAgIC50aGVuKChvcmRlcnMpID0+IHtcclxuICAgICAgICAgICAgICAgIHJldHVybiByZXMuanNvbih7IG9yZGVycywgJ2NvZGUnOiAxIH0pXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzLmpzb24oeyAnZXJyb3InOiAnQ2Fubm90IGFkZCBvcmRlcicsICdjb2RlJzogMCB9KVxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICBcclxuXHJcbiAgICAgICBcclxuICAgIH0pXHJcblxyXG4gICAgLy8gVVBEQVRFIG9yZGVyXHJcbiAgICBhcHAucHV0KCcvYXBpL29yZGVycycsIHZlcmlmeVRva2VuLCAocmVxLCByZXMpID0+IHtcclxuXHJcbiAgICAgICAgLy8gUGFyYW1zXHJcbiAgICAgICAgdmFyIG9yZGVyID0ge1xyXG4gICAgICAgICAgICBuYW1lOiByZXEuYm9keS5uYW1lXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvLyBWZXJpZnkgaWYgZXhpc3QgaW50byBtb2RlbHMub3JkZXJzXHJcblxyXG4gICAgICAgIG1vZGVscy5vcmRlci5maW5kT25lKHtcclxuICAgICAgICAgICAgYXR0cmlidXRlczogW1wiaWRcIl0sXHJcbiAgICAgICAgICAgIHdoZXJlOiB7IGlkOiByZXEuYm9keS5pZCB9XHJcbiAgICAgICAgfSlcclxuICAgICAgICAgICAgLnRoZW4oKG9yZGVyRm91bmQyKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBvcmRlckZvdW5kMi51cGRhdGUob3JkZXIpXHJcbiAgICAgICAgICAgICAgICAgICAgLnRoZW4oKG9yZGVycykgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzLmpzb24oeyBvcmRlcnMsICdjb2RlJzogMSB9KVxyXG4gICAgICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5qc29uKHsgJ2Vycm9yJzogJ0Nhbm5vdCBVcGRhdGUgb3JkZXInLCAnY29kZSc6IDAgfSlcclxuICAgICAgICAgICAgICAgICAgICB9KVxyXG5cclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgICAgICAgICAgIHJldHVybiByZXMuanNvbih7ICdlcnJvcic6ICdVbmFibGUgdG8gdmVyaWZ5IG9yZGVyJywgZXJyLCAnY29kZSc6IDAgfSlcclxuICAgICAgICAgICAgfSlcclxuXHJcbiAgICB9KVxyXG5cclxuICAgICAvLyBEZWxldGUgb3JkZXJcclxuICAgICBhcHAuZGVsZXRlKCcvYXBpL29yZGVycycsIHZlcmlmeVRva2VuLCAocmVxLCByZXMpID0+IHtcclxuXHJcbiAgICAgICAgLy8gUGFyYW1zXHJcbiAgICAgICAgdmFyIG9yZGVyID0geyBpZDpyZXEuYm9keS5pZH1cclxuXHJcbiAgICAgICAgLy8gVmVyaWZ5IGlmIGV4aXN0IGludG8gbW9kZWxzLm9yZGVyc1xyXG5cclxuICAgICAgICBtb2RlbHMub3JkZXIuZmluZE9uZSh7XHJcbiAgICAgICAgICAgIGF0dHJpYnV0ZXM6IFtcImlkXCJdLFxyXG4gICAgICAgICAgICB3aGVyZTogeyBpZDogb3JkZXIuaWQgfVxyXG4gICAgICAgIH0pXHJcbiAgICAgICAgICAgIC50aGVuKChvcmRlckZvdW5kMikgPT4ge1xyXG4gICAgICAgICAgICAgICAgb3JkZXJGb3VuZDIuZGVzdHJveShvcmRlcilcclxuICAgICAgICAgICAgICAgICAgICAudGhlbigoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByZXMuanNvbih7ICdzdGF0dXMnOidzdWNjZXNzJywgJ2NvZGUnOiAxIH0pXHJcbiAgICAgICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgICAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzLmpzb24oeyAnZXJyb3InOiAnQ2Fubm90IERlbGV0ZSBvcmRlcicsICdjb2RlJzogMCB9KVxyXG4gICAgICAgICAgICAgICAgICAgIH0pXHJcblxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5qc29uKHsgJ2Vycm9yJzogJ1VuYWJsZSB0byB2ZXJpZnkgb3JkZXInLCBlcnIsICdjb2RlJzogMCB9KVxyXG4gICAgICAgICAgICB9KVxyXG5cclxuICAgIH0pXHJcbiAgIH1cclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "orderItem.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "get",
        "verifyToken",
        "req",
        "res",
        "models",
        "Order",
        "findAll",
        "then",
        "orders",
        "json",
        "post",
        "create",
        "body",
        "include",
        "OrderItem",
        "err",
        "put",
        "order",
        "name",
        "findOne",
        "attributes",
        "where",
        "id",
        "orderFound2",
        "update",
        "destroy"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes",
      "sourcesContent": [
        "\r\nimport verifyToken from '../utils/verifyToken'\r\nimport models from '../models'\r\n\r\n\r\nmodule.exports = app => {\r\n\r\n    // List order/service\r\n    app.get('/api/orders', verifyToken, (req, res) => {\r\n        models.Order.findAll().then((orders) => {\r\n\r\n            res.json({\r\n                orders\r\n            })\r\n        })\r\n    }),\r\n    // REGISTER USER V\r\n    app.post('/api/orders', verifyToken, (req, res) => {\r\n        // Params\r\n\r\n\r\n        // Verify if exist into models.orders\r\n\r\n        models.Order.create(req.body.body, {include: [models.OrderItem]})\r\n            .then((orders) => {\r\n                return res.json({ orders, 'code': 1 })\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Cannot add order', 'code': 0 })\r\n            })\r\n            \r\n\r\n       \r\n    })\r\n\r\n    // UPDATE order\r\n    app.put('/api/orders', verifyToken, (req, res) => {\r\n\r\n        // Params\r\n        var order = {\r\n            name: req.body.name\r\n        }\r\n\r\n        // Verify if exist into models.orders\r\n\r\n        models.order.findOne({\r\n            attributes: [\"id\"],\r\n            where: { id: req.body.id }\r\n        })\r\n            .then((orderFound2) => {\r\n                orderFound2.update(order)\r\n                    .then((orders) => {\r\n                        return res.json({ orders, 'code': 1 })\r\n                    })\r\n                    .catch((err) => {\r\n                        return res.json({ 'error': 'Cannot Update order', 'code': 0 })\r\n                    })\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify order', err, 'code': 0 })\r\n            })\r\n\r\n    })\r\n\r\n     // Delete order\r\n     app.delete('/api/orders', verifyToken, (req, res) => {\r\n\r\n        // Params\r\n        var order = { id:req.body.id}\r\n\r\n        // Verify if exist into models.orders\r\n\r\n        models.order.findOne({\r\n            attributes: [\"id\"],\r\n            where: { id: order.id }\r\n        })\r\n            .then((orderFound2) => {\r\n                orderFound2.destroy(order)\r\n                    .then(() => {\r\n                        return res.json({ 'status':'success', 'code': 1 })\r\n                    })\r\n                    .catch((err) => {\r\n                        return res.json({ 'error': 'Cannot Delete order', 'code': 0 })\r\n                    })\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify order', err, 'code': 0 })\r\n            })\r\n\r\n    })\r\n   }\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1579884360987
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\",\"filename\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\\\\src\\\\routes\\\\orderitem.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0",
      "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes\\orderitem.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes\\orderitem.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes\\orderitem.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes",
        "sourceFileName": "orderitem.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _verifyToken = _interopRequireDefault(require(\"../utils/verifyToken\"));\n\nvar _models = _interopRequireDefault(require(\"../models\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.exports = function (app) {\n  // List orderitem/service\n  app.get('/api/orderitems', _verifyToken[\"default\"], function (req, res) {\n    _models[\"default\"].OrderItem.findAll({\n      include: [_models[\"default\"].Product]\n    }).then(function (orderitems) {\n      res.json({\n        orderitems: orderitems\n      });\n    });\n  }), // REGISTER USER V\n  app.post('/api/orderitems', function (req, res) {\n    // Params\n    var orderitem = req.body; // Verify if exist into models.orderitems\n\n    _models[\"default\"].OrderItem.create(orderitem).then(function (orderitems) {\n      return res.json({\n        orderitems: orderitems,\n        'code': 1\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Cannot add orderitem',\n        'code': 0\n      });\n    });\n  }); // UPDATE orderitem\n\n  app.put('/api/orderitems/:id', function (req, res) {\n    // Params\n    var orderitem = req.body; // Verify if exist into models.orderitems\n\n    _models[\"default\"].OrderItem.findOne({\n      attributes: [\"id\"],\n      where: {\n        id: req.params.id\n      }\n    }).then(function (orderitemFound2) {\n      orderitemFound2.update(orderitem).then(function (orderitems) {\n        return res.json({\n          orderitems: orderitems,\n          'code': 1\n        });\n      })[\"catch\"](function (err) {\n        return res.json({\n          'error': 'Cannot Update orderitem',\n          'code': 0\n        });\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify orderitem',\n        err: err,\n        'code': 0\n      });\n    });\n  }); // Delete orderitem\n\n  app[\"delete\"]('/api/orderitems/:id', function (req, res) {\n    // Params\n    var orderitem = {\n      id: req.params.id\n    }; // Verify if exist into models.orderitems\n\n    _models[\"default\"].OrderItem.findOne({\n      attributes: [\"id\"],\n      where: {\n        id: orderitem.id\n      }\n    }).then(function (orderitemFound2) {\n      orderitemFound2.destroy(orderitem).then(function () {\n        return res.json({\n          'status': 'success',\n          'code': 1\n        });\n      })[\"catch\"](function (err) {\n        return res.json({\n          'error': 'Cannot Delete orderitem',\n          'code': 0\n        });\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify orderitem',\n        err: err,\n        'code': 0\n      });\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9yZGVyaXRlbS5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiYXBwIiwiZ2V0IiwidmVyaWZ5VG9rZW4iLCJyZXEiLCJyZXMiLCJtb2RlbHMiLCJPcmRlckl0ZW0iLCJmaW5kQWxsIiwiaW5jbHVkZSIsIlByb2R1Y3QiLCJ0aGVuIiwib3JkZXJpdGVtcyIsImpzb24iLCJwb3N0Iiwib3JkZXJpdGVtIiwiYm9keSIsImNyZWF0ZSIsImVyciIsInB1dCIsImZpbmRPbmUiLCJhdHRyaWJ1dGVzIiwid2hlcmUiLCJpZCIsInBhcmFtcyIsIm9yZGVyaXRlbUZvdW5kMiIsInVwZGF0ZSIsImRlc3Ryb3kiXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7Ozs7QUFHQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUFDLEdBQUcsRUFBSTtBQUVwQjtBQUNBQSxFQUFBQSxHQUFHLENBQUNDLEdBQUosQ0FBUSxpQkFBUixFQUEwQkMsdUJBQTFCLEVBQXNDLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBRWhEQyx1QkFBT0MsU0FBUCxDQUFpQkMsT0FBakIsQ0FBeUI7QUFBQ0MsTUFBQUEsT0FBTyxFQUFFLENBQUNILG1CQUFPSSxPQUFSO0FBQVYsS0FBekIsRUFBc0RDLElBQXRELENBQTJELFVBQUNDLFVBQUQsRUFBZ0I7QUFDdkVQLE1BQUFBLEdBQUcsQ0FBQ1EsSUFBSixDQUFTO0FBQ0xELFFBQUFBLFVBQVUsRUFBVkE7QUFESyxPQUFUO0FBR0gsS0FKRDtBQUtILEdBUEQsR0FRQTtBQUNBWCxFQUFBQSxHQUFHLENBQUNhLElBQUosQ0FBUyxpQkFBVCxFQUE0QixVQUFDVixHQUFELEVBQU1DLEdBQU4sRUFBYztBQUV0QztBQUNBLFFBQUlVLFNBQVMsR0FBR1gsR0FBRyxDQUFDWSxJQUFwQixDQUhzQyxDQU10Qzs7QUFFQVYsdUJBQU9DLFNBQVAsQ0FBaUJVLE1BQWpCLENBQXdCRixTQUF4QixFQUNLSixJQURMLENBQ1UsVUFBQ0MsVUFBRCxFQUFn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SiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGFzdXNcXERvY3VtZW50c1xcS3Jvd1xcQXp1bHVsYSAtIEJveWthXFxhenVWZW5kYXMgMS4wXFxzcmNcXHJvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB2ZXJpZnlUb2tlbiBmcm9tICcuLi91dGlscy92ZXJpZnlUb2tlbidcclxuaW1wb3J0IG1vZGVscyBmcm9tICcuLi9tb2RlbHMnXHJcblxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBhcHAgPT4ge1xyXG4gICAgXHJcbiAgICAvLyBMaXN0IG9yZGVyaXRlbS9zZXJ2aWNlXHJcbiAgICBhcHAuZ2V0KCcvYXBpL29yZGVyaXRlbXMnLHZlcmlmeVRva2VuLChyZXEsIHJlcykgPT4ge1xyXG5cclxuICAgICAgICBtb2RlbHMuT3JkZXJJdGVtLmZpbmRBbGwoe2luY2x1ZGU6IFttb2RlbHMuUHJvZHVjdF19KS50aGVuKChvcmRlcml0ZW1zKSA9PiB7XHJcbiAgICAgICAgICAgIHJlcy5qc29uKHtcclxuICAgICAgICAgICAgICAgIG9yZGVyaXRlbXNcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9KVxyXG4gICAgfSksXHJcbiAgICAvLyBSRUdJU1RFUiBVU0VSIFZcclxuICAgIGFwcC5wb3N0KCcvYXBpL29yZGVyaXRlbXMnLCAocmVxLCByZXMpID0+IHtcclxuXHJcbiAgICAgICAgLy8gUGFyYW1zXHJcbiAgICAgICAgdmFyIG9yZGVyaXRlbSA9IHJlcS5ib2R5XHJcblxyXG5cclxuICAgICAgICAvLyBWZXJpZnkgaWYgZXhpc3QgaW50byBtb2RlbHMub3JkZXJpdGVtc1xyXG5cclxuICAgICAgICBtb2RlbHMuT3JkZXJJdGVtLmNyZWF0ZShvcmRlcml0ZW0pXHJcbiAgICAgICAgICAgIC50aGVuKChvcmRlcml0ZW1zKSA9PiB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzLmpzb24oeyBvcmRlcml0ZW1zLCAnY29kZSc6IDEgfSlcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgICAgICAgICAgIHJldHVybiByZXMuanNvbih7ICdlcnJvcic6ICdDYW5ub3QgYWRkIG9yZGVyaXRlbScsICdjb2RlJzogMCB9KVxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgIFxyXG4gICAgfSlcclxuXHJcbiAgICAvLyBVUERBVEUgb3JkZXJpdGVtXHJcbiAgICBhcHAucHV0KCcvYXBpL29yZGVyaXRlbXMvOmlkJywgKHJlcSwgcmVzKSA9PiB7XHJcblxyXG4gICAgICAgIC8vIFBhcmFtc1xyXG4gICAgICAgIHZhciBvcmRlcml0ZW0gPSByZXEuYm9keVxyXG5cclxuICAgICAgICAvLyBWZXJpZnkgaWYgZXhpc3QgaW50byBtb2RlbHMub3JkZXJpdGVtc1xyXG5cclxuICAgICAgICBtb2RlbHMuT3JkZXJJdGVtLmZpbmRPbmUoe1xyXG4gICAgICAgICAgICBhdHRyaWJ1dGVzOiBbXCJpZFwiXSxcclxuICAgICAgICAgICAgd2hlcmU6IHsgaWQ6IHJlcS5wYXJhbXMuaWQgfVxyXG4gICAgICAgIH0pXHJcbiAgICAgICAgICAgIC50aGVuKChvcmRlcml0ZW1Gb3VuZDIpID0+IHtcclxuICAgICAgICAgICAgICAgIG9yZGVyaXRlbUZvdW5kMi51cGRhdGUob3JkZXJpdGVtKVxyXG4gICAgICAgICAgICAgICAgICAgIC50aGVuKChvcmRlcml0ZW1zKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByZXMuanNvbih7IG9yZGVyaXRlbXMsICdjb2RlJzogMSB9KVxyXG4gICAgICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5qc29uKHsgJ2Vycm9yJzogJ0Nhbm5vdCBVcGRhdGUgb3JkZXJpdGVtJywgJ2NvZGUnOiAwIH0pXHJcbiAgICAgICAgICAgICAgICAgICAgfSlcclxuXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzLmpzb24oeyAnZXJyb3InOiAnVW5hYmxlIHRvIHZlcmlmeSBvcmRlcml0ZW0nLCBlcnIsICdjb2RlJzogMCB9KVxyXG4gICAgICAgICAgICB9KVxyXG5cclxuICAgIH0pXHJcblxyXG4gICAgIC8vIERlbGV0ZSBvcmRlcml0ZW1cclxuICAgICBhcHAuZGVsZXRlKCcvYXBpL29yZGVyaXRlbXMvOmlkJywocmVxLCByZXMpID0+IHtcclxuXHJcbiAgICAgICAgLy8gUGFyYW1zXHJcbiAgICAgICAgdmFyIG9yZGVyaXRlbSA9IHsgaWQ6cmVxLnBhcmFtcy5pZH1cclxuXHJcbiAgICAgICAgLy8gVmVyaWZ5IGlmIGV4aXN0IGludG8gbW9kZWxzLm9yZGVyaXRlbXNcclxuXHJcbiAgICAgICAgbW9kZWxzLk9yZGVySXRlbS5maW5kT25lKHtcclxuICAgICAgICAgICAgYXR0cmlidXRlczogW1wiaWRcIl0sXHJcbiAgICAgICAgICAgIHdoZXJlOiB7IGlkOiBvcmRlcml0ZW0uaWQgfVxyXG4gICAgICAgIH0pXHJcbiAgICAgICAgICAgIC50aGVuKChvcmRlcml0ZW1Gb3VuZDIpID0+IHtcclxuICAgICAgICAgICAgICAgIG9yZGVyaXRlbUZvdW5kMi5kZXN0cm95KG9yZGVyaXRlbSlcclxuICAgICAgICAgICAgICAgICAgICAudGhlbigoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByZXMuanNvbih7ICdzdGF0dXMnOidzdWNjZXNzJywgJ2NvZGUnOiAxIH0pXHJcbiAgICAgICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgICAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzLmpzb24oeyAnZXJyb3InOiAnQ2Fubm90IERlbGV0ZSBvcmRlcml0ZW0nLCAnY29kZSc6IDAgfSlcclxuICAgICAgICAgICAgICAgICAgICB9KVxyXG5cclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgICAgICAgICAgIHJldHVybiByZXMuanNvbih7ICdlcnJvcic6ICdVbmFibGUgdG8gdmVyaWZ5IG9yZGVyaXRlbScsIGVyciwgJ2NvZGUnOiAwIH0pXHJcbiAgICAgICAgICAgIH0pXHJcblxyXG4gICAgfSlcclxuICAgfVxyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "orderitem.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "get",
        "verifyToken",
        "req",
        "res",
        "models",
        "OrderItem",
        "findAll",
        "include",
        "Product",
        "then",
        "orderitems",
        "json",
        "post",
        "orderitem",
        "body",
        "create",
        "err",
        "put",
        "findOne",
        "attributes",
        "where",
        "id",
        "params",
        "orderitemFound2",
        "update",
        "destroy"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes",
      "sourcesContent": [
        "import verifyToken from '../utils/verifyToken'\r\nimport models from '../models'\r\n\r\n\r\nmodule.exports = app => {\r\n    \r\n    // List orderitem/service\r\n    app.get('/api/orderitems',verifyToken,(req, res) => {\r\n\r\n        models.OrderItem.findAll({include: [models.Product]}).then((orderitems) => {\r\n            res.json({\r\n                orderitems\r\n            })\r\n        })\r\n    }),\r\n    // REGISTER USER V\r\n    app.post('/api/orderitems', (req, res) => {\r\n\r\n        // Params\r\n        var orderitem = req.body\r\n\r\n\r\n        // Verify if exist into models.orderitems\r\n\r\n        models.OrderItem.create(orderitem)\r\n            .then((orderitems) => {\r\n                return res.json({ orderitems, 'code': 1 })\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Cannot add orderitem', 'code': 0 })\r\n            })\r\n           \r\n    })\r\n\r\n    // UPDATE orderitem\r\n    app.put('/api/orderitems/:id', (req, res) => {\r\n\r\n        // Params\r\n        var orderitem = req.body\r\n\r\n        // Verify if exist into models.orderitems\r\n\r\n        models.OrderItem.findOne({\r\n            attributes: [\"id\"],\r\n            where: { id: req.params.id }\r\n        })\r\n            .then((orderitemFound2) => {\r\n                orderitemFound2.update(orderitem)\r\n                    .then((orderitems) => {\r\n                        return res.json({ orderitems, 'code': 1 })\r\n                    })\r\n                    .catch((err) => {\r\n                        return res.json({ 'error': 'Cannot Update orderitem', 'code': 0 })\r\n                    })\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify orderitem', err, 'code': 0 })\r\n            })\r\n\r\n    })\r\n\r\n     // Delete orderitem\r\n     app.delete('/api/orderitems/:id',(req, res) => {\r\n\r\n        // Params\r\n        var orderitem = { id:req.params.id}\r\n\r\n        // Verify if exist into models.orderitems\r\n\r\n        models.OrderItem.findOne({\r\n            attributes: [\"id\"],\r\n            where: { id: orderitem.id }\r\n        })\r\n            .then((orderitemFound2) => {\r\n                orderitemFound2.destroy(orderitem)\r\n                    .then(() => {\r\n                        return res.json({ 'status':'success', 'code': 1 })\r\n                    })\r\n                    .catch((err) => {\r\n                        return res.json({ 'error': 'Cannot Delete orderitem', 'code': 0 })\r\n                    })\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify orderitem', err, 'code': 0 })\r\n            })\r\n\r\n    })\r\n   }\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1579907360806
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\",\"filename\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\\\\src\\\\routes\\\\sale.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0",
      "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes\\sale.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes\\sale.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes\\sale.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes",
        "sourceFileName": "sale.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _verifyToken = _interopRequireDefault(require(\"../utils/verifyToken\"));\n\nvar _models = _interopRequireDefault(require(\"../models\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.exports = function (app) {\n  // List sale/service\n  app.get('/api/sales', _verifyToken[\"default\"], function (req, res) {\n    _models[\"default\"].Sale.findAll().then(function (sales) {\n      res.json({\n        sales: sales\n      });\n    });\n  }), // REGISTER USER V\n  app.post('/api/sales', _verifyToken[\"default\"], function (req, res) {\n    // Params\n    var sale = req.body; // Verify if exist into models.sales\n\n    _models[\"default\"].Sale.create(sale).then(function (sales) {\n      return res.json({\n        sales: sales,\n        'code': 1\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Cannot add sale',\n        'code': 0\n      });\n    });\n  }); // UPDATE sale\n\n  app.put('/api/sales/:id', _verifyToken[\"default\"], function (req, res) {\n    // Params\n    var sale = req.body; // Verify if exist into models.sales\n\n    _models[\"default\"].Sale.findOne({\n      attributes: [\"id\"],\n      where: {\n        id: req.params.id\n      }\n    }).then(function (saleFound2) {\n      saleFound2.update(sale).then(function (sales) {\n        return res.json({\n          sales: sales,\n          'code': 1\n        });\n      })[\"catch\"](function (err) {\n        return res.json({\n          'error': 'Cannot Update sale',\n          'code': 0\n        });\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify sale',\n        err: err,\n        'code': 0\n      });\n    });\n  }); // Delete sale\n\n  app[\"delete\"]('/api/sales/:id', _verifyToken[\"default\"], function (req, res) {\n    // Params\n    var sale = {\n      id: req.params.id\n    }; // Verify if exist into models.sales\n\n    _models[\"default\"].Sale.findOne({\n      attributes: [\"id\"],\n      where: {\n        id: sale.id\n      }\n    }).then(function (saleFound2) {\n      saleFound2.destroy(sale).then(function () {\n        return res.json({\n          'status': 'success',\n          'code': 1\n        });\n      })[\"catch\"](function (err) {\n        return res.json({\n          'error': 'Cannot Delete sale',\n          'code': 0\n        });\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify sale',\n        err: err,\n        'code': 0\n      });\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNhbGUuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImFwcCIsImdldCIsInZlcmlmeVRva2VuIiwicmVxIiwicmVzIiwibW9kZWxzIiwiU2FsZSIsImZpbmRBbGwiLCJ0aGVuIiwic2FsZXMiLCJqc29uIiwicG9zdCIsInNhbGUiLCJib2R5IiwiY3JlYXRlIiwiZXJyIiwicHV0IiwiZmluZE9uZSIsImF0dHJpYnV0ZXMiLCJ3aGVyZSIsImlkIiwicGFyYW1zIiwic2FsZUZvdW5kMiIsInVwZGF0ZSIsImRlc3Ryb3kiXSwibWFwcGluZ3MiOiI7O0FBQ0E7O0FBQ0E7Ozs7QUFHQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUFDLEdBQUcsRUFBSTtBQUVwQjtBQUNBQSxFQUFBQSxHQUFHLENBQUNDLEdBQUosQ0FBUSxZQUFSLEVBQXNCQyx1QkFBdEIsRUFBbUMsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDN0NDLHVCQUFPQyxJQUFQLENBQVlDLE9BQVosR0FBc0JDLElBQXRCLENBQTJCLFVBQUNDLEtBQUQsRUFBVztBQUNsQ0wsTUFBQUEsR0FBRyxDQUFDTSxJQUFKLENBQVM7QUFDTEQsUUFBQUEsS0FBSyxFQUFMQTtBQURLLE9BQVQ7QUFHSCxLQUpEO0FBS0gsR0FORCxHQU9BO0FBQ0FULEVBQUFBLEdBQUcsQ0FBQ1csSUFBSixDQUFTLFlBQVQsRUFBdUJULHVCQUF2QixFQUFvQyxVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUM5QztBQUNBLFFBQUlRLElBQUksR0FBR1QsR0FBRyxDQUFDVSxJQUFmLENBRjhDLENBSTlDOztBQUVBUix1QkFBT0MsSUFBUCxDQUFZUSxNQUFaLENBQW1CRixJQUFuQixFQUNLSixJQURMLENBQ1UsVUFBQ0MsS0FBRCxFQUFXO0FBQ2IsYUFBT0wsR0FBRyxDQUFDTSxJQUFKLENBQVM7QUFBRUQsUUFBQUEsS0FBSyxFQUFMQSxLQUFGO0FBQVMsZ0JBQVE7QUFBakIsT0FBVCxDQUFQO0FBQ0gsS0FITCxXQUlXLFVBQUNNLEdBQUQsRUFBUztBQUNaLGFBQU9YLEdBQUcsQ0FBQ00sSUFBSixDQUFTO0FBQUUsaUJBQVMsaUJBQVg7QUFBOEIsZ0JBQVE7QUFBdEMsT0FBVCxDQUFQO0FBQ0gsS0FOTDtBQVVILEdBaEJELENBUkEsQ0FIb0IsQ0E2QnBCOztBQUNBVixFQUFBQSxHQUFHLENBQUNnQixHQUFKLENBQVEsZ0JBQVIsRUFBMEJkLHVCQUExQixFQUF1QyxVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUVqRDtBQUNBLFFBQUlRLElBQUksR0FBR1QsR0FBRyxDQUFDVSxJQUFmLENBSGlELENBS2pEOztBQUVBUix1QkFBT0MsSUFBUCxDQUFZVyxPQUFaLENBQW9CO0FBQ2hCQyxNQUFBQSxVQUFVLEVBQUUsQ0FBQyxJQUFELENBREk7QUFFaEJDLE1BQUFBLEtBQUssRUFBRTtBQUFFQyxRQUFBQSxFQUFFLEVBQUVqQixHQUFHLENBQUNrQixNQUFKLENBQVdEO0FBQWpCO0FBRlMsS0FBcEIsRUFJS1osSUFKTCxDQUlVLFVBQUNjLFVBQUQsRUFBZ0I7QUFDbEJBLE1BQUFBLFVBQVUsQ0FBQ0MsTUFBWCxDQUFrQlgsSUFBbEIsRUFDS0osSUFETCxDQUNVLFVBQUNDLEtBQUQsRUFBVztBQUNiLGVBQU9MLEdBQUcsQ0FBQ00sSUFBSixDQUFTO0FBQUVELFVBQUFBLEtBQUssRUFBTEEsS0FBRjtBQUFTLGtCQUFRO0FBQWpCLFNBQVQsQ0FBUDtBQUNILE9BSEwsV0FJVyxVQUFDTSxHQUFELEVBQVM7QUFDWixlQUFPWCxHQUFHLENBQUNNLElBQUosQ0FBUztBQUFFLG1CQUFTLG9CQUFYO0FBQWlDLGtCQUFRO0FBQXpDLFNBQVQsQ0FBUDtBQUNILE9BTkw7QUFRSCxLQWJMLFdBY1csVUFBQ0ssR0FBRCxFQUFTO0FBQ1osYUFBT1gsR0FBRyxDQUFDTSxJQUFKLENBQVM7QUFBRSxpQkFBUyx1QkFBWDtBQUFvQ0ssUUFBQUEsR0FBRyxFQUFIQSxHQUFwQztBQUF5QyxnQkFBUTtBQUFqRCxPQUFULENBQVA7QUFDSCxLQWhCTDtBQWtCSCxHQXpCRCxFQTlCb0IsQ0F5RG5COztBQUNBZixFQUFBQSxHQUFHLFVBQUgsQ0FBVyxnQkFBWCxFQUE2QkUsdUJBQTdCLEVBQTBDLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBRXJEO0FBQ0EsUUFBSVEsSUFBSSxHQUFHO0FBQUVRLE1BQUFBLEVBQUUsRUFBQ2pCLEdBQUcsQ0FBQ2tCLE1BQUosQ0FBV0Q7QUFBaEIsS0FBWCxDQUhxRCxDQUtyRDs7QUFFQWYsdUJBQU9DLElBQVAsQ0FBWVcsT0FBWixDQUFvQjtBQUNoQkMsTUFBQUEsVUFBVSxFQUFFLENBQUMsSUFBRCxDQURJO0FBRWhCQyxNQUFBQSxLQUFLLEVBQUU7QUFBRUMsUUFBQUEsRUFBRSxFQUFFUixJQUFJLENBQUNRO0FBQVg7QUFGUyxLQUFwQixFQUlLWixJQUpMLENBSVUsVUFBQ2MsVUFBRCxFQUFnQjtBQUNsQkEsTUFBQUEsVUFBVSxDQUFDRSxPQUFYLENBQW1CWixJQUFuQixFQUNLSixJQURMLENBQ1UsWUFBTTtBQUNSLGVBQU9KLEdBQUcsQ0FBQ00sSUFBSixDQUFTO0FBQUUsb0JBQVMsU0FBWDtBQUFzQixrQkFBUTtBQUE5QixTQUFULENBQVA7QUFDSCxPQUhMLFdBSVcsVUFBQ0ssR0FBRCxFQUFTO0FBQ1osZUFBT1gsR0FBRyxDQUFDTSxJQUFKLENBQVM7QUFBRSxtQkFBUyxvQkFBWDtBQUFpQyxrQkFBUTtBQUF6QyxTQUFULENBQVA7QUFDSCxPQU5MO0FBUUgsS0FiTCxXQWNXLFVBQUNLLEdBQUQsRUFBUztBQUNaLGFBQU9YLEdBQUcsQ0FBQ00sSUFBSixDQUFTO0FBQUUsaUJBQVMsdUJBQVg7QUFBb0NLLFFBQUFBLEdBQUcsRUFBSEEsR0FBcEM7QUFBeUMsZ0JBQVE7QUFBakQsT0FBVCxDQUFQO0FBQ0gsS0FoQkw7QUFrQkgsR0F6QkE7QUEwQkQsQ0FwRkoiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxhc3VzXFxEb2N1bWVudHNcXEtyb3dcXEF6dWx1bGEgLSBCb3lrYVxcYXp1VmVuZGFzIDEuMFxcc3JjXFxyb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuaW1wb3J0IHZlcmlmeVRva2VuIGZyb20gJy4uL3V0aWxzL3ZlcmlmeVRva2VuJ1xyXG5pbXBvcnQgbW9kZWxzIGZyb20gJy4uL21vZGVscydcclxuXHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IGFwcCA9PiB7XHJcblxyXG4gICAgLy8gTGlzdCBzYWxlL3NlcnZpY2VcclxuICAgIGFwcC5nZXQoJy9hcGkvc2FsZXMnLCB2ZXJpZnlUb2tlbiwgKHJlcSwgcmVzKSA9PiB7XHJcbiAgICAgICAgbW9kZWxzLlNhbGUuZmluZEFsbCgpLnRoZW4oKHNhbGVzKSA9PiB7XHJcbiAgICAgICAgICAgIHJlcy5qc29uKHtcclxuICAgICAgICAgICAgICAgIHNhbGVzXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfSlcclxuICAgIH0pLFxyXG4gICAgLy8gUkVHSVNURVIgVVNFUiBWXHJcbiAgICBhcHAucG9zdCgnL2FwaS9zYWxlcycsIHZlcmlmeVRva2VuLCAocmVxLCByZXMpID0+IHtcclxuICAgICAgICAvLyBQYXJhbXNcclxuICAgICAgICB2YXIgc2FsZSA9IHJlcS5ib2R5XHJcblxyXG4gICAgICAgIC8vIFZlcmlmeSBpZiBleGlzdCBpbnRvIG1vZGVscy5zYWxlc1xyXG4gICAgICAgIFxyXG4gICAgICAgIG1vZGVscy5TYWxlLmNyZWF0ZShzYWxlKVxyXG4gICAgICAgICAgICAudGhlbigoc2FsZXMpID0+IHtcclxuICAgICAgICAgICAgICAgIHJldHVybiByZXMuanNvbih7IHNhbGVzLCAnY29kZSc6IDEgfSlcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgICAgICAgICAgIHJldHVybiByZXMuanNvbih7ICdlcnJvcic6ICdDYW5ub3QgYWRkIHNhbGUnLCAnY29kZSc6IDAgfSlcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgXHJcblxyXG4gICAgICAgXHJcbiAgICB9KVxyXG5cclxuICAgIC8vIFVQREFURSBzYWxlXHJcbiAgICBhcHAucHV0KCcvYXBpL3NhbGVzLzppZCcsIHZlcmlmeVRva2VuLCAocmVxLCByZXMpID0+IHtcclxuXHJcbiAgICAgICAgLy8gUGFyYW1zXHJcbiAgICAgICAgdmFyIHNhbGUgPSByZXEuYm9keVxyXG5cclxuICAgICAgICAvLyBWZXJpZnkgaWYgZXhpc3QgaW50byBtb2RlbHMuc2FsZXNcclxuXHJcbiAgICAgICAgbW9kZWxzLlNhbGUuZmluZE9uZSh7XHJcbiAgICAgICAgICAgIGF0dHJpYnV0ZXM6IFtcImlkXCJdLFxyXG4gICAgICAgICAgICB3aGVyZTogeyBpZDogcmVxLnBhcmFtcy5pZCB9XHJcbiAgICAgICAgfSlcclxuICAgICAgICAgICAgLnRoZW4oKHNhbGVGb3VuZDIpID0+IHtcclxuICAgICAgICAgICAgICAgIHNhbGVGb3VuZDIudXBkYXRlKHNhbGUpXHJcbiAgICAgICAgICAgICAgICAgICAgLnRoZW4oKHNhbGVzKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByZXMuanNvbih7IHNhbGVzLCAnY29kZSc6IDEgfSlcclxuICAgICAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByZXMuanNvbih7ICdlcnJvcic6ICdDYW5ub3QgVXBkYXRlIHNhbGUnLCAnY29kZSc6IDAgfSlcclxuICAgICAgICAgICAgICAgICAgICB9KVxyXG5cclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgICAgICAgICAgIHJldHVybiByZXMuanNvbih7ICdlcnJvcic6ICdVbmFibGUgdG8gdmVyaWZ5IHNhbGUnLCBlcnIsICdjb2RlJzogMCB9KVxyXG4gICAgICAgICAgICB9KVxyXG5cclxuICAgIH0pXHJcblxyXG4gICAgIC8vIERlbGV0ZSBzYWxlXHJcbiAgICAgYXBwLmRlbGV0ZSgnL2FwaS9zYWxlcy86aWQnLCB2ZXJpZnlUb2tlbiwgKHJlcSwgcmVzKSA9PiB7XHJcblxyXG4gICAgICAgIC8vIFBhcmFtc1xyXG4gICAgICAgIHZhciBzYWxlID0geyBpZDpyZXEucGFyYW1zLmlkfVxyXG5cclxuICAgICAgICAvLyBWZXJpZnkgaWYgZXhpc3QgaW50byBtb2RlbHMuc2FsZXNcclxuXHJcbiAgICAgICAgbW9kZWxzLlNhbGUuZmluZE9uZSh7XHJcbiAgICAgICAgICAgIGF0dHJpYnV0ZXM6IFtcImlkXCJdLFxyXG4gICAgICAgICAgICB3aGVyZTogeyBpZDogc2FsZS5pZCB9XHJcbiAgICAgICAgfSlcclxuICAgICAgICAgICAgLnRoZW4oKHNhbGVGb3VuZDIpID0+IHtcclxuICAgICAgICAgICAgICAgIHNhbGVGb3VuZDIuZGVzdHJveShzYWxlKVxyXG4gICAgICAgICAgICAgICAgICAgIC50aGVuKCgpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5qc29uKHsgJ3N0YXR1cyc6J3N1Y2Nlc3MnLCAnY29kZSc6IDEgfSlcclxuICAgICAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByZXMuanNvbih7ICdlcnJvcic6ICdDYW5ub3QgRGVsZXRlIHNhbGUnLCAnY29kZSc6IDAgfSlcclxuICAgICAgICAgICAgICAgICAgICB9KVxyXG5cclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgICAgICAgICAgIHJldHVybiByZXMuanNvbih7ICdlcnJvcic6ICdVbmFibGUgdG8gdmVyaWZ5IHNhbGUnLCBlcnIsICdjb2RlJzogMCB9KVxyXG4gICAgICAgICAgICB9KVxyXG5cclxuICAgIH0pXHJcbiAgIH1cclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "sale.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "get",
        "verifyToken",
        "req",
        "res",
        "models",
        "Sale",
        "findAll",
        "then",
        "sales",
        "json",
        "post",
        "sale",
        "body",
        "create",
        "err",
        "put",
        "findOne",
        "attributes",
        "where",
        "id",
        "params",
        "saleFound2",
        "update",
        "destroy"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\routes",
      "sourcesContent": [
        "\r\nimport verifyToken from '../utils/verifyToken'\r\nimport models from '../models'\r\n\r\n\r\nmodule.exports = app => {\r\n\r\n    // List sale/service\r\n    app.get('/api/sales', verifyToken, (req, res) => {\r\n        models.Sale.findAll().then((sales) => {\r\n            res.json({\r\n                sales\r\n            })\r\n        })\r\n    }),\r\n    // REGISTER USER V\r\n    app.post('/api/sales', verifyToken, (req, res) => {\r\n        // Params\r\n        var sale = req.body\r\n\r\n        // Verify if exist into models.sales\r\n        \r\n        models.Sale.create(sale)\r\n            .then((sales) => {\r\n                return res.json({ sales, 'code': 1 })\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Cannot add sale', 'code': 0 })\r\n            })\r\n               \r\n\r\n       \r\n    })\r\n\r\n    // UPDATE sale\r\n    app.put('/api/sales/:id', verifyToken, (req, res) => {\r\n\r\n        // Params\r\n        var sale = req.body\r\n\r\n        // Verify if exist into models.sales\r\n\r\n        models.Sale.findOne({\r\n            attributes: [\"id\"],\r\n            where: { id: req.params.id }\r\n        })\r\n            .then((saleFound2) => {\r\n                saleFound2.update(sale)\r\n                    .then((sales) => {\r\n                        return res.json({ sales, 'code': 1 })\r\n                    })\r\n                    .catch((err) => {\r\n                        return res.json({ 'error': 'Cannot Update sale', 'code': 0 })\r\n                    })\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify sale', err, 'code': 0 })\r\n            })\r\n\r\n    })\r\n\r\n     // Delete sale\r\n     app.delete('/api/sales/:id', verifyToken, (req, res) => {\r\n\r\n        // Params\r\n        var sale = { id:req.params.id}\r\n\r\n        // Verify if exist into models.sales\r\n\r\n        models.Sale.findOne({\r\n            attributes: [\"id\"],\r\n            where: { id: sale.id }\r\n        })\r\n            .then((saleFound2) => {\r\n                saleFound2.destroy(sale)\r\n                    .then(() => {\r\n                        return res.json({ 'status':'success', 'code': 1 })\r\n                    })\r\n                    .catch((err) => {\r\n                        return res.json({ 'error': 'Cannot Delete sale', 'code': 0 })\r\n                    })\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify sale', err, 'code': 0 })\r\n            })\r\n\r\n    })\r\n   }\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1579908301616
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\",\"filename\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\\\\src\\\\models\\\\task.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\azuVendas 1.0\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0",
      "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\models\\task.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\models\\task.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\models\\task.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\models",
        "sourceFileName": "task.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nmodule.exports = function (sequelize, DataTypes) {\n  var Task = sequelize.define('Task', {\n    userId: DataTypes.INTEGER,\n    adminId: DataTypes.INTEGER,\n    dateFinish: DataTypes.DATE,\n    dateStart: DataTypes.DATE,\n    description: DataTypes.STRING,\n    state: DataTypes.BOOLEAN\n  }, {});\n\n  Task.associate = function (models) {\n    Task.belongsTo(models.User);\n  };\n\n  return Task;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRhc2suanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInNlcXVlbGl6ZSIsIkRhdGFUeXBlcyIsIlRhc2siLCJkZWZpbmUiLCJ1c2VySWQiLCJJTlRFR0VSIiwiYWRtaW5JZCIsImRhdGVGaW5pc2giLCJEQVRFIiwiZGF0ZVN0YXJ0IiwiZGVzY3JpcHRpb24iLCJTVFJJTkciLCJzdGF0ZSIsIkJPT0xFQU4iLCJhc3NvY2lhdGUiLCJtb2RlbHMiLCJiZWxvbmdzVG8iLCJVc2VyIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFDQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUNDLFNBQUQsRUFBWUMsU0FBWixFQUEwQjtBQUN6QyxNQUFNQyxJQUFJLEdBQUdGLFNBQVMsQ0FBQ0csTUFBVixDQUFpQixNQUFqQixFQUF5QjtBQUNwQ0MsSUFBQUEsTUFBTSxFQUFFSCxTQUFTLENBQUNJLE9BRGtCO0FBRXBDQyxJQUFBQSxPQUFPLEVBQUVMLFNBQVMsQ0FBQ0ksT0FGaUI7QUFHcENFLElBQUFBLFVBQVUsRUFBRU4sU0FBUyxDQUFDTyxJQUhjO0FBSXBDQyxJQUFBQSxTQUFTLEVBQUVSLFNBQVMsQ0FBQ08sSUFKZTtBQUtwQ0UsSUFBQUEsV0FBVyxFQUFFVCxTQUFTLENBQUNVLE1BTGE7QUFNcENDLElBQUFBLEtBQUssRUFBRVgsU0FBUyxDQUFDWTtBQU5tQixHQUF6QixFQU9WLEVBUFUsQ0FBYjs7QUFRQVgsRUFBQUEsSUFBSSxDQUFDWSxTQUFMLEdBQWlCLFVBQVNDLE1BQVQsRUFBaUI7QUFDaENiLElBQUFBLElBQUksQ0FBQ2MsU0FBTCxDQUFlRCxNQUFNLENBQUNFLElBQXRCO0FBQ0QsR0FGRDs7QUFHQSxTQUFPZixJQUFQO0FBQ0QsQ0FiRCIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGFzdXNcXERvY3VtZW50c1xcS3Jvd1xcQXp1bHVsYSAtIEJveWthXFxhenVWZW5kYXMgMS4wXFxzcmNcXG1vZGVscyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0Jztcbm1vZHVsZS5leHBvcnRzID0gKHNlcXVlbGl6ZSwgRGF0YVR5cGVzKSA9PiB7XG4gIGNvbnN0IFRhc2sgPSBzZXF1ZWxpemUuZGVmaW5lKCdUYXNrJywge1xuICAgIHVzZXJJZDogRGF0YVR5cGVzLklOVEVHRVIsXG4gICAgYWRtaW5JZDogRGF0YVR5cGVzLklOVEVHRVIsXG4gICAgZGF0ZUZpbmlzaDogRGF0YVR5cGVzLkRBVEUsXG4gICAgZGF0ZVN0YXJ0OiBEYXRhVHlwZXMuREFURSxcbiAgICBkZXNjcmlwdGlvbjogRGF0YVR5cGVzLlNUUklORyxcbiAgICBzdGF0ZTogRGF0YVR5cGVzLkJPT0xFQU5cbiAgfSwge30pO1xuICBUYXNrLmFzc29jaWF0ZSA9IGZ1bmN0aW9uKG1vZGVscykge1xuICAgIFRhc2suYmVsb25nc1RvKG1vZGVscy5Vc2VyKVxuICB9O1xuICByZXR1cm4gVGFzaztcbn07Il19",
    "map": {
      "version": 3,
      "sources": [
        "task.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "Task",
        "define",
        "userId",
        "INTEGER",
        "adminId",
        "dateFinish",
        "DATE",
        "dateStart",
        "description",
        "STRING",
        "state",
        "BOOLEAN",
        "associate",
        "models",
        "belongsTo",
        "User"
      ],
      "mappings": "AAAA;;AACAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AACzC,MAAMC,IAAI,GAAGF,SAAS,CAACG,MAAV,CAAiB,MAAjB,EAAyB;AACpCC,IAAAA,MAAM,EAAEH,SAAS,CAACI,OADkB;AAEpCC,IAAAA,OAAO,EAAEL,SAAS,CAACI,OAFiB;AAGpCE,IAAAA,UAAU,EAAEN,SAAS,CAACO,IAHc;AAIpCC,IAAAA,SAAS,EAAER,SAAS,CAACO,IAJe;AAKpCE,IAAAA,WAAW,EAAET,SAAS,CAACU,MALa;AAMpCC,IAAAA,KAAK,EAAEX,SAAS,CAACY;AANmB,GAAzB,EAOV,EAPU,CAAb;;AAQAX,EAAAA,IAAI,CAACY,SAAL,GAAiB,UAASC,MAAT,EAAiB;AAChCb,IAAAA,IAAI,CAACc,SAAL,CAAeD,MAAM,CAACE,IAAtB;AACD,GAFD;;AAGA,SAAOf,IAAP;AACD,CAbD",
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\azuVendas 1.0\\src\\models",
      "sourcesContent": [
        "'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const Task = sequelize.define('Task', {\n    userId: DataTypes.INTEGER,\n    adminId: DataTypes.INTEGER,\n    dateFinish: DataTypes.DATE,\n    dateStart: DataTypes.DATE,\n    description: DataTypes.STRING,\n    state: DataTypes.BOOLEAN\n  }, {});\n  Task.associate = function(models) {\n    Task.belongsTo(models.User)\n  };\n  return Task;\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1580890301827
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"filename\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _consign = _interopRequireDefault(require(\"consign\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar app = (0, _express[\"default\"])(); //app.options('*', cors())\n\napp.use(function (req, res, next) {\n  res.header('Access-Control-Allow-Origin', '*');\n  res.header('Access-Control-Allow-Methods', '*');\n  res.header('Access-Control-Allow-Headers', '*');\n  next();\n});\napp.use(_bodyParser[\"default\"].json());\napp.use(_bodyParser[\"default\"].urlencoded({\n  extended: false\n}));\n/* app.use(express.json())\r\napp.use(bodyParser.urlencoded({ extended: true })) */\n\n(0, _consign[\"default\"])({\n  cwd: __dirname\n}).include('libs/middlewares.js').then('routes').then('libs/boot.js').into(app);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImFwcCIsInVzZSIsInJlcSIsInJlcyIsIm5leHQiLCJoZWFkZXIiLCJib2R5UGFyc2VyIiwianNvbiIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsImN3ZCIsIl9fZGlybmFtZSIsImluY2x1ZGUiLCJ0aGVuIiwiaW50byJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7QUFDQTs7OztBQUVBLElBQU1BLEdBQUcsR0FBRywwQkFBWixDLENBRUE7O0FBQ0FBLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxJQUFYLEVBQW9CO0FBQ3hCRCxFQUFBQSxHQUFHLENBQUNFLE1BQUosQ0FBVyw2QkFBWCxFQUEwQyxHQUExQztBQUNBRixFQUFBQSxHQUFHLENBQUNFLE1BQUosQ0FBVyw4QkFBWCxFQUEyQyxHQUEzQztBQUNBRixFQUFBQSxHQUFHLENBQUNFLE1BQUosQ0FBVyw4QkFBWCxFQUEyQyxHQUEzQztBQUVBRCxFQUFBQSxJQUFJO0FBQ1AsQ0FORDtBQVFBSixHQUFHLENBQUNDLEdBQUosQ0FBUUssdUJBQVdDLElBQVgsRUFBUjtBQUNBUCxHQUFHLENBQUNDLEdBQUosQ0FBUUssdUJBQVdFLFVBQVgsQ0FBc0I7QUFBRUMsRUFBQUEsUUFBUSxFQUFFO0FBQVosQ0FBdEIsQ0FBUjtBQUVBOzs7QUFFQSx5QkFBUTtBQUNKQyxFQUFBQSxHQUFHLEVBQUVDO0FBREQsQ0FBUixFQUdLQyxPQUhMLENBR2EscUJBSGIsRUFJS0MsSUFKTCxDQUlVLFFBSlYsRUFLS0EsSUFMTCxDQUtVLGNBTFYsRUFNS0MsSUFOTCxDQU1VZCxHQU5WIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcYXN1c1xcRG9jdW1lbnRzXFxLcm93XFxBenVsdWxhIC0gQm95a2FcXFVzdG9jayBhcGlcXHNyYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnXHJcbmltcG9ydCBjb25zaWduIGZyb20gJ2NvbnNpZ24nXHJcbmltcG9ydCBib2R5UGFyc2VyIGZyb20gJ2JvZHktcGFyc2VyJ1xyXG5cclxuY29uc3QgYXBwID0gZXhwcmVzcygpXHJcblxyXG4vL2FwcC5vcHRpb25zKCcqJywgY29ycygpKVxyXG5hcHAudXNlKChyZXEsIHJlcywgbmV4dCkgPT4ge1xyXG4gICAgcmVzLmhlYWRlcignQWNjZXNzLUNvbnRyb2wtQWxsb3ctT3JpZ2luJywgJyonKVxyXG4gICAgcmVzLmhlYWRlcignQWNjZXNzLUNvbnRyb2wtQWxsb3ctTWV0aG9kcycsICcqJylcclxuICAgIHJlcy5oZWFkZXIoJ0FjY2Vzcy1Db250cm9sLUFsbG93LUhlYWRlcnMnLCAnKicpXHJcblxyXG4gICAgbmV4dCgpXHJcbn0pXHJcblxyXG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKVxyXG5hcHAudXNlKGJvZHlQYXJzZXIudXJsZW5jb2RlZCh7IGV4dGVuZGVkOiBmYWxzZSB9KSlcclxuXHJcbi8qIGFwcC51c2UoZXhwcmVzcy5qc29uKCkpXHJcbmFwcC51c2UoYm9keVBhcnNlci51cmxlbmNvZGVkKHsgZXh0ZW5kZWQ6IHRydWUgfSkpICovXHJcbmNvbnNpZ24oe1xyXG4gICAgY3dkOiBfX2Rpcm5hbWVcclxufSlcclxuICAgIC5pbmNsdWRlKCdsaWJzL21pZGRsZXdhcmVzLmpzJylcclxuICAgIC50aGVuKCdyb3V0ZXMnKVxyXG4gICAgLnRoZW4oJ2xpYnMvYm9vdC5qcycpXHJcbiAgICAuaW50byhhcHApXHJcblxyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "app",
        "use",
        "req",
        "res",
        "next",
        "header",
        "bodyParser",
        "json",
        "urlencoded",
        "extended",
        "cwd",
        "__dirname",
        "include",
        "then",
        "into"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;;;AAEA,IAAMA,GAAG,GAAG,0BAAZ,C,CAEA;;AACAA,GAAG,CAACC,GAAJ,CAAQ,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACxBD,EAAAA,GAAG,CAACE,MAAJ,CAAW,6BAAX,EAA0C,GAA1C;AACAF,EAAAA,GAAG,CAACE,MAAJ,CAAW,8BAAX,EAA2C,GAA3C;AACAF,EAAAA,GAAG,CAACE,MAAJ,CAAW,8BAAX,EAA2C,GAA3C;AAEAD,EAAAA,IAAI;AACP,CAND;AAQAJ,GAAG,CAACC,GAAJ,CAAQK,uBAAWC,IAAX,EAAR;AACAP,GAAG,CAACC,GAAJ,CAAQK,uBAAWE,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;AAEA;;;AAEA,yBAAQ;AACJC,EAAAA,GAAG,EAAEC;AADD,CAAR,EAGKC,OAHL,CAGa,qBAHb,EAIKC,IAJL,CAIU,QAJV,EAKKA,IALL,CAKU,cALV,EAMKC,IANL,CAMUd,GANV",
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src",
      "sourcesContent": [
        "import express from 'express'\r\nimport consign from 'consign'\r\nimport bodyParser from 'body-parser'\r\n\r\nconst app = express()\r\n\r\n//app.options('*', cors())\r\napp.use((req, res, next) => {\r\n    res.header('Access-Control-Allow-Origin', '*')\r\n    res.header('Access-Control-Allow-Methods', '*')\r\n    res.header('Access-Control-Allow-Headers', '*')\r\n\r\n    next()\r\n})\r\n\r\napp.use(bodyParser.json())\r\napp.use(bodyParser.urlencoded({ extended: false }))\r\n\r\n/* app.use(express.json())\r\napp.use(bodyParser.urlencoded({ extended: true })) */\r\nconsign({\r\n    cwd: __dirname\r\n})\r\n    .include('libs/middlewares.js')\r\n    .then('routes')\r\n    .then('libs/boot.js')\r\n    .into(app)\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1579873690936
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\\\\libs\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"filename\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\\\\libs\\\\middlewares.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\libs",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\libs\\middlewares.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\libs\\middlewares.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\libs\\middlewares.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\libs",
        "sourceFileName": "middlewares.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (app) {\n  // Settings\n  app.set('port', process.env.PORT || 1998);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1pZGRsZXdhcmVzLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJhcHAiLCJzZXQiLCJwcm9jZXNzIiwiZW52IiwiUE9SVCJdLCJtYXBwaW5ncyI6Ijs7QUFBQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUFDLEdBQUcsRUFBSTtBQUNwQjtBQUNBQSxFQUFBQSxHQUFHLENBQUNDLEdBQUosQ0FBUSxNQUFSLEVBQWdCQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsSUFBWixJQUFvQixJQUFwQztBQUNILENBSEQiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxhc3VzXFxEb2N1bWVudHNcXEtyb3dcXEF6dWx1bGEgLSBCb3lrYVxcVXN0b2NrIGFwaVxcc3JjXFxsaWJzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBhcHAgPT4ge1xyXG4gICAgLy8gU2V0dGluZ3NcclxuICAgIGFwcC5zZXQoJ3BvcnQnLCBwcm9jZXNzLmVudi5QT1JUIHx8IDE5OTgpXHJcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "middlewares.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "set",
        "process",
        "env",
        "PORT"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAAAC,GAAG,EAAI;AACpB;AACAA,EAAAA,GAAG,CAACC,GAAJ,CAAQ,MAAR,EAAgBC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAApC;AACH,CAHD",
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\libs",
      "sourcesContent": [
        "module.exports = app => {\r\n    // Settings\r\n    app.set('port', process.env.PORT || 1998)\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1580944131468
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"filename\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\\\\routes\\\\article.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes\\article.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes\\article.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes\\article.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes",
        "sourceFileName": "article.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _verifyToken = _interopRequireDefault(require(\"../utils/verifyToken\"));\n\nvar _models = _interopRequireDefault(require(\"../models\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.exports = function (app) {\n  // List Article/service\n  app.get('/api/articles', _verifyToken[\"default\"], function (req, res) {\n    _models[\"default\"].Article.findAll({\n      include: [{\n        model: _models[\"default\"].Input\n      }, {\n        model: _models[\"default\"].Provider\n      }, {\n        model: _models[\"default\"].User\n      }]\n    }).then(function (articles) {\n      res.json({\n        articles: articles\n      });\n    });\n  }), // REGISTER Article V\n  app.post('/api/articles', function (req, res) {\n    // Params\n    var Article = req.body.Article; // Verify if exist into models.articles\n\n    /*         models.Article.findOne({\r\n                attributes: [\"internal_code\"],\r\n                where: { key: Article.internal_code }\r\n            })\r\n                .then((ArticleFound) => {\r\n                    if (!ArticleFound) { */\n\n    /* (articles) => {\r\n            return res.json({ articles, 'code': 1 })\r\n        } */\n\n    _models[\"default\"].Article.create(Article).then(function (articles) {\n      return articles.update({\n        internal_code: 'ATG' + articles.id\n      }).then(function (d) {\n        return res.json({\n          articles: articles,\n          'code': 1\n        });\n      })[\"catch\"](function (err) {\n        return res.json({\n          'error': 'Cannot add Article, error internal code',\n          'code': 0\n        });\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Cannot add Article',\n        'code': 0\n      });\n    });\n    /*                 } else {\r\n                        return res.json({ 'error': 'Article already exist', 'code': 11 })\r\n                    }\r\n    \r\n                })\r\n                .catch((err) => {\r\n                    return res.json({ 'error': 'Unable to verify Article', err, 'code': -1 })\r\n                }) */\n\n  }); // UPDATE Article\n\n  app.put('/api/articles/:id', function (req, res) {\n    // Params\n    var Data = req.body; // Verify if exist into models.articles\n\n    _models[\"default\"].Article.findOne({\n      attributes: [\"id\"],\n      where: {\n        id: req.params.id\n      }\n    }).then(function (ArticleFound2) {\n      ArticleFound2.update(Data.Article).then(function (articles) {\n        return res.json({\n          articles: articles,\n          'code': 1\n        });\n      })[\"catch\"](function (err) {\n        return res.json({\n          'error': 'Cannot Update Article',\n          'code': 0\n        });\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify Article',\n        err: err,\n        'code': 0\n      });\n    });\n  }); // Delete Article\n\n  app[\"delete\"]('/api/articles/:id', function (req, res) {\n    // Params\n    var Article = {\n      id: req.params.id\n    }; // Verify if exist into models.articles\n\n    _models[\"default\"].Article.findOne({\n      attributes: [\"id\"],\n      where: {\n        id: Article.id\n      }\n    }).then(function (ArticleFound2) {\n      ArticleFound2.destroy(Article).then(function () {\n        return res.json({\n          'status': 'success',\n          'code': 1\n        });\n      })[\"catch\"](function (err) {\n        return res.json({\n          'error': 'Cannot Delete Article',\n          'code': 0\n        });\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify Article',\n        err: err,\n        'code': 0\n      });\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "article.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "get",
        "verifyToken",
        "req",
        "res",
        "models",
        "Article",
        "findAll",
        "include",
        "model",
        "Input",
        "Provider",
        "User",
        "then",
        "articles",
        "json",
        "post",
        "body",
        "create",
        "update",
        "internal_code",
        "id",
        "d",
        "err",
        "put",
        "Data",
        "findOne",
        "attributes",
        "where",
        "params",
        "ArticleFound2",
        "destroy"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes",
      "sourcesContent": [
        "import verifyToken from '../utils/verifyToken'\r\nimport models from '../models'\r\n\r\n\r\nmodule.exports = app => {\r\n    \r\n    // List Article/service\r\n    app.get('/api/articles',verifyToken,(req, res) => {\r\n\r\n        models.Article.findAll({include:[{model: models.Input},{model: models.Provider},{model: models.User}]}).then((articles) => {\r\n            res.json({\r\n                articles\r\n            })\r\n        })\r\n    }),\r\n    // REGISTER Article V\r\n    app.post('/api/articles', (req, res) => {\r\n\r\n        // Params\r\n        var Article = req.body.Article\r\n\r\n\r\n        // Verify if exist into models.articles\r\n/*         models.Article.findOne({\r\n            attributes: [\"internal_code\"],\r\n            where: { key: Article.internal_code }\r\n        })\r\n            .then((ArticleFound) => {\r\n                if (!ArticleFound) { */\r\n                    /* (articles) => {\r\n                            return res.json({ articles, 'code': 1 })\r\n                        } */\r\n                    models.Article.create(Article)\r\n                        .then(articles => articles.update({internal_code:'ATG'+articles.id}).then(d=>{\r\n                            return res.json({ articles, 'code': 1 })\r\n                        }).catch((err)=>{\r\n                            return res.json({ 'error': 'Cannot add Article, error internal code', 'code': 0 })\r\n                        }))\r\n                        .catch((err) => {\r\n                            return res.json({ 'error': 'Cannot add Article', 'code': 0 })\r\n                        })\r\n/*                 } else {\r\n                    return res.json({ 'error': 'Article already exist', 'code': 11 })\r\n                }\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify Article', err, 'code': -1 })\r\n            }) */\r\n    })\r\n\r\n    // UPDATE Article\r\n    app.put('/api/articles/:id', (req, res) => {\r\n\r\n        // Params\r\n        var Data = req.body\r\n\r\n        // Verify if exist into models.articles\r\n\r\n        models.Article.findOne({\r\n            attributes: [\"id\"],\r\n            where: { id: req.params.id }\r\n        })\r\n            .then((ArticleFound2) => {\r\n                ArticleFound2.update(Data.Article)\r\n                    .then((articles) => {\r\n\r\n                        return res.json({ articles, 'code': 1 })\r\n \r\n                    })\r\n                    .catch((err) => {\r\n                        return res.json({ 'error': 'Cannot Update Article', 'code': 0 })\r\n                    })\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify Article', err, 'code': 0 })\r\n            })\r\n\r\n    })\r\n\r\n     // Delete Article\r\n     app.delete('/api/articles/:id',(req, res) => {\r\n\r\n        // Params\r\n        var Article = { id:req.params.id}\r\n\r\n        // Verify if exist into models.articles\r\n\r\n        models.Article.findOne({\r\n            attributes: [\"id\"],\r\n            where: { id: Article.id }\r\n        })\r\n            .then((ArticleFound2) => {\r\n                ArticleFound2.destroy(Article)\r\n                    .then(() => {\r\n                        return res.json({ 'status':'success', 'code': 1 })\r\n                    })\r\n                    .catch((err) => {\r\n                        return res.json({ 'error': 'Cannot Delete Article', 'code': 0 })\r\n                    })\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify Article', err, 'code': 0 })\r\n            })\r\n\r\n    })\r\n   }\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581603538388
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\\\\utils\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"filename\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\\\\utils\\\\verifyToken.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\utils",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\utils\\verifyToken.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\utils\\verifyToken.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\utils\\verifyToken.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\utils",
        "sourceFileName": "verifyToken.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _jwt = _interopRequireDefault(require(\"./jwt.util\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar JWT_SIGN_SECRET = '8ogu4o8g0gg8043gg8g8ulg4go834uug4o303407743g7344380g01';\n\nmodule.exports = function (req, res, next) {\n  var token = req.headers['authorization'];\n  if (!token) return res.json({\n    'error': 'Wrong Token',\n    'code': 200,\n    'access': false\n  });\n\n  var userId = _jwt[\"default\"].getUserId(token);\n\n  try {\n    if (userId < 0) return res.json({\n      'error': 'Wrong Token',\n      'code': 200,\n      'access': false\n    });\n    next();\n  } catch (err) {\n    return res.json({\n      'error': 'Wrong Token',\n      'code': 200,\n      'access': false\n    });\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZlcmlmeVRva2VuLmpzIl0sIm5hbWVzIjpbIkpXVF9TSUdOX1NFQ1JFVCIsIm1vZHVsZSIsImV4cG9ydHMiLCJyZXEiLCJyZXMiLCJuZXh0IiwidG9rZW4iLCJoZWFkZXJzIiwianNvbiIsInVzZXJJZCIsImp3dFV0aWwiLCJnZXRVc2VySWQiLCJlcnIiXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7Ozs7QUFDQSxJQUFNQSxlQUFlLEdBQUcsd0RBQXhCOztBQUVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUIsVUFBVUMsR0FBVixFQUFlQyxHQUFmLEVBQW9CQyxJQUFwQixFQUEwQjtBQUN2QyxNQUFNQyxLQUFLLEdBQUdILEdBQUcsQ0FBQ0ksT0FBSixDQUFZLGVBQVosQ0FBZDtBQUNBLE1BQUcsQ0FBQ0QsS0FBSixFQUFXLE9BQU9GLEdBQUcsQ0FBQ0ksSUFBSixDQUFTO0FBQUUsYUFBUyxhQUFYO0FBQTBCLFlBQVEsR0FBbEM7QUFBdUMsY0FBVTtBQUFqRCxHQUFULENBQVA7O0FBRVgsTUFBTUMsTUFBTSxHQUFHQyxnQkFBUUMsU0FBUixDQUFrQkwsS0FBbEIsQ0FBZjs7QUFFQSxNQUFJO0FBRUEsUUFBSUcsTUFBTSxHQUFHLENBQWIsRUFDSSxPQUFPTCxHQUFHLENBQUNJLElBQUosQ0FBUztBQUFFLGVBQVMsYUFBWDtBQUEwQixjQUFRLEdBQWxDO0FBQXVDLGdCQUFVO0FBQWpELEtBQVQsQ0FBUDtBQUNKSCxJQUFBQSxJQUFJO0FBQ1AsR0FMRCxDQUtFLE9BQU9PLEdBQVAsRUFBWTtBQUNWLFdBQU9SLEdBQUcsQ0FBQ0ksSUFBSixDQUFTO0FBQUUsZUFBUyxhQUFYO0FBQTBCLGNBQVEsR0FBbEM7QUFBdUMsZ0JBQVU7QUFBakQsS0FBVCxDQUFQO0FBQ0g7QUFDSixDQWREIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcYXN1c1xcRG9jdW1lbnRzXFxLcm93XFxBenVsdWxhIC0gQm95a2FcXFVzdG9jayBhcGlcXHNyY1xcdXRpbHMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgand0IGZyb20gJ2pzb253ZWJ0b2tlbidcclxuaW1wb3J0IGp3dFV0aWwgZnJvbSAnLi9qd3QudXRpbCdcclxuY29uc3QgSldUX1NJR05fU0VDUkVUID0gJzhvZ3U0bzhnMGdnODA0M2dnOGc4dWxnNGdvODM0dXVnNG8zMDM0MDc3NDNnNzM0NDM4MGcwMSdcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHJlcSwgcmVzLCBuZXh0KSB7XHJcbiAgICBjb25zdCB0b2tlbiA9IHJlcS5oZWFkZXJzWydhdXRob3JpemF0aW9uJ11cclxuICAgIGlmKCF0b2tlbikgcmV0dXJuIHJlcy5qc29uKHsgJ2Vycm9yJzogJ1dyb25nIFRva2VuJywgJ2NvZGUnOiAyMDAsICdhY2Nlc3MnOiBmYWxzZSAgfSlcclxuXHJcbiAgICBjb25zdCB1c2VySWQgPSBqd3RVdGlsLmdldFVzZXJJZCh0b2tlbilcclxuXHJcbiAgICB0cnkge1xyXG4gICAgXHJcbiAgICAgICAgaWYgKHVzZXJJZCA8IDApXHJcbiAgICAgICAgICAgIHJldHVybiByZXMuanNvbih7ICdlcnJvcic6ICdXcm9uZyBUb2tlbicsICdjb2RlJzogMjAwLCAnYWNjZXNzJzogZmFsc2UgfSlcclxuICAgICAgICBuZXh0KClcclxuICAgIH0gY2F0Y2ggKGVycikge1xyXG4gICAgICAgIHJldHVybiByZXMuanNvbih7ICdlcnJvcic6ICdXcm9uZyBUb2tlbicsICdjb2RlJzogMjAwLCAnYWNjZXNzJzogZmFsc2UgIH0pXHJcbiAgICB9XHJcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "verifyToken.js"
      ],
      "names": [
        "JWT_SIGN_SECRET",
        "module",
        "exports",
        "req",
        "res",
        "next",
        "token",
        "headers",
        "json",
        "userId",
        "jwtUtil",
        "getUserId",
        "err"
      ],
      "mappings": ";;AAAA;;AACA;;;;AACA,IAAMA,eAAe,GAAG,wDAAxB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,UAAUC,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AACvC,MAAMC,KAAK,GAAGH,GAAG,CAACI,OAAJ,CAAY,eAAZ,CAAd;AACA,MAAG,CAACD,KAAJ,EAAW,OAAOF,GAAG,CAACI,IAAJ,CAAS;AAAE,aAAS,aAAX;AAA0B,YAAQ,GAAlC;AAAuC,cAAU;AAAjD,GAAT,CAAP;;AAEX,MAAMC,MAAM,GAAGC,gBAAQC,SAAR,CAAkBL,KAAlB,CAAf;;AAEA,MAAI;AAEA,QAAIG,MAAM,GAAG,CAAb,EACI,OAAOL,GAAG,CAACI,IAAJ,CAAS;AAAE,eAAS,aAAX;AAA0B,cAAQ,GAAlC;AAAuC,gBAAU;AAAjD,KAAT,CAAP;AACJH,IAAAA,IAAI;AACP,GALD,CAKE,OAAOO,GAAP,EAAY;AACV,WAAOR,GAAG,CAACI,IAAJ,CAAS;AAAE,eAAS,aAAX;AAA0B,cAAQ,GAAlC;AAAuC,gBAAU;AAAjD,KAAT,CAAP;AACH;AACJ,CAdD",
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\utils",
      "sourcesContent": [
        "import jwt from 'jsonwebtoken'\r\nimport jwtUtil from './jwt.util'\r\nconst JWT_SIGN_SECRET = '8ogu4o8g0gg8043gg8g8ulg4go834uug4o303407743g7344380g01'\r\n\r\nmodule.exports = function (req, res, next) {\r\n    const token = req.headers['authorization']\r\n    if(!token) return res.json({ 'error': 'Wrong Token', 'code': 200, 'access': false  })\r\n\r\n    const userId = jwtUtil.getUserId(token)\r\n\r\n    try {\r\n    \r\n        if (userId < 0)\r\n            return res.json({ 'error': 'Wrong Token', 'code': 200, 'access': false })\r\n        next()\r\n    } catch (err) {\r\n        return res.json({ 'error': 'Wrong Token', 'code': 200, 'access': false  })\r\n    }\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1580978913998
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\\\\utils\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"filename\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\\\\utils\\\\jwt.util.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\utils",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\utils\\jwt.util.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\utils\\jwt.util.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\utils\\jwt.util.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\utils",
        "sourceFileName": "jwt.util.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar JWT_SIGN_SECRET = '8ogu4o8g0gg8043gg8g8ulg4go834uug4o303407743g7344380g01';\nmodule.exports = {\n  generateTokenForUser: function generateTokenForUser(userData) {\n    return _jsonwebtoken[\"default\"].sign({\n      userId: userData.id\n    }, JWT_SIGN_SECRET, {\n      expiresIn: '5d'\n    });\n  },\n  parseAuthorization: function parseAuthorization(authorization) {\n    return authorization != null ? authorization.replace('Bearer ', '') : null;\n  },\n  getUserId: function getUserId(authorization) {\n    var userId = -1;\n    var token = module.exports.parseAuthorization(authorization);\n\n    if (token != null) {\n      try {\n        var jwtToken = _jsonwebtoken[\"default\"].verify(token, JWT_SIGN_SECRET);\n\n        if (jwtToken != null) userId = jwtToken.userId;\n      } catch (err) {}\n    }\n\n    return userId;\n  },\n  destroyToken: function destroyToken(authorization) {\n    var token = module.exports.parseAuthorization(authorization);\n    return _jsonwebtoken[\"default\"].destroy(token);\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImp3dC51dGlsLmpzIl0sIm5hbWVzIjpbIkpXVF9TSUdOX1NFQ1JFVCIsIm1vZHVsZSIsImV4cG9ydHMiLCJnZW5lcmF0ZVRva2VuRm9yVXNlciIsInVzZXJEYXRhIiwiand0Iiwic2lnbiIsInVzZXJJZCIsImlkIiwiZXhwaXJlc0luIiwicGFyc2VBdXRob3JpemF0aW9uIiwiYXV0aG9yaXphdGlvbiIsInJlcGxhY2UiLCJnZXRVc2VySWQiLCJ0b2tlbiIsImp3dFRva2VuIiwidmVyaWZ5IiwiZXJyIiwiZGVzdHJveVRva2VuIiwiZGVzdHJveSJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7OztBQUNBLElBQU1BLGVBQWUsR0FBRyx3REFBeEI7QUFDQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2JDLEVBQUFBLG9CQURhLGdDQUNRQyxRQURSLEVBQ2tCO0FBQzNCLFdBQU9DLHlCQUFJQyxJQUFKLENBQVM7QUFDWkMsTUFBQUEsTUFBTSxFQUFFSCxRQUFRLENBQUNJO0FBREwsS0FBVCxFQUdQUixlQUhPLEVBSUg7QUFDSVMsTUFBQUEsU0FBUyxFQUFFO0FBRGYsS0FKRyxDQUFQO0FBT0gsR0FUWTtBQVdiQyxFQUFBQSxrQkFYYSw4QkFXTUMsYUFYTixFQVdxQjtBQUM5QixXQUFRQSxhQUFhLElBQUksSUFBbEIsR0FBMEJBLGFBQWEsQ0FBQ0MsT0FBZCxDQUFzQixTQUF0QixFQUFpQyxFQUFqQyxDQUExQixHQUFpRSxJQUF4RTtBQUNILEdBYlk7QUFjYkMsRUFBQUEsU0FkYSxxQkFjSEYsYUFkRyxFQWNZO0FBQ3JCLFFBQUlKLE1BQU0sR0FBRyxDQUFDLENBQWQ7QUFDQSxRQUFJTyxLQUFLLEdBQUdiLE1BQU0sQ0FBQ0MsT0FBUCxDQUFlUSxrQkFBZixDQUFrQ0MsYUFBbEMsQ0FBWjs7QUFDQSxRQUFJRyxLQUFLLElBQUksSUFBYixFQUFtQjtBQUNmLFVBQUk7QUFDQSxZQUFJQyxRQUFRLEdBQUdWLHlCQUFJVyxNQUFKLENBQVdGLEtBQVgsRUFBa0JkLGVBQWxCLENBQWY7O0FBQ0EsWUFBSWUsUUFBUSxJQUFJLElBQWhCLEVBQ0lSLE1BQU0sR0FBR1EsUUFBUSxDQUFDUixNQUFsQjtBQUNQLE9BSkQsQ0FJRSxPQUFPVSxHQUFQLEVBQVksQ0FBRTtBQUNuQjs7QUFDRCxXQUFPVixNQUFQO0FBQ0gsR0F6Qlk7QUEwQmJXLEVBQUFBLFlBMUJhLHdCQTBCQVAsYUExQkEsRUEwQmU7QUFDeEIsUUFBSUcsS0FBSyxHQUFHYixNQUFNLENBQUNDLE9BQVAsQ0FBZVEsa0JBQWYsQ0FBa0NDLGFBQWxDLENBQVo7QUFDQSxXQUFPTix5QkFBSWMsT0FBSixDQUFZTCxLQUFaLENBQVA7QUFDSDtBQTdCWSxDQUFqQiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGFzdXNcXERvY3VtZW50c1xcS3Jvd1xcQXp1bHVsYSAtIEJveWthXFxVc3RvY2sgYXBpXFxzcmNcXHV0aWxzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGp3dCBmcm9tICdqc29ud2VidG9rZW4nXHJcbmNvbnN0IEpXVF9TSUdOX1NFQ1JFVCA9ICc4b2d1NG84ZzBnZzgwNDNnZzhnOHVsZzRnbzgzNHV1ZzRvMzAzNDA3NzQzZzczNDQzODBnMDEnXHJcbm1vZHVsZS5leHBvcnRzID0ge1xyXG4gICAgZ2VuZXJhdGVUb2tlbkZvclVzZXIodXNlckRhdGEpIHtcclxuICAgICAgICByZXR1cm4gand0LnNpZ24oe1xyXG4gICAgICAgICAgICB1c2VySWQ6IHVzZXJEYXRhLmlkXHJcbiAgICAgICAgfSxcclxuICAgICAgICBKV1RfU0lHTl9TRUNSRVQsXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIGV4cGlyZXNJbjogJzVkJ1xyXG4gICAgICAgICAgICB9KVxyXG4gICAgfSxcclxuXHJcbiAgICBwYXJzZUF1dGhvcml6YXRpb24oYXV0aG9yaXphdGlvbikge1xyXG4gICAgICAgIHJldHVybiAoYXV0aG9yaXphdGlvbiAhPSBudWxsKSA/IGF1dGhvcml6YXRpb24ucmVwbGFjZSgnQmVhcmVyICcsICcnKSA6IG51bGxcclxuICAgIH0sXHJcbiAgICBnZXRVc2VySWQoYXV0aG9yaXphdGlvbikge1xyXG4gICAgICAgIHZhciB1c2VySWQgPSAtMVxyXG4gICAgICAgIHZhciB0b2tlbiA9IG1vZHVsZS5leHBvcnRzLnBhcnNlQXV0aG9yaXphdGlvbihhdXRob3JpemF0aW9uKVxyXG4gICAgICAgIGlmICh0b2tlbiAhPSBudWxsKSB7XHJcbiAgICAgICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgand0VG9rZW4gPSBqd3QudmVyaWZ5KHRva2VuLCBKV1RfU0lHTl9TRUNSRVQpXHJcbiAgICAgICAgICAgICAgICBpZiAoand0VG9rZW4gIT0gbnVsbClcclxuICAgICAgICAgICAgICAgICAgICB1c2VySWQgPSBqd3RUb2tlbi51c2VySWRcclxuICAgICAgICAgICAgfSBjYXRjaCAoZXJyKSB7fVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gdXNlcklkXHJcbiAgICB9LFxyXG4gICAgZGVzdHJveVRva2VuKGF1dGhvcml6YXRpb24pIHtcclxuICAgICAgICB2YXIgdG9rZW4gPSBtb2R1bGUuZXhwb3J0cy5wYXJzZUF1dGhvcml6YXRpb24oYXV0aG9yaXphdGlvbilcclxuICAgICAgICByZXR1cm4gand0LmRlc3Ryb3kodG9rZW4pXHJcbiAgICB9XHJcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "jwt.util.js"
      ],
      "names": [
        "JWT_SIGN_SECRET",
        "module",
        "exports",
        "generateTokenForUser",
        "userData",
        "jwt",
        "sign",
        "userId",
        "id",
        "expiresIn",
        "parseAuthorization",
        "authorization",
        "replace",
        "getUserId",
        "token",
        "jwtToken",
        "verify",
        "err",
        "destroyToken",
        "destroy"
      ],
      "mappings": ";;AAAA;;;;AACA,IAAMA,eAAe,GAAG,wDAAxB;AACAC,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,oBADa,gCACQC,QADR,EACkB;AAC3B,WAAOC,yBAAIC,IAAJ,CAAS;AACZC,MAAAA,MAAM,EAAEH,QAAQ,CAACI;AADL,KAAT,EAGPR,eAHO,EAIH;AACIS,MAAAA,SAAS,EAAE;AADf,KAJG,CAAP;AAOH,GATY;AAWbC,EAAAA,kBAXa,8BAWMC,aAXN,EAWqB;AAC9B,WAAQA,aAAa,IAAI,IAAlB,GAA0BA,aAAa,CAACC,OAAd,CAAsB,SAAtB,EAAiC,EAAjC,CAA1B,GAAiE,IAAxE;AACH,GAbY;AAcbC,EAAAA,SAda,qBAcHF,aAdG,EAcY;AACrB,QAAIJ,MAAM,GAAG,CAAC,CAAd;AACA,QAAIO,KAAK,GAAGb,MAAM,CAACC,OAAP,CAAeQ,kBAAf,CAAkCC,aAAlC,CAAZ;;AACA,QAAIG,KAAK,IAAI,IAAb,EAAmB;AACf,UAAI;AACA,YAAIC,QAAQ,GAAGV,yBAAIW,MAAJ,CAAWF,KAAX,EAAkBd,eAAlB,CAAf;;AACA,YAAIe,QAAQ,IAAI,IAAhB,EACIR,MAAM,GAAGQ,QAAQ,CAACR,MAAlB;AACP,OAJD,CAIE,OAAOU,GAAP,EAAY,CAAE;AACnB;;AACD,WAAOV,MAAP;AACH,GAzBY;AA0BbW,EAAAA,YA1Ba,wBA0BAP,aA1BA,EA0Be;AACxB,QAAIG,KAAK,GAAGb,MAAM,CAACC,OAAP,CAAeQ,kBAAf,CAAkCC,aAAlC,CAAZ;AACA,WAAON,yBAAIc,OAAJ,CAAYL,KAAZ,CAAP;AACH;AA7BY,CAAjB",
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\utils",
      "sourcesContent": [
        "import jwt from 'jsonwebtoken'\r\nconst JWT_SIGN_SECRET = '8ogu4o8g0gg8043gg8g8ulg4go834uug4o303407743g7344380g01'\r\nmodule.exports = {\r\n    generateTokenForUser(userData) {\r\n        return jwt.sign({\r\n            userId: userData.id\r\n        },\r\n        JWT_SIGN_SECRET,\r\n            {\r\n                expiresIn: '5d'\r\n            })\r\n    },\r\n\r\n    parseAuthorization(authorization) {\r\n        return (authorization != null) ? authorization.replace('Bearer ', '') : null\r\n    },\r\n    getUserId(authorization) {\r\n        var userId = -1\r\n        var token = module.exports.parseAuthorization(authorization)\r\n        if (token != null) {\r\n            try {\r\n                var jwtToken = jwt.verify(token, JWT_SIGN_SECRET)\r\n                if (jwtToken != null)\r\n                    userId = jwtToken.userId\r\n            } catch (err) {}\r\n        }\r\n        return userId\r\n    },\r\n    destroyToken(authorization) {\r\n        var token = module.exports.parseAuthorization(authorization)\r\n        return jwt.destroy(token)\r\n    }\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1580979240945
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"filename\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\\\\models\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models\\index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nvar fs = require('fs');\n\nvar path = require('path');\n\nvar Sequelize = require('sequelize');\n\nvar basename = path.basename(__filename);\nvar env = process.env.NODE_ENV || 'development';\n\nvar config = require(__dirname + '/../config/config.json')[env];\n\nvar db = {};\nvar sequelize;\n\nif (config.use_env_variable) {\n  sequelize = new Sequelize(process.env[config.use_env_variable], config);\n} else {\n  sequelize = new Sequelize(config.database, config.username, config.password, config);\n}\n\nfs.readdirSync(__dirname).filter(function (file) {\n  return file.indexOf('.') !== 0 && file !== basename && file.slice(-3) === '.js';\n}).forEach(function (file) {\n  var model = sequelize['import'](path.join(__dirname, file));\n  db[model.name] = model;\n});\nObject.keys(db).forEach(function (modelName) {\n  if (db[modelName].associate) {\n    db[modelName].associate(db);\n  }\n});\ndb.sequelize = sequelize;\ndb.Sequelize = Sequelize;\nmodule.exports = db;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImZzIiwicmVxdWlyZSIsInBhdGgiLCJTZXF1ZWxpemUiLCJiYXNlbmFtZSIsIl9fZmlsZW5hbWUiLCJlbnYiLCJwcm9jZXNzIiwiTk9ERV9FTlYiLCJjb25maWciLCJfX2Rpcm5hbWUiLCJkYiIsInNlcXVlbGl6ZSIsInVzZV9lbnZfdmFyaWFibGUiLCJkYXRhYmFzZSIsInVzZXJuYW1lIiwicGFzc3dvcmQiLCJyZWFkZGlyU3luYyIsImZpbHRlciIsImZpbGUiLCJpbmRleE9mIiwic2xpY2UiLCJmb3JFYWNoIiwibW9kZWwiLCJqb2luIiwibmFtZSIsIk9iamVjdCIsImtleXMiLCJtb2RlbE5hbWUiLCJhc3NvY2lhdGUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxJQUFNQSxFQUFFLEdBQUdDLE9BQU8sQ0FBQyxJQUFELENBQWxCOztBQUNBLElBQU1DLElBQUksR0FBR0QsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsSUFBTUUsU0FBUyxHQUFHRixPQUFPLENBQUMsV0FBRCxDQUF6Qjs7QUFDQSxJQUFNRyxRQUFRLEdBQUdGLElBQUksQ0FBQ0UsUUFBTCxDQUFjQyxVQUFkLENBQWpCO0FBQ0EsSUFBTUMsR0FBRyxHQUFHQyxPQUFPLENBQUNELEdBQVIsQ0FBWUUsUUFBWixJQUF3QixhQUFwQzs7QUFDQSxJQUFNQyxNQUFNLEdBQUdSLE9BQU8sQ0FBQ1MsU0FBUyxHQUFHLHdCQUFiLENBQVAsQ0FBOENKLEdBQTlDLENBQWY7O0FBQ0EsSUFBTUssRUFBRSxHQUFHLEVBQVg7QUFFQSxJQUFJQyxTQUFKOztBQUNBLElBQUlILE1BQU0sQ0FBQ0ksZ0JBQVgsRUFBNkI7QUFDM0JELEVBQUFBLFNBQVMsR0FBRyxJQUFJVCxTQUFKLENBQWNJLE9BQU8sQ0FBQ0QsR0FBUixDQUFZRyxNQUFNLENBQUNJLGdCQUFuQixDQUFkLEVBQW9ESixNQUFwRCxDQUFaO0FBQ0QsQ0FGRCxNQUVPO0FBQ0xHLEVBQUFBLFNBQVMsR0FBRyxJQUFJVCxTQUFKLENBQWNNLE1BQU0sQ0FBQ0ssUUFBckIsRUFBK0JMLE1BQU0sQ0FBQ00sUUFBdEMsRUFBZ0ROLE1BQU0sQ0FBQ08sUUFBdkQsRUFBaUVQLE1BQWpFLENBQVo7QUFDRDs7QUFFRFQsRUFBRSxDQUNDaUIsV0FESCxDQUNlUCxTQURmLEVBRUdRLE1BRkgsQ0FFVSxVQUFBQyxJQUFJLEVBQUk7QUFDZCxTQUFRQSxJQUFJLENBQUNDLE9BQUwsQ0FBYSxHQUFiLE1BQXNCLENBQXZCLElBQThCRCxJQUFJLEtBQUtmLFFBQXZDLElBQXFEZSxJQUFJLENBQUNFLEtBQUwsQ0FBVyxDQUFDLENBQVosTUFBbUIsS0FBL0U7QUFDRCxDQUpILEVBS0dDLE9BTEgsQ0FLVyxVQUFBSCxJQUFJLEVBQUk7QUFDZixNQUFNSSxLQUFLLEdBQUdYLFNBQVMsQ0FBQyxRQUFELENBQVQsQ0FBb0JWLElBQUksQ0FBQ3NCLElBQUwsQ0FBVWQsU0FBVixFQUFxQlMsSUFBckIsQ0FBcEIsQ0FBZDtBQUNBUixFQUFBQSxFQUFFLENBQUNZLEtBQUssQ0FBQ0UsSUFBUCxDQUFGLEdBQWlCRixLQUFqQjtBQUNELENBUkg7QUFVQUcsTUFBTSxDQUFDQyxJQUFQLENBQVloQixFQUFaLEVBQWdCVyxPQUFoQixDQUF3QixVQUFBTSxTQUFTLEVBQUk7QUFDbkMsTUFBSWpCLEVBQUUsQ0FBQ2lCLFNBQUQsQ0FBRixDQUFjQyxTQUFsQixFQUE2QjtBQUMzQmxCLElBQUFBLEVBQUUsQ0FBQ2lCLFNBQUQsQ0FBRixDQUFjQyxTQUFkLENBQXdCbEIsRUFBeEI7QUFDRDtBQUNGLENBSkQ7QUFNQUEsRUFBRSxDQUFDQyxTQUFILEdBQWVBLFNBQWY7QUFDQUQsRUFBRSxDQUFDUixTQUFILEdBQWVBLFNBQWY7QUFFQTJCLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQnBCLEVBQWpCIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcYXN1c1xcRG9jdW1lbnRzXFxLcm93XFxBenVsdWxhIC0gQm95a2FcXFVzdG9jayBhcGlcXHNyY1xcbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBmcyA9IHJlcXVpcmUoJ2ZzJyk7XG5jb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xuY29uc3QgU2VxdWVsaXplID0gcmVxdWlyZSgnc2VxdWVsaXplJyk7XG5jb25zdCBiYXNlbmFtZSA9IHBhdGguYmFzZW5hbWUoX19maWxlbmFtZSk7XG5jb25zdCBlbnYgPSBwcm9jZXNzLmVudi5OT0RFX0VOViB8fCAnZGV2ZWxvcG1lbnQnO1xuY29uc3QgY29uZmlnID0gcmVxdWlyZShfX2Rpcm5hbWUgKyAnLy4uL2NvbmZpZy9jb25maWcuanNvbicpW2Vudl07XG5jb25zdCBkYiA9IHt9O1xuXG5sZXQgc2VxdWVsaXplO1xuaWYgKGNvbmZpZy51c2VfZW52X3ZhcmlhYmxlKSB7XG4gIHNlcXVlbGl6ZSA9IG5ldyBTZXF1ZWxpemUocHJvY2Vzcy5lbnZbY29uZmlnLnVzZV9lbnZfdmFyaWFibGVdLCBjb25maWcpO1xufSBlbHNlIHtcbiAgc2VxdWVsaXplID0gbmV3IFNlcXVlbGl6ZShjb25maWcuZGF0YWJhc2UsIGNvbmZpZy51c2VybmFtZSwgY29uZmlnLnBhc3N3b3JkLCBjb25maWcpO1xufVxuXG5mc1xuICAucmVhZGRpclN5bmMoX19kaXJuYW1lKVxuICAuZmlsdGVyKGZpbGUgPT4ge1xuICAgIHJldHVybiAoZmlsZS5pbmRleE9mKCcuJykgIT09IDApICYmIChmaWxlICE9PSBiYXNlbmFtZSkgJiYgKGZpbGUuc2xpY2UoLTMpID09PSAnLmpzJyk7XG4gIH0pXG4gIC5mb3JFYWNoKGZpbGUgPT4ge1xuICAgIGNvbnN0IG1vZGVsID0gc2VxdWVsaXplWydpbXBvcnQnXShwYXRoLmpvaW4oX19kaXJuYW1lLCBmaWxlKSk7XG4gICAgZGJbbW9kZWwubmFtZV0gPSBtb2RlbDtcbiAgfSk7XG5cbk9iamVjdC5rZXlzKGRiKS5mb3JFYWNoKG1vZGVsTmFtZSA9PiB7XG4gIGlmIChkYlttb2RlbE5hbWVdLmFzc29jaWF0ZSkge1xuICAgIGRiW21vZGVsTmFtZV0uYXNzb2NpYXRlKGRiKTtcbiAgfVxufSk7XG5cbmRiLnNlcXVlbGl6ZSA9IHNlcXVlbGl6ZTtcbmRiLlNlcXVlbGl6ZSA9IFNlcXVlbGl6ZTtcblxubW9kdWxlLmV4cG9ydHMgPSBkYjtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "fs",
        "require",
        "path",
        "Sequelize",
        "basename",
        "__filename",
        "env",
        "process",
        "NODE_ENV",
        "config",
        "__dirname",
        "db",
        "sequelize",
        "use_env_variable",
        "database",
        "username",
        "password",
        "readdirSync",
        "filter",
        "file",
        "indexOf",
        "slice",
        "forEach",
        "model",
        "join",
        "name",
        "Object",
        "keys",
        "modelName",
        "associate",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;AAEA,IAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,IAAME,SAAS,GAAGF,OAAO,CAAC,WAAD,CAAzB;;AACA,IAAMG,QAAQ,GAAGF,IAAI,CAACE,QAAL,CAAcC,UAAd,CAAjB;AACA,IAAMC,GAAG,GAAGC,OAAO,CAACD,GAAR,CAAYE,QAAZ,IAAwB,aAApC;;AACA,IAAMC,MAAM,GAAGR,OAAO,CAACS,SAAS,GAAG,wBAAb,CAAP,CAA8CJ,GAA9C,CAAf;;AACA,IAAMK,EAAE,GAAG,EAAX;AAEA,IAAIC,SAAJ;;AACA,IAAIH,MAAM,CAACI,gBAAX,EAA6B;AAC3BD,EAAAA,SAAS,GAAG,IAAIT,SAAJ,CAAcI,OAAO,CAACD,GAAR,CAAYG,MAAM,CAACI,gBAAnB,CAAd,EAAoDJ,MAApD,CAAZ;AACD,CAFD,MAEO;AACLG,EAAAA,SAAS,GAAG,IAAIT,SAAJ,CAAcM,MAAM,CAACK,QAArB,EAA+BL,MAAM,CAACM,QAAtC,EAAgDN,MAAM,CAACO,QAAvD,EAAiEP,MAAjE,CAAZ;AACD;;AAEDT,EAAE,CACCiB,WADH,CACeP,SADf,EAEGQ,MAFH,CAEU,UAAAC,IAAI,EAAI;AACd,SAAQA,IAAI,CAACC,OAAL,CAAa,GAAb,MAAsB,CAAvB,IAA8BD,IAAI,KAAKf,QAAvC,IAAqDe,IAAI,CAACE,KAAL,CAAW,CAAC,CAAZ,MAAmB,KAA/E;AACD,CAJH,EAKGC,OALH,CAKW,UAAAH,IAAI,EAAI;AACf,MAAMI,KAAK,GAAGX,SAAS,CAAC,QAAD,CAAT,CAAoBV,IAAI,CAACsB,IAAL,CAAUd,SAAV,EAAqBS,IAArB,CAApB,CAAd;AACAR,EAAAA,EAAE,CAACY,KAAK,CAACE,IAAP,CAAF,GAAiBF,KAAjB;AACD,CARH;AAUAG,MAAM,CAACC,IAAP,CAAYhB,EAAZ,EAAgBW,OAAhB,CAAwB,UAAAM,SAAS,EAAI;AACnC,MAAIjB,EAAE,CAACiB,SAAD,CAAF,CAAcC,SAAlB,EAA6B;AAC3BlB,IAAAA,EAAE,CAACiB,SAAD,CAAF,CAAcC,SAAd,CAAwBlB,EAAxB;AACD;AACF,CAJD;AAMAA,EAAE,CAACC,SAAH,GAAeA,SAAf;AACAD,EAAE,CAACR,SAAH,GAAeA,SAAf;AAEA2B,MAAM,CAACC,OAAP,GAAiBpB,EAAjB",
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models",
      "sourcesContent": [
        "'use strict';\n\nconst fs = require('fs');\nconst path = require('path');\nconst Sequelize = require('sequelize');\nconst basename = path.basename(__filename);\nconst env = process.env.NODE_ENV || 'development';\nconst config = require(__dirname + '/../config/config.json')[env];\nconst db = {};\n\nlet sequelize;\nif (config.use_env_variable) {\n  sequelize = new Sequelize(process.env[config.use_env_variable], config);\n} else {\n  sequelize = new Sequelize(config.database, config.username, config.password, config);\n}\n\nfs\n  .readdirSync(__dirname)\n  .filter(file => {\n    return (file.indexOf('.') !== 0) && (file !== basename) && (file.slice(-3) === '.js');\n  })\n  .forEach(file => {\n    const model = sequelize['import'](path.join(__dirname, file));\n    db[model.name] = model;\n  });\n\nObject.keys(db).forEach(modelName => {\n  if (db[modelName].associate) {\n    db[modelName].associate(db);\n  }\n});\n\ndb.sequelize = sequelize;\ndb.Sequelize = Sequelize;\n\nmodule.exports = db;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1580944946733
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"filename\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\\\\models\\\\article.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models\\article.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models\\article.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models\\article.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models",
        "sourceFileName": "article.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nmodule.exports = function (sequelize, DataTypes) {\n  var Article = sequelize.define('Article', {\n    internal_code: DataTypes.STRING,\n    userId: DataTypes.INTEGER,\n    providerId: DataTypes.INTEGER,\n    inputId: DataTypes.INTEGER,\n    quantity: DataTypes.INTEGER,\n    iva: DataTypes.DECIMAL,\n    purchase: DataTypes.DECIMAL,\n    discount: DataTypes.DECIMAL,\n    total: DataTypes.DECIMAL,\n    status: DataTypes.BOOLEAN,\n    description: DataTypes.STRING,\n    info: DataTypes.STRING,\n    marca: DataTypes.STRING,\n    modelo: DataTypes.STRING,\n    color: DataTypes.STRING,\n    serial_number: DataTypes.STRING,\n    obs: DataTypes.STRING,\n    manufactured_by: DataTypes.STRING,\n    type_value: DataTypes.STRING,\n    categoryId: DataTypes.INTEGER,\n    year_made: DataTypes.INTEGER,\n    photo: DataTypes.STRING\n  }, {});\n\n  Article.associate = function (models) {\n    Article.belongsTo(models.User);\n    Article.belongsTo(models.Category);\n    Article.hasMany(models.Input);\n    Article.belongsTo(models.Provider);\n  };\n\n  return Article;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFydGljbGUuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInNlcXVlbGl6ZSIsIkRhdGFUeXBlcyIsIkFydGljbGUiLCJkZWZpbmUiLCJpbnRlcm5hbF9jb2RlIiwiU1RSSU5HIiwidXNlcklkIiwiSU5URUdFUiIsInByb3ZpZGVySWQiLCJpbnB1dElkIiwicXVhbnRpdHkiLCJpdmEiLCJERUNJTUFMIiwicHVyY2hhc2UiLCJkaXNjb3VudCIsInRvdGFsIiwic3RhdHVzIiwiQk9PTEVBTiIsImRlc2NyaXB0aW9uIiwiaW5mbyIsIm1hcmNhIiwibW9kZWxvIiwiY29sb3IiLCJzZXJpYWxfbnVtYmVyIiwib2JzIiwibWFudWZhY3R1cmVkX2J5IiwidHlwZV92YWx1ZSIsImNhdGVnb3J5SWQiLCJ5ZWFyX21hZGUiLCJwaG90byIsImFzc29jaWF0ZSIsIm1vZGVscyIsImJlbG9uZ3NUbyIsIlVzZXIiLCJDYXRlZ29yeSIsImhhc01hbnkiLCJJbnB1dCIsIlByb3ZpZGVyIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFDQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUNDLFNBQUQsRUFBWUMsU0FBWixFQUEwQjtBQUN6QyxNQUFNQyxPQUFPLEdBQUdGLFNBQVMsQ0FBQ0csTUFBVixDQUFpQixTQUFqQixFQUE0QjtBQUMxQ0MsSUFBQUEsYUFBYSxFQUFFSCxTQUFTLENBQUNJLE1BRGlCO0FBRTFDQyxJQUFBQSxNQUFNLEVBQUVMLFNBQVMsQ0FBQ00sT0FGd0I7QUFHMUNDLElBQUFBLFVBQVUsRUFBRVAsU0FBUyxDQUFDTSxPQUhvQjtBQUkxQ0UsSUFBQUEsT0FBTyxFQUFFUixTQUFTLENBQUNNLE9BSnVCO0FBSzFDRyxJQUFBQSxRQUFRLEVBQUVULFNBQVMsQ0FBQ00sT0FMc0I7QUFNMUNJLElBQUFBLEdBQUcsRUFBRVYsU0FBUyxDQUFDVyxPQU4yQjtBQU8xQ0MsSUFBQUEsUUFBUSxFQUFFWixTQUFTLENBQUNXLE9BUHNCO0FBUTFDRSxJQUFBQSxRQUFRLEVBQUViLFNBQVMsQ0FBQ1csT0FSc0I7QUFTMUNHLElBQUFBLEtBQUssRUFBRWQsU0FBUyxDQUFDVyxPQVR5QjtBQVUxQ0ksSUFBQUEsTUFBTSxFQUFFZixTQUFTLENBQUNnQixPQVZ3QjtBQVcxQ0MsSUFBQUEsV0FBVyxFQUFFakIsU0FBUyxDQUFDSSxNQVhtQjtBQVkxQ2MsSUFBQUEsSUFBSSxFQUFFbEIsU0FBUyxDQUFDSSxNQVowQjtBQWExQ2UsSUFBQUEsS0FBSyxFQUFFbkIsU0FBUyxDQUFDSSxNQWJ5QjtBQWMxQ2dCLElBQUFBLE1BQU0sRUFBRXBCLFNBQVMsQ0FBQ0ksTUFkd0I7QUFlMUNpQixJQUFBQSxLQUFLLEVBQUVyQixTQUFTLENBQUNJLE1BZnlCO0FBZ0IxQ2tCLElBQUFBLGFBQWEsRUFBRXRCLFNBQVMsQ0FBQ0ksTUFoQmlCO0FBaUIxQ21CLElBQUFBLEdBQUcsRUFBRXZCLFNBQVMsQ0FBQ0ksTUFqQjJCO0FBa0IxQ29CLElBQUFBLGVBQWUsRUFBRXhCLFNBQVMsQ0FBQ0ksTUFsQmU7QUFtQjFDcUIsSUFBQUEsVUFBVSxFQUFFekIsU0FBUyxDQUFDSSxNQW5Cb0I7QUFvQjFDc0IsSUFBQUEsVUFBVSxFQUFFMUIsU0FBUyxDQUFDTSxPQXBCb0I7QUFxQjFDcUIsSUFBQUEsU0FBUyxFQUFFM0IsU0FBUyxDQUFDTSxPQXJCcUI7QUFzQjFDc0IsSUFBQUEsS0FBSyxFQUFFNUIsU0FBUyxDQUFDSTtBQXRCeUIsR0FBNUIsRUF1QmIsRUF2QmEsQ0FBaEI7O0FBd0JBSCxFQUFBQSxPQUFPLENBQUM0QixTQUFSLEdBQW9CLFVBQVNDLE1BQVQsRUFBaUI7QUFDbkM3QixJQUFBQSxPQUFPLENBQUM4QixTQUFSLENBQWtCRCxNQUFNLENBQUNFLElBQXpCO0FBQ0EvQixJQUFBQSxPQUFPLENBQUM4QixTQUFSLENBQWtCRCxNQUFNLENBQUNHLFFBQXpCO0FBQ0FoQyxJQUFBQSxPQUFPLENBQUNpQyxPQUFSLENBQWdCSixNQUFNLENBQUNLLEtBQXZCO0FBQ0FsQyxJQUFBQSxPQUFPLENBQUM4QixTQUFSLENBQWtCRCxNQUFNLENBQUNNLFFBQXpCO0FBRUQsR0FORDs7QUFPQSxTQUFPbkMsT0FBUDtBQUNELENBakNEIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcYXN1c1xcRG9jdW1lbnRzXFxLcm93XFxBenVsdWxhIC0gQm95a2FcXFVzdG9jayBhcGlcXHNyY1xcbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xubW9kdWxlLmV4cG9ydHMgPSAoc2VxdWVsaXplLCBEYXRhVHlwZXMpID0+IHtcbiAgY29uc3QgQXJ0aWNsZSA9IHNlcXVlbGl6ZS5kZWZpbmUoJ0FydGljbGUnLCB7XG4gICAgaW50ZXJuYWxfY29kZTogRGF0YVR5cGVzLlNUUklORyxcbiAgICB1c2VySWQ6IERhdGFUeXBlcy5JTlRFR0VSLFxuICAgIHByb3ZpZGVySWQ6IERhdGFUeXBlcy5JTlRFR0VSLCAgICBcbiAgICBpbnB1dElkOiBEYXRhVHlwZXMuSU5URUdFUixcbiAgICBxdWFudGl0eTogRGF0YVR5cGVzLklOVEVHRVIsXG4gICAgaXZhOiBEYXRhVHlwZXMuREVDSU1BTCxcbiAgICBwdXJjaGFzZTogRGF0YVR5cGVzLkRFQ0lNQUwsXG4gICAgZGlzY291bnQ6IERhdGFUeXBlcy5ERUNJTUFMLFxuICAgIHRvdGFsOiBEYXRhVHlwZXMuREVDSU1BTCxcbiAgICBzdGF0dXM6IERhdGFUeXBlcy5CT09MRUFOLFxuICAgIGRlc2NyaXB0aW9uOiBEYXRhVHlwZXMuU1RSSU5HLFxuICAgIGluZm86IERhdGFUeXBlcy5TVFJJTkcsXG4gICAgbWFyY2E6IERhdGFUeXBlcy5TVFJJTkcsXG4gICAgbW9kZWxvOiBEYXRhVHlwZXMuU1RSSU5HLFxuICAgIGNvbG9yOiBEYXRhVHlwZXMuU1RSSU5HLFxuICAgIHNlcmlhbF9udW1iZXI6IERhdGFUeXBlcy5TVFJJTkcsXG4gICAgb2JzOiBEYXRhVHlwZXMuU1RSSU5HLFxuICAgIG1hbnVmYWN0dXJlZF9ieTogRGF0YVR5cGVzLlNUUklORyxcbiAgICB0eXBlX3ZhbHVlOiBEYXRhVHlwZXMuU1RSSU5HLFxuICAgIGNhdGVnb3J5SWQ6IERhdGFUeXBlcy5JTlRFR0VSLFxuICAgIHllYXJfbWFkZTogRGF0YVR5cGVzLklOVEVHRVIsXG4gICAgcGhvdG86IERhdGFUeXBlcy5TVFJJTkdcbiAgfSwge30pO1xuICBBcnRpY2xlLmFzc29jaWF0ZSA9IGZ1bmN0aW9uKG1vZGVscykge1xuICAgIEFydGljbGUuYmVsb25nc1RvKG1vZGVscy5Vc2VyKVxuICAgIEFydGljbGUuYmVsb25nc1RvKG1vZGVscy5DYXRlZ29yeSlcbiAgICBBcnRpY2xlLmhhc01hbnkobW9kZWxzLklucHV0KVxuICAgIEFydGljbGUuYmVsb25nc1RvKG1vZGVscy5Qcm92aWRlcilcblxuICB9O1xuICByZXR1cm4gQXJ0aWNsZTtcbn07Il19",
    "map": {
      "version": 3,
      "sources": [
        "article.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "Article",
        "define",
        "internal_code",
        "STRING",
        "userId",
        "INTEGER",
        "providerId",
        "inputId",
        "quantity",
        "iva",
        "DECIMAL",
        "purchase",
        "discount",
        "total",
        "status",
        "BOOLEAN",
        "description",
        "info",
        "marca",
        "modelo",
        "color",
        "serial_number",
        "obs",
        "manufactured_by",
        "type_value",
        "categoryId",
        "year_made",
        "photo",
        "associate",
        "models",
        "belongsTo",
        "User",
        "Category",
        "hasMany",
        "Input",
        "Provider"
      ],
      "mappings": "AAAA;;AACAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AACzC,MAAMC,OAAO,GAAGF,SAAS,CAACG,MAAV,CAAiB,SAAjB,EAA4B;AAC1CC,IAAAA,aAAa,EAAEH,SAAS,CAACI,MADiB;AAE1CC,IAAAA,MAAM,EAAEL,SAAS,CAACM,OAFwB;AAG1CC,IAAAA,UAAU,EAAEP,SAAS,CAACM,OAHoB;AAI1CE,IAAAA,OAAO,EAAER,SAAS,CAACM,OAJuB;AAK1CG,IAAAA,QAAQ,EAAET,SAAS,CAACM,OALsB;AAM1CI,IAAAA,GAAG,EAAEV,SAAS,CAACW,OAN2B;AAO1CC,IAAAA,QAAQ,EAAEZ,SAAS,CAACW,OAPsB;AAQ1CE,IAAAA,QAAQ,EAAEb,SAAS,CAACW,OARsB;AAS1CG,IAAAA,KAAK,EAAEd,SAAS,CAACW,OATyB;AAU1CI,IAAAA,MAAM,EAAEf,SAAS,CAACgB,OAVwB;AAW1CC,IAAAA,WAAW,EAAEjB,SAAS,CAACI,MAXmB;AAY1Cc,IAAAA,IAAI,EAAElB,SAAS,CAACI,MAZ0B;AAa1Ce,IAAAA,KAAK,EAAEnB,SAAS,CAACI,MAbyB;AAc1CgB,IAAAA,MAAM,EAAEpB,SAAS,CAACI,MAdwB;AAe1CiB,IAAAA,KAAK,EAAErB,SAAS,CAACI,MAfyB;AAgB1CkB,IAAAA,aAAa,EAAEtB,SAAS,CAACI,MAhBiB;AAiB1CmB,IAAAA,GAAG,EAAEvB,SAAS,CAACI,MAjB2B;AAkB1CoB,IAAAA,eAAe,EAAExB,SAAS,CAACI,MAlBe;AAmB1CqB,IAAAA,UAAU,EAAEzB,SAAS,CAACI,MAnBoB;AAoB1CsB,IAAAA,UAAU,EAAE1B,SAAS,CAACM,OApBoB;AAqB1CqB,IAAAA,SAAS,EAAE3B,SAAS,CAACM,OArBqB;AAsB1CsB,IAAAA,KAAK,EAAE5B,SAAS,CAACI;AAtByB,GAA5B,EAuBb,EAvBa,CAAhB;;AAwBAH,EAAAA,OAAO,CAAC4B,SAAR,GAAoB,UAASC,MAAT,EAAiB;AACnC7B,IAAAA,OAAO,CAAC8B,SAAR,CAAkBD,MAAM,CAACE,IAAzB;AACA/B,IAAAA,OAAO,CAAC8B,SAAR,CAAkBD,MAAM,CAACG,QAAzB;AACAhC,IAAAA,OAAO,CAACiC,OAAR,CAAgBJ,MAAM,CAACK,KAAvB;AACAlC,IAAAA,OAAO,CAAC8B,SAAR,CAAkBD,MAAM,CAACM,QAAzB;AAED,GAND;;AAOA,SAAOnC,OAAP;AACD,CAjCD",
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models",
      "sourcesContent": [
        "'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const Article = sequelize.define('Article', {\n    internal_code: DataTypes.STRING,\n    userId: DataTypes.INTEGER,\n    providerId: DataTypes.INTEGER,    \n    inputId: DataTypes.INTEGER,\n    quantity: DataTypes.INTEGER,\n    iva: DataTypes.DECIMAL,\n    purchase: DataTypes.DECIMAL,\n    discount: DataTypes.DECIMAL,\n    total: DataTypes.DECIMAL,\n    status: DataTypes.BOOLEAN,\n    description: DataTypes.STRING,\n    info: DataTypes.STRING,\n    marca: DataTypes.STRING,\n    modelo: DataTypes.STRING,\n    color: DataTypes.STRING,\n    serial_number: DataTypes.STRING,\n    obs: DataTypes.STRING,\n    manufactured_by: DataTypes.STRING,\n    type_value: DataTypes.STRING,\n    categoryId: DataTypes.INTEGER,\n    year_made: DataTypes.INTEGER,\n    photo: DataTypes.STRING\n  }, {});\n  Article.associate = function(models) {\n    Article.belongsTo(models.User)\n    Article.belongsTo(models.Category)\n    Article.hasMany(models.Input)\n    Article.belongsTo(models.Provider)\n\n  };\n  return Article;\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1581927474009
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"filename\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\\\\models\\\\category.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models\\category.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models\\category.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models\\category.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models",
        "sourceFileName": "category.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nmodule.exports = function (sequelize, DataTypes) {\n  var Category = sequelize.define('Category', {\n    name: DataTypes.STRING,\n    userId: DataTypes.INTEGER,\n    status: DataTypes.BOOLEAN\n  }, {});\n\n  Category.associate = function (models) {\n    Category.hasMany(models.Article);\n    /*     Category.Articles= Order.hasMany(models.Article) */\n  };\n\n  return Category;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNhdGVnb3J5LmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJzZXF1ZWxpemUiLCJEYXRhVHlwZXMiLCJDYXRlZ29yeSIsImRlZmluZSIsIm5hbWUiLCJTVFJJTkciLCJ1c2VySWQiLCJJTlRFR0VSIiwic3RhdHVzIiwiQk9PTEVBTiIsImFzc29jaWF0ZSIsIm1vZGVscyIsImhhc01hbnkiLCJBcnRpY2xlIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFDQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUNDLFNBQUQsRUFBWUMsU0FBWixFQUEwQjtBQUN6QyxNQUFNQyxRQUFRLEdBQUdGLFNBQVMsQ0FBQ0csTUFBVixDQUFpQixVQUFqQixFQUE2QjtBQUM1Q0MsSUFBQUEsSUFBSSxFQUFFSCxTQUFTLENBQUNJLE1BRDRCO0FBRTVDQyxJQUFBQSxNQUFNLEVBQUVMLFNBQVMsQ0FBQ00sT0FGMEI7QUFHNUNDLElBQUFBLE1BQU0sRUFBRVAsU0FBUyxDQUFDUTtBQUgwQixHQUE3QixFQUlkLEVBSmMsQ0FBakI7O0FBS0FQLEVBQUFBLFFBQVEsQ0FBQ1EsU0FBVCxHQUFxQixVQUFTQyxNQUFULEVBQWlCO0FBQ3BDVCxJQUFBQSxRQUFRLENBQUNVLE9BQVQsQ0FBaUJELE1BQU0sQ0FBQ0UsT0FBeEI7QUFDSjtBQUNHLEdBSEQ7O0FBSUEsU0FBT1gsUUFBUDtBQUNELENBWEQiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxhc3VzXFxEb2N1bWVudHNcXEtyb3dcXEF6dWx1bGEgLSBCb3lrYVxcVXN0b2NrIGFwaVxcc3JjXFxtb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5tb2R1bGUuZXhwb3J0cyA9IChzZXF1ZWxpemUsIERhdGFUeXBlcykgPT4ge1xuICBjb25zdCBDYXRlZ29yeSA9IHNlcXVlbGl6ZS5kZWZpbmUoJ0NhdGVnb3J5Jywge1xuICAgIG5hbWU6IERhdGFUeXBlcy5TVFJJTkcsXG4gICAgdXNlcklkOiBEYXRhVHlwZXMuSU5URUdFUixcbiAgICBzdGF0dXM6IERhdGFUeXBlcy5CT09MRUFOXG4gIH0sIHt9KTtcbiAgQ2F0ZWdvcnkuYXNzb2NpYXRlID0gZnVuY3Rpb24obW9kZWxzKSB7XG4gICAgQ2F0ZWdvcnkuaGFzTWFueShtb2RlbHMuQXJ0aWNsZSlcbi8qICAgICBDYXRlZ29yeS5BcnRpY2xlcz0gT3JkZXIuaGFzTWFueShtb2RlbHMuQXJ0aWNsZSkgKi9cbiAgfTtcbiAgcmV0dXJuIENhdGVnb3J5O1xufTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "category.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "Category",
        "define",
        "name",
        "STRING",
        "userId",
        "INTEGER",
        "status",
        "BOOLEAN",
        "associate",
        "models",
        "hasMany",
        "Article"
      ],
      "mappings": "AAAA;;AACAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AACzC,MAAMC,QAAQ,GAAGF,SAAS,CAACG,MAAV,CAAiB,UAAjB,EAA6B;AAC5CC,IAAAA,IAAI,EAAEH,SAAS,CAACI,MAD4B;AAE5CC,IAAAA,MAAM,EAAEL,SAAS,CAACM,OAF0B;AAG5CC,IAAAA,MAAM,EAAEP,SAAS,CAACQ;AAH0B,GAA7B,EAId,EAJc,CAAjB;;AAKAP,EAAAA,QAAQ,CAACQ,SAAT,GAAqB,UAASC,MAAT,EAAiB;AACpCT,IAAAA,QAAQ,CAACU,OAAT,CAAiBD,MAAM,CAACE,OAAxB;AACJ;AACG,GAHD;;AAIA,SAAOX,QAAP;AACD,CAXD",
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models",
      "sourcesContent": [
        "'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const Category = sequelize.define('Category', {\n    name: DataTypes.STRING,\n    userId: DataTypes.INTEGER,\n    status: DataTypes.BOOLEAN\n  }, {});\n  Category.associate = function(models) {\n    Category.hasMany(models.Article)\n/*     Category.Articles= Order.hasMany(models.Article) */\n  };\n  return Category;\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1581520441401
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"filename\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\\\\models\\\\client.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models\\client.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models\\client.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models\\client.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models",
        "sourceFileName": "client.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nmodule.exports = function (sequelize, DataTypes) {\n  var Client = sequelize.define('Client', {\n    internal_code: DataTypes.STRING,\n    name: DataTypes.STRING,\n    userId: DataTypes.INTEGER,\n    obs: DataTypes.STRING,\n    status: DataTypes.BOOLEAN\n  }, {});\n\n  Client.associate = function (models) {\n    Client.hasMany(models.Order);\n    Client.hasMany(models.Transfer);\n  };\n\n  return Client;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNsaWVudC5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwic2VxdWVsaXplIiwiRGF0YVR5cGVzIiwiQ2xpZW50IiwiZGVmaW5lIiwiaW50ZXJuYWxfY29kZSIsIlNUUklORyIsIm5hbWUiLCJ1c2VySWQiLCJJTlRFR0VSIiwib2JzIiwic3RhdHVzIiwiQk9PTEVBTiIsImFzc29jaWF0ZSIsIm1vZGVscyIsImhhc01hbnkiLCJPcmRlciIsIlRyYW5zZmVyIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFDQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUNDLFNBQUQsRUFBWUMsU0FBWixFQUEwQjtBQUN6QyxNQUFNQyxNQUFNLEdBQUdGLFNBQVMsQ0FBQ0csTUFBVixDQUFpQixRQUFqQixFQUEyQjtBQUN4Q0MsSUFBQUEsYUFBYSxFQUFFSCxTQUFTLENBQUNJLE1BRGU7QUFFeENDLElBQUFBLElBQUksRUFBRUwsU0FBUyxDQUFDSSxNQUZ3QjtBQUd4Q0UsSUFBQUEsTUFBTSxFQUFFTixTQUFTLENBQUNPLE9BSHNCO0FBSXhDQyxJQUFBQSxHQUFHLEVBQUVSLFNBQVMsQ0FBQ0ksTUFKeUI7QUFLeENLLElBQUFBLE1BQU0sRUFBRVQsU0FBUyxDQUFDVTtBQUxzQixHQUEzQixFQU9aLEVBUFksQ0FBZjs7QUFRQVQsRUFBQUEsTUFBTSxDQUFDVSxTQUFQLEdBQW1CLFVBQVNDLE1BQVQsRUFBaUI7QUFDbENYLElBQUFBLE1BQU0sQ0FBQ1ksT0FBUCxDQUFlRCxNQUFNLENBQUNFLEtBQXRCO0FBQ0FiLElBQUFBLE1BQU0sQ0FBQ1ksT0FBUCxDQUFlRCxNQUFNLENBQUNHLFFBQXRCO0FBQ0QsR0FIRDs7QUFJQSxTQUFPZCxNQUFQO0FBQ0QsQ0FkRCIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGFzdXNcXERvY3VtZW50c1xcS3Jvd1xcQXp1bHVsYSAtIEJveWthXFxVc3RvY2sgYXBpXFxzcmNcXG1vZGVscyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0Jztcbm1vZHVsZS5leHBvcnRzID0gKHNlcXVlbGl6ZSwgRGF0YVR5cGVzKSA9PiB7XG4gIGNvbnN0IENsaWVudCA9IHNlcXVlbGl6ZS5kZWZpbmUoJ0NsaWVudCcsIHtcbiAgICBpbnRlcm5hbF9jb2RlOiBEYXRhVHlwZXMuU1RSSU5HLFxuICAgIG5hbWU6IERhdGFUeXBlcy5TVFJJTkcsXG4gICAgdXNlcklkOiBEYXRhVHlwZXMuSU5URUdFUixcbiAgICBvYnM6IERhdGFUeXBlcy5TVFJJTkcsXG4gICAgc3RhdHVzOiBEYXRhVHlwZXMuQk9PTEVBTlxuICAgIFxuICB9LCB7fSk7XG4gIENsaWVudC5hc3NvY2lhdGUgPSBmdW5jdGlvbihtb2RlbHMpIHtcbiAgICBDbGllbnQuaGFzTWFueShtb2RlbHMuT3JkZXIpXG4gICAgQ2xpZW50Lmhhc01hbnkobW9kZWxzLlRyYW5zZmVyKVxuICB9O1xuICByZXR1cm4gQ2xpZW50O1xufTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "client.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "Client",
        "define",
        "internal_code",
        "STRING",
        "name",
        "userId",
        "INTEGER",
        "obs",
        "status",
        "BOOLEAN",
        "associate",
        "models",
        "hasMany",
        "Order",
        "Transfer"
      ],
      "mappings": "AAAA;;AACAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AACzC,MAAMC,MAAM,GAAGF,SAAS,CAACG,MAAV,CAAiB,QAAjB,EAA2B;AACxCC,IAAAA,aAAa,EAAEH,SAAS,CAACI,MADe;AAExCC,IAAAA,IAAI,EAAEL,SAAS,CAACI,MAFwB;AAGxCE,IAAAA,MAAM,EAAEN,SAAS,CAACO,OAHsB;AAIxCC,IAAAA,GAAG,EAAER,SAAS,CAACI,MAJyB;AAKxCK,IAAAA,MAAM,EAAET,SAAS,CAACU;AALsB,GAA3B,EAOZ,EAPY,CAAf;;AAQAT,EAAAA,MAAM,CAACU,SAAP,GAAmB,UAASC,MAAT,EAAiB;AAClCX,IAAAA,MAAM,CAACY,OAAP,CAAeD,MAAM,CAACE,KAAtB;AACAb,IAAAA,MAAM,CAACY,OAAP,CAAeD,MAAM,CAACG,QAAtB;AACD,GAHD;;AAIA,SAAOd,MAAP;AACD,CAdD",
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models",
      "sourcesContent": [
        "'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const Client = sequelize.define('Client', {\n    internal_code: DataTypes.STRING,\n    name: DataTypes.STRING,\n    userId: DataTypes.INTEGER,\n    obs: DataTypes.STRING,\n    status: DataTypes.BOOLEAN\n    \n  }, {});\n  Client.associate = function(models) {\n    Client.hasMany(models.Order)\n    Client.hasMany(models.Transfer)\n  };\n  return Client;\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1581237203678
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"filename\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\\\\models\\\\input.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models\\input.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models\\input.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models\\input.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models",
        "sourceFileName": "input.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nmodule.exports = function (sequelize, DataTypes) {\n  var Input = sequelize.define('Input', {\n    internal_code: DataTypes.STRING,\n    internal_code_order: DataTypes.STRING,\n    providerId: DataTypes.INTEGER,\n    orderId: DataTypes.INTEGER,\n    clientId: DataTypes.INTEGER,\n    userId: DataTypes.INTEGER,\n    locationId: DataTypes.INTEGER,\n    purchase: DataTypes.DECIMAL,\n    iva: DataTypes.DECIMAL,\n    discount: DataTypes.DECIMAL,\n    total: DataTypes.DECIMAL,\n    input_date: DataTypes.DATE,\n    articleId: DataTypes.INTEGER,\n    quantity_input: DataTypes.INTEGER,\n    status: DataTypes.BOOLEAN\n  }, {});\n\n  Input.associate = function (models) {\n    Input.belongsTo(models.Provider);\n    Input.belongsTo(models.Location);\n    Input.belongsTo(models.Article);\n    Input.belongsTo(models.Order);\n    Input.belongsTo(models.Client);\n  };\n\n  return Input;\n  total;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImlucHV0LmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJzZXF1ZWxpemUiLCJEYXRhVHlwZXMiLCJJbnB1dCIsImRlZmluZSIsImludGVybmFsX2NvZGUiLCJTVFJJTkciLCJpbnRlcm5hbF9jb2RlX29yZGVyIiwicHJvdmlkZXJJZCIsIklOVEVHRVIiLCJvcmRlcklkIiwiY2xpZW50SWQiLCJ1c2VySWQiLCJsb2NhdGlvbklkIiwicHVyY2hhc2UiLCJERUNJTUFMIiwiaXZhIiwiZGlzY291bnQiLCJ0b3RhbCIsImlucHV0X2RhdGUiLCJEQVRFIiwiYXJ0aWNsZUlkIiwicXVhbnRpdHlfaW5wdXQiLCJzdGF0dXMiLCJCT09MRUFOIiwiYXNzb2NpYXRlIiwibW9kZWxzIiwiYmVsb25nc1RvIiwiUHJvdmlkZXIiLCJMb2NhdGlvbiIsIkFydGljbGUiLCJPcmRlciIsIkNsaWVudCJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBQ0FBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixVQUFDQyxTQUFELEVBQVlDLFNBQVosRUFBMEI7QUFDekMsTUFBTUMsS0FBSyxHQUFHRixTQUFTLENBQUNHLE1BQVYsQ0FBaUIsT0FBakIsRUFBMEI7QUFDdENDLElBQUFBLGFBQWEsRUFBRUgsU0FBUyxDQUFDSSxNQURhO0FBRXRDQyxJQUFBQSxtQkFBbUIsRUFBRUwsU0FBUyxDQUFDSSxNQUZPO0FBR3RDRSxJQUFBQSxVQUFVLEVBQUVOLFNBQVMsQ0FBQ08sT0FIZ0I7QUFJdENDLElBQUFBLE9BQU8sRUFBRVIsU0FBUyxDQUFDTyxPQUptQjtBQUt0Q0UsSUFBQUEsUUFBUSxFQUFFVCxTQUFTLENBQUNPLE9BTGtCO0FBTXRDRyxJQUFBQSxNQUFNLEVBQUVWLFNBQVMsQ0FBQ08sT0FOb0I7QUFPdENJLElBQUFBLFVBQVUsRUFBRVgsU0FBUyxDQUFDTyxPQVBnQjtBQVF0Q0ssSUFBQUEsUUFBUSxFQUFFWixTQUFTLENBQUNhLE9BUmtCO0FBU3RDQyxJQUFBQSxHQUFHLEVBQUVkLFNBQVMsQ0FBQ2EsT0FUdUI7QUFVdENFLElBQUFBLFFBQVEsRUFBRWYsU0FBUyxDQUFDYSxPQVZrQjtBQVd0Q0csSUFBQUEsS0FBSyxFQUFFaEIsU0FBUyxDQUFDYSxPQVhxQjtBQVl0Q0ksSUFBQUEsVUFBVSxFQUFFakIsU0FBUyxDQUFDa0IsSUFaZ0I7QUFhdENDLElBQUFBLFNBQVMsRUFBRW5CLFNBQVMsQ0FBQ08sT0FiaUI7QUFjdENhLElBQUFBLGNBQWMsRUFBRXBCLFNBQVMsQ0FBQ08sT0FkWTtBQWV0Q2MsSUFBQUEsTUFBTSxFQUFFckIsU0FBUyxDQUFDc0I7QUFmb0IsR0FBMUIsRUFnQlgsRUFoQlcsQ0FBZDs7QUFpQkFyQixFQUFBQSxLQUFLLENBQUNzQixTQUFOLEdBQWtCLFVBQVNDLE1BQVQsRUFBaUI7QUFDakN2QixJQUFBQSxLQUFLLENBQUN3QixTQUFOLENBQWdCRCxNQUFNLENBQUNFLFFBQXZCO0FBQ0F6QixJQUFBQSxLQUFLLENBQUN3QixTQUFOLENBQWdCRCxNQUFNLENBQUNHLFFBQXZCO0FBQ0ExQixJQUFBQSxLQUFLLENBQUN3QixTQUFOLENBQWdCRCxNQUFNLENBQUNJLE9BQXZCO0FBQ0EzQixJQUFBQSxLQUFLLENBQUN3QixTQUFOLENBQWdCRCxNQUFNLENBQUNLLEtBQXZCO0FBQ0E1QixJQUFBQSxLQUFLLENBQUN3QixTQUFOLENBQWdCRCxNQUFNLENBQUNNLE1BQXZCO0FBRUQsR0FQRDs7QUFRQSxTQUFPN0IsS0FBUDtBQUFhZSxFQUFBQSxLQUFLO0FBQ25CLENBM0JEIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcYXN1c1xcRG9jdW1lbnRzXFxLcm93XFxBenVsdWxhIC0gQm95a2FcXFVzdG9jayBhcGlcXHNyY1xcbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xubW9kdWxlLmV4cG9ydHMgPSAoc2VxdWVsaXplLCBEYXRhVHlwZXMpID0+IHtcbiAgY29uc3QgSW5wdXQgPSBzZXF1ZWxpemUuZGVmaW5lKCdJbnB1dCcsIHtcbiAgICBpbnRlcm5hbF9jb2RlOiBEYXRhVHlwZXMuU1RSSU5HLFxuICAgIGludGVybmFsX2NvZGVfb3JkZXI6IERhdGFUeXBlcy5TVFJJTkcsXG4gICAgcHJvdmlkZXJJZDogRGF0YVR5cGVzLklOVEVHRVIsXG4gICAgb3JkZXJJZDogRGF0YVR5cGVzLklOVEVHRVIsXG4gICAgY2xpZW50SWQ6IERhdGFUeXBlcy5JTlRFR0VSLFxuICAgIHVzZXJJZDogRGF0YVR5cGVzLklOVEVHRVIsXG4gICAgbG9jYXRpb25JZDogRGF0YVR5cGVzLklOVEVHRVIsXG4gICAgcHVyY2hhc2U6IERhdGFUeXBlcy5ERUNJTUFMLFxuICAgIGl2YTogRGF0YVR5cGVzLkRFQ0lNQUwsXG4gICAgZGlzY291bnQ6IERhdGFUeXBlcy5ERUNJTUFMLFxuICAgIHRvdGFsOiBEYXRhVHlwZXMuREVDSU1BTCxcbiAgICBpbnB1dF9kYXRlOiBEYXRhVHlwZXMuREFURSxcbiAgICBhcnRpY2xlSWQ6IERhdGFUeXBlcy5JTlRFR0VSLFxuICAgIHF1YW50aXR5X2lucHV0OiBEYXRhVHlwZXMuSU5URUdFUixcbiAgICBzdGF0dXM6IERhdGFUeXBlcy5CT09MRUFOXG4gIH0sIHt9KTtcbiAgSW5wdXQuYXNzb2NpYXRlID0gZnVuY3Rpb24obW9kZWxzKSB7XG4gICAgSW5wdXQuYmVsb25nc1RvKG1vZGVscy5Qcm92aWRlcilcbiAgICBJbnB1dC5iZWxvbmdzVG8obW9kZWxzLkxvY2F0aW9uKVxuICAgIElucHV0LmJlbG9uZ3NUbyhtb2RlbHMuQXJ0aWNsZSlcbiAgICBJbnB1dC5iZWxvbmdzVG8obW9kZWxzLk9yZGVyKVxuICAgIElucHV0LmJlbG9uZ3NUbyhtb2RlbHMuQ2xpZW50KVxuXG4gIH07XG4gIHJldHVybiBJbnB1dDt0b3RhbFxufTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "input.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "Input",
        "define",
        "internal_code",
        "STRING",
        "internal_code_order",
        "providerId",
        "INTEGER",
        "orderId",
        "clientId",
        "userId",
        "locationId",
        "purchase",
        "DECIMAL",
        "iva",
        "discount",
        "total",
        "input_date",
        "DATE",
        "articleId",
        "quantity_input",
        "status",
        "BOOLEAN",
        "associate",
        "models",
        "belongsTo",
        "Provider",
        "Location",
        "Article",
        "Order",
        "Client"
      ],
      "mappings": "AAAA;;AACAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AACzC,MAAMC,KAAK,GAAGF,SAAS,CAACG,MAAV,CAAiB,OAAjB,EAA0B;AACtCC,IAAAA,aAAa,EAAEH,SAAS,CAACI,MADa;AAEtCC,IAAAA,mBAAmB,EAAEL,SAAS,CAACI,MAFO;AAGtCE,IAAAA,UAAU,EAAEN,SAAS,CAACO,OAHgB;AAItCC,IAAAA,OAAO,EAAER,SAAS,CAACO,OAJmB;AAKtCE,IAAAA,QAAQ,EAAET,SAAS,CAACO,OALkB;AAMtCG,IAAAA,MAAM,EAAEV,SAAS,CAACO,OANoB;AAOtCI,IAAAA,UAAU,EAAEX,SAAS,CAACO,OAPgB;AAQtCK,IAAAA,QAAQ,EAAEZ,SAAS,CAACa,OARkB;AAStCC,IAAAA,GAAG,EAAEd,SAAS,CAACa,OATuB;AAUtCE,IAAAA,QAAQ,EAAEf,SAAS,CAACa,OAVkB;AAWtCG,IAAAA,KAAK,EAAEhB,SAAS,CAACa,OAXqB;AAYtCI,IAAAA,UAAU,EAAEjB,SAAS,CAACkB,IAZgB;AAatCC,IAAAA,SAAS,EAAEnB,SAAS,CAACO,OAbiB;AActCa,IAAAA,cAAc,EAAEpB,SAAS,CAACO,OAdY;AAetCc,IAAAA,MAAM,EAAErB,SAAS,CAACsB;AAfoB,GAA1B,EAgBX,EAhBW,CAAd;;AAiBArB,EAAAA,KAAK,CAACsB,SAAN,GAAkB,UAASC,MAAT,EAAiB;AACjCvB,IAAAA,KAAK,CAACwB,SAAN,CAAgBD,MAAM,CAACE,QAAvB;AACAzB,IAAAA,KAAK,CAACwB,SAAN,CAAgBD,MAAM,CAACG,QAAvB;AACA1B,IAAAA,KAAK,CAACwB,SAAN,CAAgBD,MAAM,CAACI,OAAvB;AACA3B,IAAAA,KAAK,CAACwB,SAAN,CAAgBD,MAAM,CAACK,KAAvB;AACA5B,IAAAA,KAAK,CAACwB,SAAN,CAAgBD,MAAM,CAACM,MAAvB;AAED,GAPD;;AAQA,SAAO7B,KAAP;AAAae,EAAAA,KAAK;AACnB,CA3BD",
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models",
      "sourcesContent": [
        "'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const Input = sequelize.define('Input', {\n    internal_code: DataTypes.STRING,\n    internal_code_order: DataTypes.STRING,\n    providerId: DataTypes.INTEGER,\n    orderId: DataTypes.INTEGER,\n    clientId: DataTypes.INTEGER,\n    userId: DataTypes.INTEGER,\n    locationId: DataTypes.INTEGER,\n    purchase: DataTypes.DECIMAL,\n    iva: DataTypes.DECIMAL,\n    discount: DataTypes.DECIMAL,\n    total: DataTypes.DECIMAL,\n    input_date: DataTypes.DATE,\n    articleId: DataTypes.INTEGER,\n    quantity_input: DataTypes.INTEGER,\n    status: DataTypes.BOOLEAN\n  }, {});\n  Input.associate = function(models) {\n    Input.belongsTo(models.Provider)\n    Input.belongsTo(models.Location)\n    Input.belongsTo(models.Article)\n    Input.belongsTo(models.Order)\n    Input.belongsTo(models.Client)\n\n  };\n  return Input;total\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1581418401773
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"filename\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\\\\models\\\\location.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models\\location.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models\\location.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models\\location.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models",
        "sourceFileName": "location.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nmodule.exports = function (sequelize, DataTypes) {\n  var Location = sequelize.define('Location', {\n    description: DataTypes.STRING,\n    corredor: DataTypes.STRING,\n    pratileira: DataTypes.STRING,\n    userId: DataTypes.INTEGER,\n    obs: DataTypes.STRING,\n    status: DataTypes.BOOLEAN\n  }, {});\n\n  Location.associate = function (models) {\n    Location.hasMany(models.Input);\n  };\n\n  return Location;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvY2F0aW9uLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJzZXF1ZWxpemUiLCJEYXRhVHlwZXMiLCJMb2NhdGlvbiIsImRlZmluZSIsImRlc2NyaXB0aW9uIiwiU1RSSU5HIiwiY29ycmVkb3IiLCJwcmF0aWxlaXJhIiwidXNlcklkIiwiSU5URUdFUiIsIm9icyIsInN0YXR1cyIsIkJPT0xFQU4iLCJhc3NvY2lhdGUiLCJtb2RlbHMiLCJoYXNNYW55IiwiSW5wdXQiXSwibWFwcGluZ3MiOiJBQUFBOztBQUNBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUIsVUFBQ0MsU0FBRCxFQUFZQyxTQUFaLEVBQTBCO0FBQ3pDLE1BQU1DLFFBQVEsR0FBR0YsU0FBUyxDQUFDRyxNQUFWLENBQWlCLFVBQWpCLEVBQTZCO0FBQzVDQyxJQUFBQSxXQUFXLEVBQUVILFNBQVMsQ0FBQ0ksTUFEcUI7QUFFNUNDLElBQUFBLFFBQVEsRUFBRUwsU0FBUyxDQUFDSSxNQUZ3QjtBQUc1Q0UsSUFBQUEsVUFBVSxFQUFFTixTQUFTLENBQUNJLE1BSHNCO0FBSTVDRyxJQUFBQSxNQUFNLEVBQUVQLFNBQVMsQ0FBQ1EsT0FKMEI7QUFLNUNDLElBQUFBLEdBQUcsRUFBRVQsU0FBUyxDQUFDSSxNQUw2QjtBQU01Q00sSUFBQUEsTUFBTSxFQUFFVixTQUFTLENBQUNXO0FBTjBCLEdBQTdCLEVBT2QsRUFQYyxDQUFqQjs7QUFRQVYsRUFBQUEsUUFBUSxDQUFDVyxTQUFULEdBQXFCLFVBQVNDLE1BQVQsRUFBaUI7QUFDcENaLElBQUFBLFFBQVEsQ0FBQ2EsT0FBVCxDQUFpQkQsTUFBTSxDQUFDRSxLQUF4QjtBQUNELEdBRkQ7O0FBR0EsU0FBT2QsUUFBUDtBQUNELENBYkQiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxhc3VzXFxEb2N1bWVudHNcXEtyb3dcXEF6dWx1bGEgLSBCb3lrYVxcVXN0b2NrIGFwaVxcc3JjXFxtb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5tb2R1bGUuZXhwb3J0cyA9IChzZXF1ZWxpemUsIERhdGFUeXBlcykgPT4ge1xuICBjb25zdCBMb2NhdGlvbiA9IHNlcXVlbGl6ZS5kZWZpbmUoJ0xvY2F0aW9uJywge1xuICAgIGRlc2NyaXB0aW9uOiBEYXRhVHlwZXMuU1RSSU5HLFxuICAgIGNvcnJlZG9yOiBEYXRhVHlwZXMuU1RSSU5HLFxuICAgIHByYXRpbGVpcmE6IERhdGFUeXBlcy5TVFJJTkcsXG4gICAgdXNlcklkOiBEYXRhVHlwZXMuSU5URUdFUixcbiAgICBvYnM6IERhdGFUeXBlcy5TVFJJTkcsXG4gICAgc3RhdHVzOiBEYXRhVHlwZXMuQk9PTEVBTlxuICB9LCB7fSk7XG4gIExvY2F0aW9uLmFzc29jaWF0ZSA9IGZ1bmN0aW9uKG1vZGVscykge1xuICAgIExvY2F0aW9uLmhhc01hbnkobW9kZWxzLklucHV0KVxuICB9O1xuICByZXR1cm4gTG9jYXRpb247XG59OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "location.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "Location",
        "define",
        "description",
        "STRING",
        "corredor",
        "pratileira",
        "userId",
        "INTEGER",
        "obs",
        "status",
        "BOOLEAN",
        "associate",
        "models",
        "hasMany",
        "Input"
      ],
      "mappings": "AAAA;;AACAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AACzC,MAAMC,QAAQ,GAAGF,SAAS,CAACG,MAAV,CAAiB,UAAjB,EAA6B;AAC5CC,IAAAA,WAAW,EAAEH,SAAS,CAACI,MADqB;AAE5CC,IAAAA,QAAQ,EAAEL,SAAS,CAACI,MAFwB;AAG5CE,IAAAA,UAAU,EAAEN,SAAS,CAACI,MAHsB;AAI5CG,IAAAA,MAAM,EAAEP,SAAS,CAACQ,OAJ0B;AAK5CC,IAAAA,GAAG,EAAET,SAAS,CAACI,MAL6B;AAM5CM,IAAAA,MAAM,EAAEV,SAAS,CAACW;AAN0B,GAA7B,EAOd,EAPc,CAAjB;;AAQAV,EAAAA,QAAQ,CAACW,SAAT,GAAqB,UAASC,MAAT,EAAiB;AACpCZ,IAAAA,QAAQ,CAACa,OAAT,CAAiBD,MAAM,CAACE,KAAxB;AACD,GAFD;;AAGA,SAAOd,QAAP;AACD,CAbD",
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models",
      "sourcesContent": [
        "'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const Location = sequelize.define('Location', {\n    description: DataTypes.STRING,\n    corredor: DataTypes.STRING,\n    pratileira: DataTypes.STRING,\n    userId: DataTypes.INTEGER,\n    obs: DataTypes.STRING,\n    status: DataTypes.BOOLEAN\n  }, {});\n  Location.associate = function(models) {\n    Location.hasMany(models.Input)\n  };\n  return Location;\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1581237213862
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"filename\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\\\\models\\\\operation.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models\\operation.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models\\operation.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models\\operation.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models",
        "sourceFileName": "operation.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nmodule.exports = function (sequelize, DataTypes) {\n  var Operation = sequelize.define('Operation', {\n    name: DataTypes.STRING,\n    status: DataTypes.BOOLEAN,\n    internal_code: DataTypes.STRING,\n    userId: DataTypes.INTEGER,\n    obs: DataTypes.STRING\n  }, {});\n\n  Operation.associate = function (models) {\n    Operation.hasMany(models.Order);\n  };\n\n  return Operation;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9wZXJhdGlvbi5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwic2VxdWVsaXplIiwiRGF0YVR5cGVzIiwiT3BlcmF0aW9uIiwiZGVmaW5lIiwibmFtZSIsIlNUUklORyIsInN0YXR1cyIsIkJPT0xFQU4iLCJpbnRlcm5hbF9jb2RlIiwidXNlcklkIiwiSU5URUdFUiIsIm9icyIsImFzc29jaWF0ZSIsIm1vZGVscyIsImhhc01hbnkiLCJPcmRlciJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBQ0FBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixVQUFDQyxTQUFELEVBQVlDLFNBQVosRUFBMEI7QUFDekMsTUFBTUMsU0FBUyxHQUFHRixTQUFTLENBQUNHLE1BQVYsQ0FBaUIsV0FBakIsRUFBOEI7QUFDOUNDLElBQUFBLElBQUksRUFBRUgsU0FBUyxDQUFDSSxNQUQ4QjtBQUU5Q0MsSUFBQUEsTUFBTSxFQUFFTCxTQUFTLENBQUNNLE9BRjRCO0FBRzlDQyxJQUFBQSxhQUFhLEVBQUVQLFNBQVMsQ0FBQ0ksTUFIcUI7QUFJOUNJLElBQUFBLE1BQU0sRUFBRVIsU0FBUyxDQUFDUyxPQUo0QjtBQUs5Q0MsSUFBQUEsR0FBRyxFQUFFVixTQUFTLENBQUNJO0FBTCtCLEdBQTlCLEVBTWYsRUFOZSxDQUFsQjs7QUFPQUgsRUFBQUEsU0FBUyxDQUFDVSxTQUFWLEdBQXNCLFVBQVNDLE1BQVQsRUFBaUI7QUFDckNYLElBQUFBLFNBQVMsQ0FBQ1ksT0FBVixDQUFrQkQsTUFBTSxDQUFDRSxLQUF6QjtBQUNELEdBRkQ7O0FBR0EsU0FBT2IsU0FBUDtBQUNELENBWkQiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxhc3VzXFxEb2N1bWVudHNcXEtyb3dcXEF6dWx1bGEgLSBCb3lrYVxcVXN0b2NrIGFwaVxcc3JjXFxtb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5tb2R1bGUuZXhwb3J0cyA9IChzZXF1ZWxpemUsIERhdGFUeXBlcykgPT4ge1xuICBjb25zdCBPcGVyYXRpb24gPSBzZXF1ZWxpemUuZGVmaW5lKCdPcGVyYXRpb24nLCB7XG4gICAgbmFtZTogRGF0YVR5cGVzLlNUUklORyxcbiAgICBzdGF0dXM6IERhdGFUeXBlcy5CT09MRUFOLFxuICAgIGludGVybmFsX2NvZGU6IERhdGFUeXBlcy5TVFJJTkcsXG4gICAgdXNlcklkOiBEYXRhVHlwZXMuSU5URUdFUixcbiAgICBvYnM6IERhdGFUeXBlcy5TVFJJTkcsXG4gIH0sIHt9KTtcbiAgT3BlcmF0aW9uLmFzc29jaWF0ZSA9IGZ1bmN0aW9uKG1vZGVscykge1xuICAgIE9wZXJhdGlvbi5oYXNNYW55KG1vZGVscy5PcmRlcilcbiAgfTtcbiAgcmV0dXJuIE9wZXJhdGlvbjtcbn07Il19",
    "map": {
      "version": 3,
      "sources": [
        "operation.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "Operation",
        "define",
        "name",
        "STRING",
        "status",
        "BOOLEAN",
        "internal_code",
        "userId",
        "INTEGER",
        "obs",
        "associate",
        "models",
        "hasMany",
        "Order"
      ],
      "mappings": "AAAA;;AACAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AACzC,MAAMC,SAAS,GAAGF,SAAS,CAACG,MAAV,CAAiB,WAAjB,EAA8B;AAC9CC,IAAAA,IAAI,EAAEH,SAAS,CAACI,MAD8B;AAE9CC,IAAAA,MAAM,EAAEL,SAAS,CAACM,OAF4B;AAG9CC,IAAAA,aAAa,EAAEP,SAAS,CAACI,MAHqB;AAI9CI,IAAAA,MAAM,EAAER,SAAS,CAACS,OAJ4B;AAK9CC,IAAAA,GAAG,EAAEV,SAAS,CAACI;AAL+B,GAA9B,EAMf,EANe,CAAlB;;AAOAH,EAAAA,SAAS,CAACU,SAAV,GAAsB,UAASC,MAAT,EAAiB;AACrCX,IAAAA,SAAS,CAACY,OAAV,CAAkBD,MAAM,CAACE,KAAzB;AACD,GAFD;;AAGA,SAAOb,SAAP;AACD,CAZD",
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models",
      "sourcesContent": [
        "'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const Operation = sequelize.define('Operation', {\n    name: DataTypes.STRING,\n    status: DataTypes.BOOLEAN,\n    internal_code: DataTypes.STRING,\n    userId: DataTypes.INTEGER,\n    obs: DataTypes.STRING,\n  }, {});\n  Operation.associate = function(models) {\n    Operation.hasMany(models.Order)\n  };\n  return Operation;\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1581691157982
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"filename\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\\\\models\\\\order.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models\\order.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models\\order.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models\\order.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models",
        "sourceFileName": "order.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nmodule.exports = function (sequelize, DataTypes) {\n  var Order = sequelize.define('Order', {\n    internal_code: DataTypes.STRING,\n    internal_code_order: DataTypes.STRING,\n    clientId: DataTypes.INTEGER,\n    quantity_input: DataTypes.INTEGER,\n    operationId: DataTypes.INTEGER,\n    materialId: DataTypes.INTEGER,\n    userId: DataTypes.INTEGER,\n    status: DataTypes.BOOLEAN\n  }, {});\n\n  Order.associate = function (models) {\n    Order.belongsTo(models.User);\n    Order.belongsTo(models.Operation);\n    Order.belongsTo(models.Material);\n    Order.belongsTo(models.Client);\n    Order.OrderItems = Order.hasMany(models.OrderItem);\n    Order.hasMany(models.Transfer);\n    Order.hasMany(models.Input);\n  };\n\n  return Order;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9yZGVyLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJzZXF1ZWxpemUiLCJEYXRhVHlwZXMiLCJPcmRlciIsImRlZmluZSIsImludGVybmFsX2NvZGUiLCJTVFJJTkciLCJpbnRlcm5hbF9jb2RlX29yZGVyIiwiY2xpZW50SWQiLCJJTlRFR0VSIiwicXVhbnRpdHlfaW5wdXQiLCJvcGVyYXRpb25JZCIsIm1hdGVyaWFsSWQiLCJ1c2VySWQiLCJzdGF0dXMiLCJCT09MRUFOIiwiYXNzb2NpYXRlIiwibW9kZWxzIiwiYmVsb25nc1RvIiwiVXNlciIsIk9wZXJhdGlvbiIsIk1hdGVyaWFsIiwiQ2xpZW50IiwiT3JkZXJJdGVtcyIsImhhc01hbnkiLCJPcmRlckl0ZW0iLCJUcmFuc2ZlciIsIklucHV0Il0sIm1hcHBpbmdzIjoiQUFBQTs7QUFDQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUNDLFNBQUQsRUFBWUMsU0FBWixFQUEwQjtBQUN6QyxNQUFNQyxLQUFLLEdBQUdGLFNBQVMsQ0FBQ0csTUFBVixDQUFpQixPQUFqQixFQUEwQjtBQUN0Q0MsSUFBQUEsYUFBYSxFQUFFSCxTQUFTLENBQUNJLE1BRGE7QUFFdENDLElBQUFBLG1CQUFtQixFQUFFTCxTQUFTLENBQUNJLE1BRk87QUFHdENFLElBQUFBLFFBQVEsRUFBRU4sU0FBUyxDQUFDTyxPQUhrQjtBQUl0Q0MsSUFBQUEsY0FBYyxFQUFFUixTQUFTLENBQUNPLE9BSlk7QUFLdENFLElBQUFBLFdBQVcsRUFBRVQsU0FBUyxDQUFDTyxPQUxlO0FBTXRDRyxJQUFBQSxVQUFVLEVBQUVWLFNBQVMsQ0FBQ08sT0FOZ0I7QUFPdENJLElBQUFBLE1BQU0sRUFBRVgsU0FBUyxDQUFDTyxPQVBvQjtBQVF0Q0ssSUFBQUEsTUFBTSxFQUFFWixTQUFTLENBQUNhO0FBUm9CLEdBQTFCLEVBU1gsRUFUVyxDQUFkOztBQVVBWixFQUFBQSxLQUFLLENBQUNhLFNBQU4sR0FBa0IsVUFBU0MsTUFBVCxFQUFpQjtBQUNqQ2QsSUFBQUEsS0FBSyxDQUFDZSxTQUFOLENBQWdCRCxNQUFNLENBQUNFLElBQXZCO0FBQ0FoQixJQUFBQSxLQUFLLENBQUNlLFNBQU4sQ0FBZ0JELE1BQU0sQ0FBQ0csU0FBdkI7QUFDQWpCLElBQUFBLEtBQUssQ0FBQ2UsU0FBTixDQUFnQkQsTUFBTSxDQUFDSSxRQUF2QjtBQUNBbEIsSUFBQUEsS0FBSyxDQUFDZSxTQUFOLENBQWdCRCxNQUFNLENBQUNLLE1BQXZCO0FBQ0FuQixJQUFBQSxLQUFLLENBQUNvQixVQUFOLEdBQWtCcEIsS0FBSyxDQUFDcUIsT0FBTixDQUFjUCxNQUFNLENBQUNRLFNBQXJCLENBQWxCO0FBQ0F0QixJQUFBQSxLQUFLLENBQUNxQixPQUFOLENBQWNQLE1BQU0sQ0FBQ1MsUUFBckI7QUFDQXZCLElBQUFBLEtBQUssQ0FBQ3FCLE9BQU4sQ0FBY1AsTUFBTSxDQUFDVSxLQUFyQjtBQUNELEdBUkQ7O0FBU0EsU0FBT3hCLEtBQVA7QUFDRCxDQXJCRCIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGFzdXNcXERvY3VtZW50c1xcS3Jvd1xcQXp1bHVsYSAtIEJveWthXFxVc3RvY2sgYXBpXFxzcmNcXG1vZGVscyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0Jztcbm1vZHVsZS5leHBvcnRzID0gKHNlcXVlbGl6ZSwgRGF0YVR5cGVzKSA9PiB7XG4gIGNvbnN0IE9yZGVyID0gc2VxdWVsaXplLmRlZmluZSgnT3JkZXInLCB7XG4gICAgaW50ZXJuYWxfY29kZTogRGF0YVR5cGVzLlNUUklORyxcbiAgICBpbnRlcm5hbF9jb2RlX29yZGVyOiBEYXRhVHlwZXMuU1RSSU5HLFxuICAgIGNsaWVudElkOiBEYXRhVHlwZXMuSU5URUdFUixcbiAgICBxdWFudGl0eV9pbnB1dDogRGF0YVR5cGVzLklOVEVHRVIsXG4gICAgb3BlcmF0aW9uSWQ6IERhdGFUeXBlcy5JTlRFR0VSLFxuICAgIG1hdGVyaWFsSWQ6IERhdGFUeXBlcy5JTlRFR0VSLFxuICAgIHVzZXJJZDogRGF0YVR5cGVzLklOVEVHRVIsXG4gICAgc3RhdHVzOiBEYXRhVHlwZXMuQk9PTEVBTlxuICB9LCB7fSk7XG4gIE9yZGVyLmFzc29jaWF0ZSA9IGZ1bmN0aW9uKG1vZGVscykge1xuICAgIE9yZGVyLmJlbG9uZ3NUbyhtb2RlbHMuVXNlcilcbiAgICBPcmRlci5iZWxvbmdzVG8obW9kZWxzLk9wZXJhdGlvbilcbiAgICBPcmRlci5iZWxvbmdzVG8obW9kZWxzLk1hdGVyaWFsKVxuICAgIE9yZGVyLmJlbG9uZ3NUbyhtb2RlbHMuQ2xpZW50KVxuICAgIE9yZGVyLk9yZGVySXRlbXM9IE9yZGVyLmhhc01hbnkobW9kZWxzLk9yZGVySXRlbSlcbiAgICBPcmRlci5oYXNNYW55KG1vZGVscy5UcmFuc2ZlcilcbiAgICBPcmRlci5oYXNNYW55KG1vZGVscy5JbnB1dClcbiAgfTtcbiAgcmV0dXJuIE9yZGVyO1xufTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "order.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "Order",
        "define",
        "internal_code",
        "STRING",
        "internal_code_order",
        "clientId",
        "INTEGER",
        "quantity_input",
        "operationId",
        "materialId",
        "userId",
        "status",
        "BOOLEAN",
        "associate",
        "models",
        "belongsTo",
        "User",
        "Operation",
        "Material",
        "Client",
        "OrderItems",
        "hasMany",
        "OrderItem",
        "Transfer",
        "Input"
      ],
      "mappings": "AAAA;;AACAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AACzC,MAAMC,KAAK,GAAGF,SAAS,CAACG,MAAV,CAAiB,OAAjB,EAA0B;AACtCC,IAAAA,aAAa,EAAEH,SAAS,CAACI,MADa;AAEtCC,IAAAA,mBAAmB,EAAEL,SAAS,CAACI,MAFO;AAGtCE,IAAAA,QAAQ,EAAEN,SAAS,CAACO,OAHkB;AAItCC,IAAAA,cAAc,EAAER,SAAS,CAACO,OAJY;AAKtCE,IAAAA,WAAW,EAAET,SAAS,CAACO,OALe;AAMtCG,IAAAA,UAAU,EAAEV,SAAS,CAACO,OANgB;AAOtCI,IAAAA,MAAM,EAAEX,SAAS,CAACO,OAPoB;AAQtCK,IAAAA,MAAM,EAAEZ,SAAS,CAACa;AARoB,GAA1B,EASX,EATW,CAAd;;AAUAZ,EAAAA,KAAK,CAACa,SAAN,GAAkB,UAASC,MAAT,EAAiB;AACjCd,IAAAA,KAAK,CAACe,SAAN,CAAgBD,MAAM,CAACE,IAAvB;AACAhB,IAAAA,KAAK,CAACe,SAAN,CAAgBD,MAAM,CAACG,SAAvB;AACAjB,IAAAA,KAAK,CAACe,SAAN,CAAgBD,MAAM,CAACI,QAAvB;AACAlB,IAAAA,KAAK,CAACe,SAAN,CAAgBD,MAAM,CAACK,MAAvB;AACAnB,IAAAA,KAAK,CAACoB,UAAN,GAAkBpB,KAAK,CAACqB,OAAN,CAAcP,MAAM,CAACQ,SAArB,CAAlB;AACAtB,IAAAA,KAAK,CAACqB,OAAN,CAAcP,MAAM,CAACS,QAArB;AACAvB,IAAAA,KAAK,CAACqB,OAAN,CAAcP,MAAM,CAACU,KAArB;AACD,GARD;;AASA,SAAOxB,KAAP;AACD,CArBD",
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models",
      "sourcesContent": [
        "'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const Order = sequelize.define('Order', {\n    internal_code: DataTypes.STRING,\n    internal_code_order: DataTypes.STRING,\n    clientId: DataTypes.INTEGER,\n    quantity_input: DataTypes.INTEGER,\n    operationId: DataTypes.INTEGER,\n    materialId: DataTypes.INTEGER,\n    userId: DataTypes.INTEGER,\n    status: DataTypes.BOOLEAN\n  }, {});\n  Order.associate = function(models) {\n    Order.belongsTo(models.User)\n    Order.belongsTo(models.Operation)\n    Order.belongsTo(models.Material)\n    Order.belongsTo(models.Client)\n    Order.OrderItems= Order.hasMany(models.OrderItem)\n    Order.hasMany(models.Transfer)\n    Order.hasMany(models.Input)\n  };\n  return Order;\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1581691120213
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"filename\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\\\\models\\\\orderitem.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models\\orderitem.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models\\orderitem.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models\\orderitem.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models",
        "sourceFileName": "orderitem.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nmodule.exports = function (sequelize, DataTypes) {\n  var OrderItem = sequelize.define('OrderItem', {\n    internal_code: DataTypes.STRING,\n    orderId: DataTypes.INTEGER,\n    categoryId: DataTypes.INTEGER,\n    articleId: DataTypes.INTEGER,\n    quantity_item: DataTypes.INTEGER,\n    userId: DataTypes.INTEGER,\n    status: DataTypes.BOOLEAN\n  }, {});\n\n  OrderItem.associate = function (models) {\n    OrderItem.belongsTo(models.Order);\n    OrderItem.belongsTo(models.Category);\n    OrderItem.Article = OrderItem.belongsTo(models.Article);\n  };\n\n  return OrderItem;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9yZGVyaXRlbS5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwic2VxdWVsaXplIiwiRGF0YVR5cGVzIiwiT3JkZXJJdGVtIiwiZGVmaW5lIiwiaW50ZXJuYWxfY29kZSIsIlNUUklORyIsIm9yZGVySWQiLCJJTlRFR0VSIiwiY2F0ZWdvcnlJZCIsImFydGljbGVJZCIsInF1YW50aXR5X2l0ZW0iLCJ1c2VySWQiLCJzdGF0dXMiLCJCT09MRUFOIiwiYXNzb2NpYXRlIiwibW9kZWxzIiwiYmVsb25nc1RvIiwiT3JkZXIiLCJDYXRlZ29yeSIsIkFydGljbGUiXSwibWFwcGluZ3MiOiJBQUFBOztBQUNBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUIsVUFBQ0MsU0FBRCxFQUFZQyxTQUFaLEVBQTBCO0FBQ3pDLE1BQU1DLFNBQVMsR0FBR0YsU0FBUyxDQUFDRyxNQUFWLENBQWlCLFdBQWpCLEVBQThCO0FBQzlDQyxJQUFBQSxhQUFhLEVBQUVILFNBQVMsQ0FBQ0ksTUFEcUI7QUFFOUNDLElBQUFBLE9BQU8sRUFBRUwsU0FBUyxDQUFDTSxPQUYyQjtBQUc5Q0MsSUFBQUEsVUFBVSxFQUFFUCxTQUFTLENBQUNNLE9BSHdCO0FBSTlDRSxJQUFBQSxTQUFTLEVBQUVSLFNBQVMsQ0FBQ00sT0FKeUI7QUFLOUNHLElBQUFBLGFBQWEsRUFBRVQsU0FBUyxDQUFDTSxPQUxxQjtBQU05Q0ksSUFBQUEsTUFBTSxFQUFFVixTQUFTLENBQUNNLE9BTjRCO0FBTzlDSyxJQUFBQSxNQUFNLEVBQUVYLFNBQVMsQ0FBQ1k7QUFQNEIsR0FBOUIsRUFRZixFQVJlLENBQWxCOztBQVNBWCxFQUFBQSxTQUFTLENBQUNZLFNBQVYsR0FBc0IsVUFBU0MsTUFBVCxFQUFpQjtBQUNyQ2IsSUFBQUEsU0FBUyxDQUFDYyxTQUFWLENBQW9CRCxNQUFNLENBQUNFLEtBQTNCO0FBQ0FmLElBQUFBLFNBQVMsQ0FBQ2MsU0FBVixDQUFvQkQsTUFBTSxDQUFDRyxRQUEzQjtBQUNBaEIsSUFBQUEsU0FBUyxDQUFDaUIsT0FBVixHQUFtQmpCLFNBQVMsQ0FBQ2MsU0FBVixDQUFvQkQsTUFBTSxDQUFDSSxPQUEzQixDQUFuQjtBQUNELEdBSkQ7O0FBS0EsU0FBT2pCLFNBQVA7QUFDRCxDQWhCRCIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGFzdXNcXERvY3VtZW50c1xcS3Jvd1xcQXp1bHVsYSAtIEJveWthXFxVc3RvY2sgYXBpXFxzcmNcXG1vZGVscyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0Jztcbm1vZHVsZS5leHBvcnRzID0gKHNlcXVlbGl6ZSwgRGF0YVR5cGVzKSA9PiB7XG4gIGNvbnN0IE9yZGVySXRlbSA9IHNlcXVlbGl6ZS5kZWZpbmUoJ09yZGVySXRlbScsIHtcbiAgICBpbnRlcm5hbF9jb2RlOiBEYXRhVHlwZXMuU1RSSU5HLFxuICAgIG9yZGVySWQ6IERhdGFUeXBlcy5JTlRFR0VSLFxuICAgIGNhdGVnb3J5SWQ6IERhdGFUeXBlcy5JTlRFR0VSLCAgICBcbiAgICBhcnRpY2xlSWQ6IERhdGFUeXBlcy5JTlRFR0VSLFxuICAgIHF1YW50aXR5X2l0ZW06IERhdGFUeXBlcy5JTlRFR0VSLFxuICAgIHVzZXJJZDogRGF0YVR5cGVzLklOVEVHRVIsXG4gICAgc3RhdHVzOiBEYXRhVHlwZXMuQk9PTEVBTlxuICB9LCB7fSk7XG4gIE9yZGVySXRlbS5hc3NvY2lhdGUgPSBmdW5jdGlvbihtb2RlbHMpIHtcbiAgICBPcmRlckl0ZW0uYmVsb25nc1RvKG1vZGVscy5PcmRlcilcbiAgICBPcmRlckl0ZW0uYmVsb25nc1RvKG1vZGVscy5DYXRlZ29yeSlcbiAgICBPcmRlckl0ZW0uQXJ0aWNsZT0gT3JkZXJJdGVtLmJlbG9uZ3NUbyhtb2RlbHMuQXJ0aWNsZSlcbiAgfTtcbiAgcmV0dXJuIE9yZGVySXRlbTtcbn07Il19",
    "map": {
      "version": 3,
      "sources": [
        "orderitem.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "OrderItem",
        "define",
        "internal_code",
        "STRING",
        "orderId",
        "INTEGER",
        "categoryId",
        "articleId",
        "quantity_item",
        "userId",
        "status",
        "BOOLEAN",
        "associate",
        "models",
        "belongsTo",
        "Order",
        "Category",
        "Article"
      ],
      "mappings": "AAAA;;AACAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AACzC,MAAMC,SAAS,GAAGF,SAAS,CAACG,MAAV,CAAiB,WAAjB,EAA8B;AAC9CC,IAAAA,aAAa,EAAEH,SAAS,CAACI,MADqB;AAE9CC,IAAAA,OAAO,EAAEL,SAAS,CAACM,OAF2B;AAG9CC,IAAAA,UAAU,EAAEP,SAAS,CAACM,OAHwB;AAI9CE,IAAAA,SAAS,EAAER,SAAS,CAACM,OAJyB;AAK9CG,IAAAA,aAAa,EAAET,SAAS,CAACM,OALqB;AAM9CI,IAAAA,MAAM,EAAEV,SAAS,CAACM,OAN4B;AAO9CK,IAAAA,MAAM,EAAEX,SAAS,CAACY;AAP4B,GAA9B,EAQf,EARe,CAAlB;;AASAX,EAAAA,SAAS,CAACY,SAAV,GAAsB,UAASC,MAAT,EAAiB;AACrCb,IAAAA,SAAS,CAACc,SAAV,CAAoBD,MAAM,CAACE,KAA3B;AACAf,IAAAA,SAAS,CAACc,SAAV,CAAoBD,MAAM,CAACG,QAA3B;AACAhB,IAAAA,SAAS,CAACiB,OAAV,GAAmBjB,SAAS,CAACc,SAAV,CAAoBD,MAAM,CAACI,OAA3B,CAAnB;AACD,GAJD;;AAKA,SAAOjB,SAAP;AACD,CAhBD",
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models",
      "sourcesContent": [
        "'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const OrderItem = sequelize.define('OrderItem', {\n    internal_code: DataTypes.STRING,\n    orderId: DataTypes.INTEGER,\n    categoryId: DataTypes.INTEGER,    \n    articleId: DataTypes.INTEGER,\n    quantity_item: DataTypes.INTEGER,\n    userId: DataTypes.INTEGER,\n    status: DataTypes.BOOLEAN\n  }, {});\n  OrderItem.associate = function(models) {\n    OrderItem.belongsTo(models.Order)\n    OrderItem.belongsTo(models.Category)\n    OrderItem.Article= OrderItem.belongsTo(models.Article)\n  };\n  return OrderItem;\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1581520775802
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"filename\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\\\\models\\\\provider.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models\\provider.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models\\provider.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models\\provider.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models",
        "sourceFileName": "provider.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nmodule.exports = function (sequelize, DataTypes) {\n  var Provider = sequelize.define('Provider', {\n    internal_code: DataTypes.STRING,\n    name: DataTypes.STRING,\n    email: DataTypes.STRING,\n    info: DataTypes.STRING,\n    phone1: DataTypes.STRING,\n    userId: DataTypes.INTEGER,\n    phone2: DataTypes.STRING,\n    obs: DataTypes.STRING,\n    status: DataTypes.BOOLEAN\n  }, {});\n\n  Provider.associate = function (models) {\n    Provider.hasMany(models.Input);\n    Provider.hasMany(models.Article);\n  };\n\n  return Provider;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb3ZpZGVyLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJzZXF1ZWxpemUiLCJEYXRhVHlwZXMiLCJQcm92aWRlciIsImRlZmluZSIsImludGVybmFsX2NvZGUiLCJTVFJJTkciLCJuYW1lIiwiZW1haWwiLCJpbmZvIiwicGhvbmUxIiwidXNlcklkIiwiSU5URUdFUiIsInBob25lMiIsIm9icyIsInN0YXR1cyIsIkJPT0xFQU4iLCJhc3NvY2lhdGUiLCJtb2RlbHMiLCJoYXNNYW55IiwiSW5wdXQiLCJBcnRpY2xlIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFDQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUNDLFNBQUQsRUFBWUMsU0FBWixFQUEwQjtBQUN6QyxNQUFNQyxRQUFRLEdBQUdGLFNBQVMsQ0FBQ0csTUFBVixDQUFpQixVQUFqQixFQUE2QjtBQUM1Q0MsSUFBQUEsYUFBYSxFQUFFSCxTQUFTLENBQUNJLE1BRG1CO0FBRTVDQyxJQUFBQSxJQUFJLEVBQUVMLFNBQVMsQ0FBQ0ksTUFGNEI7QUFHNUNFLElBQUFBLEtBQUssRUFBRU4sU0FBUyxDQUFDSSxNQUgyQjtBQUk1Q0csSUFBQUEsSUFBSSxFQUFFUCxTQUFTLENBQUNJLE1BSjRCO0FBSzVDSSxJQUFBQSxNQUFNLEVBQUVSLFNBQVMsQ0FBQ0ksTUFMMEI7QUFNNUNLLElBQUFBLE1BQU0sRUFBRVQsU0FBUyxDQUFDVSxPQU4wQjtBQU81Q0MsSUFBQUEsTUFBTSxFQUFFWCxTQUFTLENBQUNJLE1BUDBCO0FBUTVDUSxJQUFBQSxHQUFHLEVBQUVaLFNBQVMsQ0FBQ0ksTUFSNkI7QUFTNUNTLElBQUFBLE1BQU0sRUFBRWIsU0FBUyxDQUFDYztBQVQwQixHQUE3QixFQVVkLEVBVmMsQ0FBakI7O0FBV0FiLEVBQUFBLFFBQVEsQ0FBQ2MsU0FBVCxHQUFxQixVQUFTQyxNQUFULEVBQWlCO0FBQ3BDZixJQUFBQSxRQUFRLENBQUNnQixPQUFULENBQWlCRCxNQUFNLENBQUNFLEtBQXhCO0FBQ0FqQixJQUFBQSxRQUFRLENBQUNnQixPQUFULENBQWlCRCxNQUFNLENBQUNHLE9BQXhCO0FBQ0QsR0FIRDs7QUFJQSxTQUFPbEIsUUFBUDtBQUNELENBakJEIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcYXN1c1xcRG9jdW1lbnRzXFxLcm93XFxBenVsdWxhIC0gQm95a2FcXFVzdG9jayBhcGlcXHNyY1xcbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xubW9kdWxlLmV4cG9ydHMgPSAoc2VxdWVsaXplLCBEYXRhVHlwZXMpID0+IHtcbiAgY29uc3QgUHJvdmlkZXIgPSBzZXF1ZWxpemUuZGVmaW5lKCdQcm92aWRlcicsIHtcbiAgICBpbnRlcm5hbF9jb2RlOiBEYXRhVHlwZXMuU1RSSU5HLFxuICAgIG5hbWU6IERhdGFUeXBlcy5TVFJJTkcsXG4gICAgZW1haWw6IERhdGFUeXBlcy5TVFJJTkcsXG4gICAgaW5mbzogRGF0YVR5cGVzLlNUUklORyxcbiAgICBwaG9uZTE6IERhdGFUeXBlcy5TVFJJTkcsXG4gICAgdXNlcklkOiBEYXRhVHlwZXMuSU5URUdFUixcbiAgICBwaG9uZTI6IERhdGFUeXBlcy5TVFJJTkcsXG4gICAgb2JzOiBEYXRhVHlwZXMuU1RSSU5HLFxuICAgIHN0YXR1czogRGF0YVR5cGVzLkJPT0xFQU5cbiAgfSwge30pO1xuICBQcm92aWRlci5hc3NvY2lhdGUgPSBmdW5jdGlvbihtb2RlbHMpIHtcbiAgICBQcm92aWRlci5oYXNNYW55KG1vZGVscy5JbnB1dClcbiAgICBQcm92aWRlci5oYXNNYW55KG1vZGVscy5BcnRpY2xlKVxuICB9O1xuICByZXR1cm4gUHJvdmlkZXI7XG59OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "provider.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "Provider",
        "define",
        "internal_code",
        "STRING",
        "name",
        "email",
        "info",
        "phone1",
        "userId",
        "INTEGER",
        "phone2",
        "obs",
        "status",
        "BOOLEAN",
        "associate",
        "models",
        "hasMany",
        "Input",
        "Article"
      ],
      "mappings": "AAAA;;AACAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AACzC,MAAMC,QAAQ,GAAGF,SAAS,CAACG,MAAV,CAAiB,UAAjB,EAA6B;AAC5CC,IAAAA,aAAa,EAAEH,SAAS,CAACI,MADmB;AAE5CC,IAAAA,IAAI,EAAEL,SAAS,CAACI,MAF4B;AAG5CE,IAAAA,KAAK,EAAEN,SAAS,CAACI,MAH2B;AAI5CG,IAAAA,IAAI,EAAEP,SAAS,CAACI,MAJ4B;AAK5CI,IAAAA,MAAM,EAAER,SAAS,CAACI,MAL0B;AAM5CK,IAAAA,MAAM,EAAET,SAAS,CAACU,OAN0B;AAO5CC,IAAAA,MAAM,EAAEX,SAAS,CAACI,MAP0B;AAQ5CQ,IAAAA,GAAG,EAAEZ,SAAS,CAACI,MAR6B;AAS5CS,IAAAA,MAAM,EAAEb,SAAS,CAACc;AAT0B,GAA7B,EAUd,EAVc,CAAjB;;AAWAb,EAAAA,QAAQ,CAACc,SAAT,GAAqB,UAASC,MAAT,EAAiB;AACpCf,IAAAA,QAAQ,CAACgB,OAAT,CAAiBD,MAAM,CAACE,KAAxB;AACAjB,IAAAA,QAAQ,CAACgB,OAAT,CAAiBD,MAAM,CAACG,OAAxB;AACD,GAHD;;AAIA,SAAOlB,QAAP;AACD,CAjBD",
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models",
      "sourcesContent": [
        "'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const Provider = sequelize.define('Provider', {\n    internal_code: DataTypes.STRING,\n    name: DataTypes.STRING,\n    email: DataTypes.STRING,\n    info: DataTypes.STRING,\n    phone1: DataTypes.STRING,\n    userId: DataTypes.INTEGER,\n    phone2: DataTypes.STRING,\n    obs: DataTypes.STRING,\n    status: DataTypes.BOOLEAN\n  }, {});\n  Provider.associate = function(models) {\n    Provider.hasMany(models.Input)\n    Provider.hasMany(models.Article)\n  };\n  return Provider;\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1581583992482
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"filename\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\\\\models\\\\task.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models\\task.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models\\task.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models\\task.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models",
        "sourceFileName": "task.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nmodule.exports = function (sequelize, DataTypes) {\n  var Task = sequelize.define('Task', {\n    userId: DataTypes.INTEGER,\n    adminId: DataTypes.INTEGER,\n    dateFinish: DataTypes.DATE,\n    dateStart: DataTypes.DATE,\n    description: DataTypes.STRING,\n    state: DataTypes.BOOLEAN\n  }, {});\n\n  Task.associate = function (models) {\n    Task.belongsTo(models.User);\n  };\n\n  return Task;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRhc2suanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInNlcXVlbGl6ZSIsIkRhdGFUeXBlcyIsIlRhc2siLCJkZWZpbmUiLCJ1c2VySWQiLCJJTlRFR0VSIiwiYWRtaW5JZCIsImRhdGVGaW5pc2giLCJEQVRFIiwiZGF0ZVN0YXJ0IiwiZGVzY3JpcHRpb24iLCJTVFJJTkciLCJzdGF0ZSIsIkJPT0xFQU4iLCJhc3NvY2lhdGUiLCJtb2RlbHMiLCJiZWxvbmdzVG8iLCJVc2VyIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFDQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUNDLFNBQUQsRUFBWUMsU0FBWixFQUEwQjtBQUN6QyxNQUFNQyxJQUFJLEdBQUdGLFNBQVMsQ0FBQ0csTUFBVixDQUFpQixNQUFqQixFQUF5QjtBQUNwQ0MsSUFBQUEsTUFBTSxFQUFFSCxTQUFTLENBQUNJLE9BRGtCO0FBRXBDQyxJQUFBQSxPQUFPLEVBQUVMLFNBQVMsQ0FBQ0ksT0FGaUI7QUFHcENFLElBQUFBLFVBQVUsRUFBRU4sU0FBUyxDQUFDTyxJQUhjO0FBSXBDQyxJQUFBQSxTQUFTLEVBQUVSLFNBQVMsQ0FBQ08sSUFKZTtBQUtwQ0UsSUFBQUEsV0FBVyxFQUFFVCxTQUFTLENBQUNVLE1BTGE7QUFNcENDLElBQUFBLEtBQUssRUFBRVgsU0FBUyxDQUFDWTtBQU5tQixHQUF6QixFQU9WLEVBUFUsQ0FBYjs7QUFRQVgsRUFBQUEsSUFBSSxDQUFDWSxTQUFMLEdBQWlCLFVBQVNDLE1BQVQsRUFBaUI7QUFDaENiLElBQUFBLElBQUksQ0FBQ2MsU0FBTCxDQUFlRCxNQUFNLENBQUNFLElBQXRCO0FBQ0QsR0FGRDs7QUFHQSxTQUFPZixJQUFQO0FBQ0QsQ0FiRCIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGFzdXNcXERvY3VtZW50c1xcS3Jvd1xcQXp1bHVsYSAtIEJveWthXFxVc3RvY2sgYXBpXFxzcmNcXG1vZGVscyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0Jztcbm1vZHVsZS5leHBvcnRzID0gKHNlcXVlbGl6ZSwgRGF0YVR5cGVzKSA9PiB7XG4gIGNvbnN0IFRhc2sgPSBzZXF1ZWxpemUuZGVmaW5lKCdUYXNrJywge1xuICAgIHVzZXJJZDogRGF0YVR5cGVzLklOVEVHRVIsXG4gICAgYWRtaW5JZDogRGF0YVR5cGVzLklOVEVHRVIsXG4gICAgZGF0ZUZpbmlzaDogRGF0YVR5cGVzLkRBVEUsXG4gICAgZGF0ZVN0YXJ0OiBEYXRhVHlwZXMuREFURSxcbiAgICBkZXNjcmlwdGlvbjogRGF0YVR5cGVzLlNUUklORyxcbiAgICBzdGF0ZTogRGF0YVR5cGVzLkJPT0xFQU5cbiAgfSwge30pO1xuICBUYXNrLmFzc29jaWF0ZSA9IGZ1bmN0aW9uKG1vZGVscykge1xuICAgIFRhc2suYmVsb25nc1RvKG1vZGVscy5Vc2VyKVxuICB9O1xuICByZXR1cm4gVGFzaztcbn07Il19",
    "map": {
      "version": 3,
      "sources": [
        "task.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "Task",
        "define",
        "userId",
        "INTEGER",
        "adminId",
        "dateFinish",
        "DATE",
        "dateStart",
        "description",
        "STRING",
        "state",
        "BOOLEAN",
        "associate",
        "models",
        "belongsTo",
        "User"
      ],
      "mappings": "AAAA;;AACAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AACzC,MAAMC,IAAI,GAAGF,SAAS,CAACG,MAAV,CAAiB,MAAjB,EAAyB;AACpCC,IAAAA,MAAM,EAAEH,SAAS,CAACI,OADkB;AAEpCC,IAAAA,OAAO,EAAEL,SAAS,CAACI,OAFiB;AAGpCE,IAAAA,UAAU,EAAEN,SAAS,CAACO,IAHc;AAIpCC,IAAAA,SAAS,EAAER,SAAS,CAACO,IAJe;AAKpCE,IAAAA,WAAW,EAAET,SAAS,CAACU,MALa;AAMpCC,IAAAA,KAAK,EAAEX,SAAS,CAACY;AANmB,GAAzB,EAOV,EAPU,CAAb;;AAQAX,EAAAA,IAAI,CAACY,SAAL,GAAiB,UAASC,MAAT,EAAiB;AAChCb,IAAAA,IAAI,CAACc,SAAL,CAAeD,MAAM,CAACE,IAAtB;AACD,GAFD;;AAGA,SAAOf,IAAP;AACD,CAbD",
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models",
      "sourcesContent": [
        "'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const Task = sequelize.define('Task', {\n    userId: DataTypes.INTEGER,\n    adminId: DataTypes.INTEGER,\n    dateFinish: DataTypes.DATE,\n    dateStart: DataTypes.DATE,\n    description: DataTypes.STRING,\n    state: DataTypes.BOOLEAN\n  }, {});\n  Task.associate = function(models) {\n    Task.belongsTo(models.User)\n  };\n  return Task;\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1580976056162
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"filename\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\\\\models\\\\transfer.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models\\transfer.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models\\transfer.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models\\transfer.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models",
        "sourceFileName": "transfer.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nmodule.exports = function (sequelize, DataTypes) {\n  var Transfer = sequelize.define('Transfer', {\n    internal_code: DataTypes.STRING,\n    orderId: DataTypes.INTEGER,\n    clientId: DataTypes.INTEGER,\n    materialId: DataTypes.INTEGER,\n    output_date: DataTypes.DATE,\n    operationId: DataTypes.INTEGER,\n    userId: DataTypes.INTEGER,\n    quantity_article: DataTypes.INTEGER,\n    status: DataTypes.BOOLEAN\n  }, {});\n\n  Transfer.associate = function (models) {\n    Transfer.belongsTo(models.Order);\n    Transfer.belongsTo(models.Client);\n  };\n\n  return Transfer;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRyYW5zZmVyLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJzZXF1ZWxpemUiLCJEYXRhVHlwZXMiLCJUcmFuc2ZlciIsImRlZmluZSIsImludGVybmFsX2NvZGUiLCJTVFJJTkciLCJvcmRlcklkIiwiSU5URUdFUiIsImNsaWVudElkIiwibWF0ZXJpYWxJZCIsIm91dHB1dF9kYXRlIiwiREFURSIsIm9wZXJhdGlvbklkIiwidXNlcklkIiwicXVhbnRpdHlfYXJ0aWNsZSIsInN0YXR1cyIsIkJPT0xFQU4iLCJhc3NvY2lhdGUiLCJtb2RlbHMiLCJiZWxvbmdzVG8iLCJPcmRlciIsIkNsaWVudCJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBQ0FBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixVQUFDQyxTQUFELEVBQVlDLFNBQVosRUFBMEI7QUFDekMsTUFBTUMsUUFBUSxHQUFHRixTQUFTLENBQUNHLE1BQVYsQ0FBaUIsVUFBakIsRUFBNkI7QUFDNUNDLElBQUFBLGFBQWEsRUFBRUgsU0FBUyxDQUFDSSxNQURtQjtBQUU1Q0MsSUFBQUEsT0FBTyxFQUFFTCxTQUFTLENBQUNNLE9BRnlCO0FBRzVDQyxJQUFBQSxRQUFRLEVBQUVQLFNBQVMsQ0FBQ00sT0FId0I7QUFJNUNFLElBQUFBLFVBQVUsRUFBRVIsU0FBUyxDQUFDTSxPQUpzQjtBQUs1Q0csSUFBQUEsV0FBVyxFQUFFVCxTQUFTLENBQUNVLElBTHFCO0FBTTVDQyxJQUFBQSxXQUFXLEVBQUVYLFNBQVMsQ0FBQ00sT0FOcUI7QUFPNUNNLElBQUFBLE1BQU0sRUFBRVosU0FBUyxDQUFDTSxPQVAwQjtBQVE1Q08sSUFBQUEsZ0JBQWdCLEVBQUViLFNBQVMsQ0FBQ00sT0FSZ0I7QUFTNUNRLElBQUFBLE1BQU0sRUFBRWQsU0FBUyxDQUFDZTtBQVQwQixHQUE3QixFQVVkLEVBVmMsQ0FBakI7O0FBV0FkLEVBQUFBLFFBQVEsQ0FBQ2UsU0FBVCxHQUFxQixVQUFTQyxNQUFULEVBQWlCO0FBQ3BDaEIsSUFBQUEsUUFBUSxDQUFDaUIsU0FBVCxDQUFtQkQsTUFBTSxDQUFDRSxLQUExQjtBQUNBbEIsSUFBQUEsUUFBUSxDQUFDaUIsU0FBVCxDQUFtQkQsTUFBTSxDQUFDRyxNQUExQjtBQUNELEdBSEQ7O0FBSUEsU0FBT25CLFFBQVA7QUFDRCxDQWpCRCIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGFzdXNcXERvY3VtZW50c1xcS3Jvd1xcQXp1bHVsYSAtIEJveWthXFxVc3RvY2sgYXBpXFxzcmNcXG1vZGVscyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0Jztcbm1vZHVsZS5leHBvcnRzID0gKHNlcXVlbGl6ZSwgRGF0YVR5cGVzKSA9PiB7XG4gIGNvbnN0IFRyYW5zZmVyID0gc2VxdWVsaXplLmRlZmluZSgnVHJhbnNmZXInLCB7XG4gICAgaW50ZXJuYWxfY29kZTogRGF0YVR5cGVzLlNUUklORyxcbiAgICBvcmRlcklkOiBEYXRhVHlwZXMuSU5URUdFUixcbiAgICBjbGllbnRJZDogRGF0YVR5cGVzLklOVEVHRVIsXG4gICAgbWF0ZXJpYWxJZDogRGF0YVR5cGVzLklOVEVHRVIsXG4gICAgb3V0cHV0X2RhdGU6IERhdGFUeXBlcy5EQVRFLFxuICAgIG9wZXJhdGlvbklkOiBEYXRhVHlwZXMuSU5URUdFUixcbiAgICB1c2VySWQ6IERhdGFUeXBlcy5JTlRFR0VSLFxuICAgIHF1YW50aXR5X2FydGljbGU6IERhdGFUeXBlcy5JTlRFR0VSLFxuICAgIHN0YXR1czogRGF0YVR5cGVzLkJPT0xFQU5cbiAgfSwge30pO1xuICBUcmFuc2Zlci5hc3NvY2lhdGUgPSBmdW5jdGlvbihtb2RlbHMpIHtcbiAgICBUcmFuc2Zlci5iZWxvbmdzVG8obW9kZWxzLk9yZGVyKVxuICAgIFRyYW5zZmVyLmJlbG9uZ3NUbyhtb2RlbHMuQ2xpZW50KVxuICB9O1xuICByZXR1cm4gVHJhbnNmZXI7XG59OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "transfer.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "Transfer",
        "define",
        "internal_code",
        "STRING",
        "orderId",
        "INTEGER",
        "clientId",
        "materialId",
        "output_date",
        "DATE",
        "operationId",
        "userId",
        "quantity_article",
        "status",
        "BOOLEAN",
        "associate",
        "models",
        "belongsTo",
        "Order",
        "Client"
      ],
      "mappings": "AAAA;;AACAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AACzC,MAAMC,QAAQ,GAAGF,SAAS,CAACG,MAAV,CAAiB,UAAjB,EAA6B;AAC5CC,IAAAA,aAAa,EAAEH,SAAS,CAACI,MADmB;AAE5CC,IAAAA,OAAO,EAAEL,SAAS,CAACM,OAFyB;AAG5CC,IAAAA,QAAQ,EAAEP,SAAS,CAACM,OAHwB;AAI5CE,IAAAA,UAAU,EAAER,SAAS,CAACM,OAJsB;AAK5CG,IAAAA,WAAW,EAAET,SAAS,CAACU,IALqB;AAM5CC,IAAAA,WAAW,EAAEX,SAAS,CAACM,OANqB;AAO5CM,IAAAA,MAAM,EAAEZ,SAAS,CAACM,OAP0B;AAQ5CO,IAAAA,gBAAgB,EAAEb,SAAS,CAACM,OARgB;AAS5CQ,IAAAA,MAAM,EAAEd,SAAS,CAACe;AAT0B,GAA7B,EAUd,EAVc,CAAjB;;AAWAd,EAAAA,QAAQ,CAACe,SAAT,GAAqB,UAASC,MAAT,EAAiB;AACpChB,IAAAA,QAAQ,CAACiB,SAAT,CAAmBD,MAAM,CAACE,KAA1B;AACAlB,IAAAA,QAAQ,CAACiB,SAAT,CAAmBD,MAAM,CAACG,MAA1B;AACD,GAHD;;AAIA,SAAOnB,QAAP;AACD,CAjBD",
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models",
      "sourcesContent": [
        "'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const Transfer = sequelize.define('Transfer', {\n    internal_code: DataTypes.STRING,\n    orderId: DataTypes.INTEGER,\n    clientId: DataTypes.INTEGER,\n    materialId: DataTypes.INTEGER,\n    output_date: DataTypes.DATE,\n    operationId: DataTypes.INTEGER,\n    userId: DataTypes.INTEGER,\n    quantity_article: DataTypes.INTEGER,\n    status: DataTypes.BOOLEAN\n  }, {});\n  Transfer.associate = function(models) {\n    Transfer.belongsTo(models.Order)\n    Transfer.belongsTo(models.Client)\n  };\n  return Transfer;\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1581598234176
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"filename\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\\\\models\\\\user.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models\\user.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models\\user.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models\\user.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models",
        "sourceFileName": "user.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nmodule.exports = function (sequelize, DataTypes) {\n  var User = sequelize.define('User', {\n    username: DataTypes.STRING,\n    password: DataTypes.STRING,\n    internal_code: DataTypes.STRING,\n    level: DataTypes.INTEGER,\n    email: DataTypes.STRING,\n    obs: DataTypes.STRING,\n    userId: DataTypes.INTEGER,\n    name: DataTypes.STRING,\n    status: DataTypes.BOOLEAN\n  }, {});\n\n  User.associate = function (models) {\n    User.hasMany(models.Order);\n    User.hasMany(models.Article);\n    User.hasMany(models.Material);\n    User.hasMany(models.Task);\n  };\n\n  return User;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsInNlcXVlbGl6ZSIsIkRhdGFUeXBlcyIsIlVzZXIiLCJkZWZpbmUiLCJ1c2VybmFtZSIsIlNUUklORyIsInBhc3N3b3JkIiwiaW50ZXJuYWxfY29kZSIsImxldmVsIiwiSU5URUdFUiIsImVtYWlsIiwib2JzIiwidXNlcklkIiwibmFtZSIsInN0YXR1cyIsIkJPT0xFQU4iLCJhc3NvY2lhdGUiLCJtb2RlbHMiLCJoYXNNYW55IiwiT3JkZXIiLCJBcnRpY2xlIiwiTWF0ZXJpYWwiLCJUYXNrIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFDQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUNDLFNBQUQsRUFBWUMsU0FBWixFQUEwQjtBQUN6QyxNQUFNQyxJQUFJLEdBQUdGLFNBQVMsQ0FBQ0csTUFBVixDQUFpQixNQUFqQixFQUF5QjtBQUNwQ0MsSUFBQUEsUUFBUSxFQUFFSCxTQUFTLENBQUNJLE1BRGdCO0FBRXBDQyxJQUFBQSxRQUFRLEVBQUVMLFNBQVMsQ0FBQ0ksTUFGZ0I7QUFHcENFLElBQUFBLGFBQWEsRUFBRU4sU0FBUyxDQUFDSSxNQUhXO0FBSXBDRyxJQUFBQSxLQUFLLEVBQUVQLFNBQVMsQ0FBQ1EsT0FKbUI7QUFLcENDLElBQUFBLEtBQUssRUFBRVQsU0FBUyxDQUFDSSxNQUxtQjtBQU1wQ00sSUFBQUEsR0FBRyxFQUFFVixTQUFTLENBQUNJLE1BTnFCO0FBT3BDTyxJQUFBQSxNQUFNLEVBQUVYLFNBQVMsQ0FBQ1EsT0FQa0I7QUFRcENJLElBQUFBLElBQUksRUFBRVosU0FBUyxDQUFDSSxNQVJvQjtBQVNwQ1MsSUFBQUEsTUFBTSxFQUFFYixTQUFTLENBQUNjO0FBVGtCLEdBQXpCLEVBVVYsRUFWVSxDQUFiOztBQVdBYixFQUFBQSxJQUFJLENBQUNjLFNBQUwsR0FBaUIsVUFBU0MsTUFBVCxFQUFpQjtBQUNoQ2YsSUFBQUEsSUFBSSxDQUFDZ0IsT0FBTCxDQUFhRCxNQUFNLENBQUNFLEtBQXBCO0FBQ0FqQixJQUFBQSxJQUFJLENBQUNnQixPQUFMLENBQWFELE1BQU0sQ0FBQ0csT0FBcEI7QUFDQWxCLElBQUFBLElBQUksQ0FBQ2dCLE9BQUwsQ0FBYUQsTUFBTSxDQUFDSSxRQUFwQjtBQUNBbkIsSUFBQUEsSUFBSSxDQUFDZ0IsT0FBTCxDQUFhRCxNQUFNLENBQUNLLElBQXBCO0FBQ0QsR0FMRDs7QUFNQSxTQUFPcEIsSUFBUDtBQUNELENBbkJEIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcYXN1c1xcRG9jdW1lbnRzXFxLcm93XFxBenVsdWxhIC0gQm95a2FcXFVzdG9jayBhcGlcXHNyY1xcbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xubW9kdWxlLmV4cG9ydHMgPSAoc2VxdWVsaXplLCBEYXRhVHlwZXMpID0+IHtcbiAgY29uc3QgVXNlciA9IHNlcXVlbGl6ZS5kZWZpbmUoJ1VzZXInLCB7XG4gICAgdXNlcm5hbWU6IERhdGFUeXBlcy5TVFJJTkcsXG4gICAgcGFzc3dvcmQ6IERhdGFUeXBlcy5TVFJJTkcsXG4gICAgaW50ZXJuYWxfY29kZTogRGF0YVR5cGVzLlNUUklORyxcbiAgICBsZXZlbDogRGF0YVR5cGVzLklOVEVHRVIsXG4gICAgZW1haWw6IERhdGFUeXBlcy5TVFJJTkcsXG4gICAgb2JzOiBEYXRhVHlwZXMuU1RSSU5HLFxuICAgIHVzZXJJZDogRGF0YVR5cGVzLklOVEVHRVIsXG4gICAgbmFtZTogRGF0YVR5cGVzLlNUUklORyxcbiAgICBzdGF0dXM6IERhdGFUeXBlcy5CT09MRUFOXG4gIH0sIHt9KTtcbiAgVXNlci5hc3NvY2lhdGUgPSBmdW5jdGlvbihtb2RlbHMpIHtcbiAgICBVc2VyLmhhc01hbnkobW9kZWxzLk9yZGVyKVxuICAgIFVzZXIuaGFzTWFueShtb2RlbHMuQXJ0aWNsZSlcbiAgICBVc2VyLmhhc01hbnkobW9kZWxzLk1hdGVyaWFsKVxuICAgIFVzZXIuaGFzTWFueShtb2RlbHMuVGFzaylcbiAgfTtcbiAgcmV0dXJuIFVzZXI7XG59OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "user.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "User",
        "define",
        "username",
        "STRING",
        "password",
        "internal_code",
        "level",
        "INTEGER",
        "email",
        "obs",
        "userId",
        "name",
        "status",
        "BOOLEAN",
        "associate",
        "models",
        "hasMany",
        "Order",
        "Article",
        "Material",
        "Task"
      ],
      "mappings": "AAAA;;AACAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AACzC,MAAMC,IAAI,GAAGF,SAAS,CAACG,MAAV,CAAiB,MAAjB,EAAyB;AACpCC,IAAAA,QAAQ,EAAEH,SAAS,CAACI,MADgB;AAEpCC,IAAAA,QAAQ,EAAEL,SAAS,CAACI,MAFgB;AAGpCE,IAAAA,aAAa,EAAEN,SAAS,CAACI,MAHW;AAIpCG,IAAAA,KAAK,EAAEP,SAAS,CAACQ,OAJmB;AAKpCC,IAAAA,KAAK,EAAET,SAAS,CAACI,MALmB;AAMpCM,IAAAA,GAAG,EAAEV,SAAS,CAACI,MANqB;AAOpCO,IAAAA,MAAM,EAAEX,SAAS,CAACQ,OAPkB;AAQpCI,IAAAA,IAAI,EAAEZ,SAAS,CAACI,MARoB;AASpCS,IAAAA,MAAM,EAAEb,SAAS,CAACc;AATkB,GAAzB,EAUV,EAVU,CAAb;;AAWAb,EAAAA,IAAI,CAACc,SAAL,GAAiB,UAASC,MAAT,EAAiB;AAChCf,IAAAA,IAAI,CAACgB,OAAL,CAAaD,MAAM,CAACE,KAApB;AACAjB,IAAAA,IAAI,CAACgB,OAAL,CAAaD,MAAM,CAACG,OAApB;AACAlB,IAAAA,IAAI,CAACgB,OAAL,CAAaD,MAAM,CAACI,QAApB;AACAnB,IAAAA,IAAI,CAACgB,OAAL,CAAaD,MAAM,CAACK,IAApB;AACD,GALD;;AAMA,SAAOpB,IAAP;AACD,CAnBD",
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models",
      "sourcesContent": [
        "'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const User = sequelize.define('User', {\n    username: DataTypes.STRING,\n    password: DataTypes.STRING,\n    internal_code: DataTypes.STRING,\n    level: DataTypes.INTEGER,\n    email: DataTypes.STRING,\n    obs: DataTypes.STRING,\n    userId: DataTypes.INTEGER,\n    name: DataTypes.STRING,\n    status: DataTypes.BOOLEAN\n  }, {});\n  User.associate = function(models) {\n    User.hasMany(models.Order)\n    User.hasMany(models.Article)\n    User.hasMany(models.Material)\n    User.hasMany(models.Task)\n  };\n  return User;\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1581548967891
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"filename\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\\\\routes\\\\category.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes\\category.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes\\category.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes\\category.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes",
        "sourceFileName": "category.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _verifyToken = _interopRequireDefault(require(\"../utils/verifyToken\"));\n\nvar _models = _interopRequireDefault(require(\"../models\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.exports = function (app) {\n  // List category/service\n  app.get('/api/categories', _verifyToken[\"default\"], function (req, res) {\n    _models[\"default\"].Category.findAll().then(function (categories) {\n      res.json({\n        categories: categories\n      });\n    });\n  }), // REGISTER USER V\n  app.post('/api/categories', _verifyToken[\"default\"], function (req, res) {\n    // Params\n    var category = req.body; // Verify if exist into models.categories\n\n    _models[\"default\"].Category.findOne({\n      attributes: [\"name\"],\n      where: {\n        name: category.name\n      }\n    }).then(function (categoryFound) {\n      if (!categoryFound) {\n        _models[\"default\"].Category.create(category).then(function (categories) {\n          return res.json({\n            categories: categories,\n            'code': 1\n          });\n        })[\"catch\"](function (err) {\n          return res.json({\n            'error': 'Cannot add category',\n            'code': 0\n          });\n        });\n      } else {\n        return res.json({\n          'error': 'product already exist',\n          'code': 11\n        });\n      }\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify category',\n        err: err,\n        'code': 0\n      });\n    });\n  }); // UPDATE category\n\n  app.put('/api/categories/:id', _verifyToken[\"default\"], function (req, res) {\n    // Params\n    var category = req.body; // Verify if exist into models.categories\n\n    _models[\"default\"].Category.findOne({\n      attributes: [\"id\"],\n      where: {\n        id: req.params.id\n      }\n    }).then(function (categoryFound2) {\n      categoryFound2.update(category).then(function (categories) {\n        return res.json({\n          categories: categories,\n          'code': 1\n        });\n      })[\"catch\"](function (err) {\n        return res.json({\n          'error': 'Cannot Update category',\n          'code': 0\n        });\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify category',\n        err: err,\n        'code': 0\n      });\n    });\n  }); // Delete category\n\n  app[\"delete\"]('/api/categories/:id', _verifyToken[\"default\"], function (req, res) {\n    // Params\n    var category = {\n      id: req.params.id\n    }; // Verify if exist into models.categories\n\n    _models[\"default\"].Category.findOne({\n      attributes: [\"id\"],\n      where: {\n        id: category.id\n      }\n    }).then(function (categoryFound2) {\n      categoryFound2.destroy(category).then(function () {\n        return res.json({\n          'status': 'success',\n          'code': 1\n        });\n      })[\"catch\"](function (err) {\n        return res.json({\n          'error': 'Cannot Delete category',\n          'code': 0\n        });\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify category',\n        err: err,\n        'code': 0\n      });\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "category.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "get",
        "verifyToken",
        "req",
        "res",
        "models",
        "Category",
        "findAll",
        "then",
        "categories",
        "json",
        "post",
        "category",
        "body",
        "findOne",
        "attributes",
        "where",
        "name",
        "categoryFound",
        "create",
        "err",
        "put",
        "id",
        "params",
        "categoryFound2",
        "update",
        "destroy"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes",
      "sourcesContent": [
        "\r\nimport verifyToken from '../utils/verifyToken'\r\nimport models from '../models'\r\n\r\n\r\nmodule.exports = app => {\r\n\r\n    // List category/service\r\n    app.get('/api/categories', verifyToken, (req, res) => {\r\n        models.Category.findAll().then((categories) => {\r\n\r\n            res.json({\r\n                categories\r\n            })\r\n        })\r\n    }),\r\n    // REGISTER USER V\r\n    app.post('/api/categories', verifyToken, (req, res) => {\r\n        // Params\r\n        var category = req.body\r\n\r\n        // Verify if exist into models.categories\r\n        models.Category.findOne({\r\n            attributes: [\"name\"],\r\n            where: { name: category.name }\r\n        })\r\n            .then((categoryFound) => {\r\n                if (!categoryFound) {\r\n                    models.Category.create(category)\r\n                        .then((categories) => {\r\n                            return res.json({ categories, 'code': 1 })\r\n                        })\r\n                        .catch((err) => {\r\n                            return res.json({ 'error': 'Cannot add category', 'code': 0 })\r\n                        })\r\n                } else {\r\n                    return res.json({ 'error': 'product already exist', 'code': 11 })\r\n                }\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify category', err, 'code': 0 })\r\n            })\r\n\r\n       \r\n    })\r\n\r\n    // UPDATE category\r\n    app.put('/api/categories/:id', verifyToken, (req, res) => {\r\n\r\n        // Params\r\n        var category = req.body\r\n\r\n        // Verify if exist into models.categories\r\n\r\n        models.Category.findOne({\r\n            attributes: [\"id\"],\r\n            where: { id: req.params.id }\r\n        })\r\n            .then((categoryFound2) => {\r\n                categoryFound2.update(category)\r\n                    .then((categories) => {\r\n                        return res.json({ categories, 'code': 1 })\r\n                    })\r\n                    .catch((err) => {\r\n                        return res.json({ 'error': 'Cannot Update category', 'code': 0 })\r\n                    })\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify category', err, 'code': 0 })\r\n            })\r\n\r\n    })\r\n\r\n     // Delete category\r\n     app.delete('/api/categories/:id', verifyToken, (req, res) => {\r\n\r\n        // Params\r\n        var category = { id:req.params.id}\r\n\r\n        // Verify if exist into models.categories\r\n\r\n        models.Category.findOne({\r\n            attributes: [\"id\"],\r\n            where: { id: category.id }\r\n        })\r\n            .then((categoryFound2) => {\r\n                categoryFound2.destroy(category)\r\n                    .then(() => {\r\n                        return res.json({ 'status':'success', 'code': 1 })\r\n                    })\r\n                    .catch((err) => {\r\n                        return res.json({ 'error': 'Cannot Delete category', 'code': 0 })\r\n                    })\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify category', err, 'code': 0 })\r\n            })\r\n\r\n    })\r\n   }\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1579890852512
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"filename\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\\\\routes\\\\client.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes\\client.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes\\client.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes\\client.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes",
        "sourceFileName": "client.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _verifyToken = _interopRequireDefault(require(\"../utils/verifyToken\"));\n\nvar _models = _interopRequireDefault(require(\"../models\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.exports = function (app) {\n  // List client/service\n  app.get('/api/clients', _verifyToken[\"default\"], function (req, res) {\n    _models[\"default\"].Client.findAll({\n      include: [_models[\"default\"].Order]\n    }).then(function (clients) {\n      res.json({\n        clients: clients\n      });\n    });\n  }), // REGISTER USER V\n  app.post('/api/clients', _verifyToken[\"default\"], function (req, res) {\n    // Params\n    var client = req.body; // Verify if exist into models.clients\n    // Verify if exist into models.categories\n\n    _models[\"default\"].Client.findOne({\n      attributes: [\"name\"],\n      where: {\n        name: client.name\n      }\n    }).then(function (clientFound) {\n      if (!clientFound) {\n        _models[\"default\"].Client.create(client).then(function (clients) {\n          return clients.update({\n            internal_code: 'CLI' + clients.id\n          }).then(function (d) {\n            return res.json({\n              clients: clients,\n              'code': 1\n            });\n          })[\"catch\"](function (err) {\n            return res.json({\n              'error': 'Cannot add clients, error internal code',\n              'code': 0\n            });\n          });\n        })[\"catch\"](function (err) {\n          return res.json({\n            'error': 'Cannot add Client',\n            'code': 0\n          });\n        });\n      } else {\n        return res.json({\n          'error': 'Client already exist',\n          'code': 11\n        });\n      }\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify Client',\n        err: err,\n        'code': 0\n      });\n    });\n  }); // UPDATE client\n\n  app.put('/api/clients/:id', _verifyToken[\"default\"], function (req, res) {\n    // Params\n    var client = req.body; // Verify if exist into models.clients\n\n    _models[\"default\"].Client.findOne({\n      attributes: [\"id\"],\n      where: {\n        id: req.params.id\n      }\n    }).then(function (clientFound2) {\n      clientFound2.update(client).then(function (clients) {\n        return res.json({\n          clients: clients,\n          'code': 1\n        });\n      })[\"catch\"](function (err) {\n        return res.json({\n          'error': 'Cannot Update client',\n          'code': 0\n        });\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify client',\n        err: err,\n        'code': 0\n      });\n    });\n  }); // Delete client\n\n  app[\"delete\"]('/api/clients/:id', _verifyToken[\"default\"], function (req, res) {\n    // Params\n    var client = {\n      id: req.params.id\n    }; // Verify if exist into models.clients\n\n    _models[\"default\"].Client.findOne({\n      attributes: [\"id\"],\n      where: {\n        id: client.id\n      }\n    }).then(function (clientFound2) {\n      clientFound2.destroy(client).then(function () {\n        return res.json({\n          'status': 'success',\n          'code': 1\n        });\n      })[\"catch\"](function (err) {\n        return res.json({\n          'error': 'Cannot Delete client',\n          'code': 0\n        });\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify client',\n        err: err,\n        'code': 0\n      });\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "client.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "get",
        "verifyToken",
        "req",
        "res",
        "models",
        "Client",
        "findAll",
        "include",
        "Order",
        "then",
        "clients",
        "json",
        "post",
        "client",
        "body",
        "findOne",
        "attributes",
        "where",
        "name",
        "clientFound",
        "create",
        "update",
        "internal_code",
        "id",
        "d",
        "err",
        "put",
        "params",
        "clientFound2",
        "destroy"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes",
      "sourcesContent": [
        "\r\nimport verifyToken from '../utils/verifyToken'\r\nimport models from '../models'\r\n\r\n\r\nmodule.exports = app => {\r\n\r\n    // List client/service\r\n    app.get('/api/clients', verifyToken, (req, res) => {\r\n        models.Client.findAll({include: [models.Order]}).then((clients) => {\r\n\r\n            res.json({\r\n                clients\r\n            })\r\n        })\r\n    }),\r\n    // REGISTER USER V\r\n    app.post('/api/clients', verifyToken, (req, res) => {\r\n        // Params\r\n        var client = req.body\r\n\r\n        // Verify if exist into models.clients\r\n        // Verify if exist into models.categories\r\n        models.Client.findOne({\r\n            attributes: [\"name\"],\r\n            where: { name: client.name }\r\n        })\r\n            .then((clientFound) => {\r\n                if (!clientFound) {     \r\n                        models.Client.create(client)\r\n                            .then(clients => clients.update({internal_code:'CLI'+clients.id}).then(d=>{\r\n                                return res.json({ clients, 'code': 1 })\r\n                            }).catch((err)=>{\r\n                                return res.json({ 'error': 'Cannot add clients, error internal code', 'code': 0 })\r\n                            }))\r\n                            .catch((err) => {\r\n                                return res.json({ 'error': 'Cannot add Client', 'code': 0 })\r\n                            })\r\n                        } else {\r\n                            return res.json({ 'error': 'Client already exist', 'code': 11 })\r\n                        }\r\n        \r\n                    })\r\n                    .catch((err) => {\r\n                        return res.json({ 'error': 'Unable to verify Client', err, 'code': 0 })\r\n                    })\r\n    })\r\n\r\n    // UPDATE client\r\n    app.put('/api/clients/:id', verifyToken, (req, res) => {\r\n\r\n        // Params\r\n        var client = req.body\r\n\r\n        // Verify if exist into models.clients\r\n\r\n        models.Client.findOne({\r\n            attributes: [\"id\"],\r\n            where: { id: req.params.id }\r\n        })\r\n            .then((clientFound2) => {\r\n                clientFound2.update(client)\r\n                    .then((clients) => {\r\n                        return res.json({ clients, 'code': 1 })\r\n                    })\r\n                    .catch((err) => {\r\n                        return res.json({ 'error': 'Cannot Update client', 'code': 0 })\r\n                    })\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify client', err, 'code': 0 })\r\n            })\r\n\r\n    })\r\n\r\n     // Delete client\r\n     app.delete('/api/clients/:id', verifyToken, (req, res) => {\r\n\r\n        // Params\r\n        var client = { id:req.params.id}\r\n\r\n        // Verify if exist into models.clients\r\n\r\n        models.Client.findOne({\r\n            attributes: [\"id\"],\r\n            where: { id: client.id }\r\n        })\r\n            .then((clientFound2) => {\r\n                clientFound2.destroy(client)\r\n                    .then(() => {\r\n                        return res.json({ 'status':'success', 'code': 1 })\r\n                    })\r\n                    .catch((err) => {\r\n                        return res.json({ 'error': 'Cannot Delete client', 'code': 0 })\r\n                    })\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify client', err, 'code': 0 })\r\n            })\r\n\r\n    })\r\n   }\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581062896674
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"filename\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\\\\routes\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes\\index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _models = _interopRequireDefault(require(\"../models\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.exports = function (app) {\n  app.get('/api', function (req, res) {\n    _models[\"default\"].User.findByPk(1).then(function (users) {\n      res.json({\n        users: users\n      });\n    });\n  });\n};\n/**\r\n * \r\n * \"development\": {\r\n    \"username\": \"root\",\r\n    \"password\": \"1212\",\r\n    \"database\": \"database_development\",\r\n    \"host\": \"127.0.0.1\",\r\n    \"dialect\": \"mysql\",\r\n    \"operatorsAliases\": false\r\n  }\r\n */\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJhcHAiLCJnZXQiLCJyZXEiLCJyZXMiLCJtb2RlbHMiLCJVc2VyIiwiZmluZEJ5UGsiLCJ0aGVuIiwidXNlcnMiLCJqc29uIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7O0FBRUFBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixVQUFBQyxHQUFHLEVBQUk7QUFDcEJBLEVBQUFBLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLE1BQVIsRUFBZ0IsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFFMUJDLHVCQUFPQyxJQUFQLENBQVlDLFFBQVosQ0FBcUIsQ0FBckIsRUFBd0JDLElBQXhCLENBQTZCLFVBQUNDLEtBQUQsRUFBUztBQUVsQ0wsTUFBQUEsR0FBRyxDQUFDTSxJQUFKLENBQVM7QUFDTEQsUUFBQUEsS0FBSyxFQUFMQTtBQURLLE9BQVQ7QUFHSCxLQUxEO0FBT0gsR0FURDtBQVVILENBWEQ7QUFhQSIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGFzdXNcXERvY3VtZW50c1xcS3Jvd1xcQXp1bHVsYSAtIEJveWthXFxVc3RvY2sgYXBpXFxzcmNcXHJvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb2RlbHMgZnJvbSAnLi4vbW9kZWxzJ1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBhcHAgPT4ge1xyXG4gICAgYXBwLmdldCgnL2FwaScsIChyZXEsIHJlcykgPT4ge1xyXG5cclxuICAgICAgICBtb2RlbHMuVXNlci5maW5kQnlQaygxKS50aGVuKCh1c2Vycyk9PntcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIHJlcy5qc29uKHtcclxuICAgICAgICAgICAgICAgIHVzZXJzXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfSlcclxuICAgICAgICBcclxuICAgIH0pXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBcclxuICogXCJkZXZlbG9wbWVudFwiOiB7XHJcbiAgICBcInVzZXJuYW1lXCI6IFwicm9vdFwiLFxyXG4gICAgXCJwYXNzd29yZFwiOiBcIjEyMTJcIixcclxuICAgIFwiZGF0YWJhc2VcIjogXCJkYXRhYmFzZV9kZXZlbG9wbWVudFwiLFxyXG4gICAgXCJob3N0XCI6IFwiMTI3LjAuMC4xXCIsXHJcbiAgICBcImRpYWxlY3RcIjogXCJteXNxbFwiLFxyXG4gICAgXCJvcGVyYXRvcnNBbGlhc2VzXCI6IGZhbHNlXHJcbiAgfVxyXG4gKi8iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "get",
        "req",
        "res",
        "models",
        "User",
        "findByPk",
        "then",
        "users",
        "json"
      ],
      "mappings": ";;AAAA;;;;AAEAA,MAAM,CAACC,OAAP,GAAiB,UAAAC,GAAG,EAAI;AACpBA,EAAAA,GAAG,CAACC,GAAJ,CAAQ,MAAR,EAAgB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAE1BC,uBAAOC,IAAP,CAAYC,QAAZ,CAAqB,CAArB,EAAwBC,IAAxB,CAA6B,UAACC,KAAD,EAAS;AAElCL,MAAAA,GAAG,CAACM,IAAJ,CAAS;AACLD,QAAAA,KAAK,EAALA;AADK,OAAT;AAGH,KALD;AAOH,GATD;AAUH,CAXD;AAaA",
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes",
      "sourcesContent": [
        "import models from '../models'\r\n\r\nmodule.exports = app => {\r\n    app.get('/api', (req, res) => {\r\n\r\n        models.User.findByPk(1).then((users)=>{\r\n            \r\n            res.json({\r\n                users\r\n            })\r\n        })\r\n        \r\n    })\r\n}\r\n\r\n/**\r\n * \r\n * \"development\": {\r\n    \"username\": \"root\",\r\n    \"password\": \"1212\",\r\n    \"database\": \"database_development\",\r\n    \"host\": \"127.0.0.1\",\r\n    \"dialect\": \"mysql\",\r\n    \"operatorsAliases\": false\r\n  }\r\n */"
      ]
    },
    "sourceType": "script",
    "mtime": 1578965545318
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"filename\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\\\\routes\\\\input.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes\\input.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes\\input.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes\\input.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes",
        "sourceFileName": "input.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _verifyToken = _interopRequireDefault(require(\"../utils/verifyToken\"));\n\nvar _models = _interopRequireDefault(require(\"../models\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.exports = function (app) {\n  // List Input/service\n  app.get('/api/inputs', _verifyToken[\"default\"], function (req, res) {\n    _models[\"default\"].Input.findAll({\n      include: [{\n        model: _models[\"default\"].Article\n      }, {\n        model: _models[\"default\"].Provider\n      }, {\n        model: _models[\"default\"].Order\n      }]\n    }).then(function (inputs) {\n      res.json({\n        inputs: inputs\n      });\n    });\n  }), // REGISTER USER V\n  app.post('/api/inputs', _verifyToken[\"default\"], function (req, res) {\n    // Params\n    var Input = req.body; // Verify if exist into models.inputs\n\n    _models[\"default\"].Input.create(Input).then(function (inputs) {\n      inputs.update({\n        internal_code: \"IN\" + inputs.id\n      }).then(function (e) {\n        _models[\"default\"].Article.findOne({\n          where: {\n            id: Input.articleId\n          }\n        }).then(function (inputsx) {\n          return res.json({\n            inputsx: inputsx,\n            'code': 1\n          });\n        });\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Cannot add Input',\n        'code': 0\n      });\n    });\n  }); // UPDATE Input\n\n  app.put('/api/inputs/:id', _verifyToken[\"default\"], function (req, res) {\n    // Params\n    var Input = req.body; // Verify if exist into models.inputs\n\n    _models[\"default\"].Input.findOne({\n      attributes: [\"id\"],\n      where: {\n        id: req.params.id\n      }\n    }).then(function (InputFound2) {\n      InputFound2.update(Input).then(function (inputs) {\n        return res.json({\n          inputs: inputs,\n          'code': 1\n        });\n      })[\"catch\"](function (err) {\n        return res.json({\n          'error': 'Cannot Update Input',\n          'code': 0\n        });\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify Input',\n        err: err,\n        'code': 0\n      });\n    });\n  }); // Delete Input\n\n  app[\"delete\"]('/api/inputs/:id', _verifyToken[\"default\"], function (req, res) {\n    // Params\n    var Input = {\n      id: req.params.id\n    }; // Verify if exist into models.inputs\n\n    _models[\"default\"].Input.findOne({\n      attributes: [\"id\"],\n      where: {\n        id: Input.id\n      }\n    }).then(function (InputFound2) {\n      InputFound2.destroy(Input).then(function () {\n        return res.json({\n          'status': 'success',\n          'code': 1\n        });\n      })[\"catch\"](function (err) {\n        return res.json({\n          'error': 'Cannot Delete Input',\n          'code': 0\n        });\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify Input',\n        err: err,\n        'code': 0\n      });\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "input.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "get",
        "verifyToken",
        "req",
        "res",
        "models",
        "Input",
        "findAll",
        "include",
        "model",
        "Article",
        "Provider",
        "Order",
        "then",
        "inputs",
        "json",
        "post",
        "body",
        "create",
        "update",
        "internal_code",
        "id",
        "e",
        "findOne",
        "where",
        "articleId",
        "inputsx",
        "err",
        "put",
        "attributes",
        "params",
        "InputFound2",
        "destroy"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes",
      "sourcesContent": [
        "\r\nimport verifyToken from '../utils/verifyToken'\r\nimport models from '../models'\r\n\r\n\r\nmodule.exports = app => {\r\n\r\n    // List Input/service\r\n    app.get('/api/inputs', verifyToken, (req, res) => {\r\n        models.Input.findAll({include:[{model:models.Article},{model: models.Provider},{model:models.Order}]}).then((inputs) => {\r\n            res.json({\r\n                inputs\r\n            })\r\n        })\r\n    }),\r\n    // REGISTER USER V\r\n    app.post('/api/inputs', verifyToken, (req, res) => {\r\n        // Params\r\n        var Input = req.body\r\n\r\n        // Verify if exist into models.inputs\r\n        \r\n        models.Input.create(Input)\r\n            .then((inputs) => {\r\n                inputs.update({internal_code: \"IN\"+inputs.id}).then(e=>{\r\n                    models.Article.findOne({\r\n                        where: { id: Input.articleId }\r\n                    })\r\n                        .then((inputsx) => {\r\n                        return res.json({ inputsx, 'code': 1 })\r\n                    })\r\n\r\n                })\r\n              \r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Cannot add Input', 'code': 0 })\r\n            })\r\n               \r\n\r\n       \r\n    })\r\n\r\n    // UPDATE Input\r\n    app.put('/api/inputs/:id', verifyToken, (req, res) => {\r\n\r\n        // Params\r\n        var Input = req.body\r\n\r\n        // Verify if exist into models.inputs\r\n\r\n        models.Input.findOne({\r\n            attributes: [\"id\"],\r\n            where: { id: req.params.id }\r\n        })\r\n            .then((InputFound2) => {\r\n                InputFound2.update(Input)\r\n                    .then((inputs) => {\r\n                        return res.json({ inputs, 'code': 1 })\r\n                    })\r\n                    .catch((err) => {\r\n                        return res.json({ 'error': 'Cannot Update Input', 'code': 0 })\r\n                    })\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify Input', err, 'code': 0 })\r\n            })\r\n\r\n    })\r\n\r\n     // Delete Input\r\n     app.delete('/api/inputs/:id', verifyToken, (req, res) => {\r\n\r\n        // Params\r\n        var Input = { id:req.params.id}\r\n\r\n        // Verify if exist into models.inputs\r\n\r\n        models.Input.findOne({\r\n            attributes: [\"id\"],\r\n            where: { id: Input.id }\r\n        })\r\n            .then((InputFound2) => {\r\n                InputFound2.destroy(Input)\r\n                    .then(() => {\r\n                        return res.json({ 'status':'success', 'code': 1 })\r\n                    })\r\n                    .catch((err) => {\r\n                        return res.json({ 'error': 'Cannot Delete Input', 'code': 0 })\r\n                    })\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify Input', err, 'code': 0 })\r\n            })\r\n\r\n    })\r\n   }\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581944181543
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"filename\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\\\\routes\\\\location.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes\\location.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes\\location.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes\\location.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes",
        "sourceFileName": "location.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _verifyToken = _interopRequireDefault(require(\"../utils/verifyToken\"));\n\nvar _models = _interopRequireDefault(require(\"../models\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.exports = function (app) {\n  // List Location/service\n  app.get('/api/locations', _verifyToken[\"default\"], function (req, res) {\n    _models[\"default\"].Location.findAll().then(function (locations) {\n      res.json({\n        locations: locations\n      });\n    });\n  }), // REGISTER V\n  app.post('/api/locations', _verifyToken[\"default\"], function (req, res) {\n    // Params\n    var Location = req.body; // Verify if exist into models.locations\n\n    _models[\"default\"].Location.findOne({\n      attributes: [\"description\"],\n      where: {\n        description: Location.description\n      }\n    }).then(function (LocationFound) {\n      if (!LocationFound) {\n        _models[\"default\"].Location.create(Location).then(function (locations) {\n          return res.json({\n            locations: locations,\n            'code': 1\n          });\n        })[\"catch\"](function (err) {\n          return res.json({\n            'error': 'Cannot add Location',\n            'code': 0\n          });\n        });\n      } else {\n        return res.json({\n          'error': 'product already exist',\n          'code': 11\n        });\n      }\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify Location',\n        err: err,\n        'code': 0\n      });\n    });\n  }); // UPDATE Location\n\n  app.put('/api/locations/:id', _verifyToken[\"default\"], function (req, res) {\n    // Params\n    var Location = req.body; // Verify if exist into models.locations\n\n    _models[\"default\"].Location.findOne({\n      attributes: [\"id\"],\n      where: {\n        id: req.params.id\n      }\n    }).then(function (LocationFound2) {\n      LocationFound2.update(Location).then(function (locations) {\n        return res.json({\n          locations: locations,\n          'code': 1\n        });\n      })[\"catch\"](function (err) {\n        return res.json({\n          'error': 'Cannot Update Location',\n          'code': 0\n        });\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify Location',\n        err: err,\n        'code': 0\n      });\n    });\n  }); // Delete Location\n\n  app[\"delete\"]('/api/locations/:id', _verifyToken[\"default\"], function (req, res) {\n    // Params\n    var Location = {\n      id: req.params.id\n    }; // Verify if exist into models.locations\n\n    _models[\"default\"].Location.findOne({\n      attributes: [\"id\"],\n      where: {\n        id: Location.id\n      }\n    }).then(function (LocationFound2) {\n      LocationFound2.destroy(Location).then(function () {\n        return res.json({\n          'status': 'success',\n          'code': 1\n        });\n      })[\"catch\"](function (err) {\n        return res.json({\n          'error': 'Cannot Delete Location',\n          'code': 0\n        });\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify Location',\n        err: err,\n        'code': 0\n      });\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvY2F0aW9uLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJhcHAiLCJnZXQiLCJ2ZXJpZnlUb2tlbiIsInJlcSIsInJlcyIsIm1vZGVscyIsIkxvY2F0aW9uIiwiZmluZEFsbCIsInRoZW4iLCJsb2NhdGlvbnMiLCJqc29uIiwicG9zdCIsImJvZHkiLCJmaW5kT25lIiwiYXR0cmlidXRlcyIsIndoZXJlIiwiZGVzY3JpcHRpb24iLCJMb2NhdGlvbkZvdW5kIiwiY3JlYXRlIiwiZXJyIiwicHV0IiwiaWQiLCJwYXJhbXMiLCJMb2NhdGlvbkZvdW5kMiIsInVwZGF0ZSIsImRlc3Ryb3kiXSwibWFwcGluZ3MiOiI7O0FBQ0E7O0FBQ0E7Ozs7QUFHQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUFDLEdBQUcsRUFBSTtBQUVwQjtBQUNBQSxFQUFBQSxHQUFHLENBQUNDLEdBQUosQ0FBUSxnQkFBUixFQUEwQkMsdUJBQTFCLEVBQXVDLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ2pEQyx1QkFBT0MsUUFBUCxDQUFnQkMsT0FBaEIsR0FBMEJDLElBQTFCLENBQStCLFVBQUNDLFNBQUQsRUFBZTtBQUUxQ0wsTUFBQUEsR0FBRyxDQUFDTSxJQUFKLENBQVM7QUFDTEQsUUFBQUEsU0FBUyxFQUFUQTtBQURLLE9BQVQ7QUFHSCxLQUxEO0FBTUgsR0FQRCxHQVFBO0FBQ0FULEVBQUFBLEdBQUcsQ0FBQ1csSUFBSixDQUFTLGdCQUFULEVBQTJCVCx1QkFBM0IsRUFBd0MsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDbEQ7QUFDQSxRQUFJRSxRQUFRLEdBQUdILEdBQUcsQ0FBQ1MsSUFBbkIsQ0FGa0QsQ0FJbEQ7O0FBQ0FQLHVCQUFPQyxRQUFQLENBQWdCTyxPQUFoQixDQUF3QjtBQUNwQkMsTUFBQUEsVUFBVSxFQUFFLENBQUMsYUFBRCxDQURRO0FBRXBCQyxNQUFBQSxLQUFLLEVBQUU7QUFBRUMsUUFBQUEsV0FBVyxFQUFFVixRQUFR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QUQsRUFBb0I7QUFDdEJBLE1BQUFBLGNBQWMsQ0FBQ0UsT0FBZixDQUF1Qm5CLFFBQXZCLEVBQ0tFLElBREwsQ0FDVSxZQUFNO0FBQ1IsZUFBT0osR0FBRyxDQUFDTSxJQUFKLENBQVM7QUFBRSxvQkFBUyxTQUFYO0FBQXNCLGtCQUFRO0FBQTlCLFNBQVQsQ0FBUDtBQUNILE9BSEwsV0FJVyxVQUFDUyxHQUFELEVBQVM7QUFDWixlQUFPZixHQUFHLENBQUNNLElBQUosQ0FBUztBQUFFLG1CQUFTLHdCQUFYO0FBQXFDLGtCQUFRO0FBQTdDLFNBQVQsQ0FBUDtBQUNILE9BTkw7QUFRSCxLQWJMLFdBY1csVUFBQ1MsR0FBRCxFQUFTO0FBQ1osYUFBT2YsR0FBRyxDQUFDTSxJQUFKLENBQVM7QUFBRSxpQkFBUywyQkFBWDtBQUF3Q1MsUUFBQUEsR0FBRyxFQUFIQSxHQUF4QztBQUE2QyxnQkFBUTtBQUFyRCxPQUFULENBQVA7QUFDSCxLQWhCTDtBQWtCSCxHQXpCQTtBQTBCRCxDQWpHSiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGFzdXNcXERvY3VtZW50c1xcS3Jvd1xcQXp1bHVsYSAtIEJveWthXFxVc3RvY2sgYXBpXFxzcmNcXHJvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5pbXBvcnQgdmVyaWZ5VG9rZW4gZnJvbSAnLi4vdXRpbHMvdmVyaWZ5VG9rZW4nXHJcbmltcG9ydCBtb2RlbHMgZnJvbSAnLi4vbW9kZWxzJ1xyXG5cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gYXBwID0+IHtcclxuXHJcbiAgICAvLyBMaXN0IExvY2F0aW9uL3NlcnZpY2VcclxuICAgIGFwcC5nZXQoJy9hcGkvbG9jYXRpb25zJywgdmVyaWZ5VG9rZW4sIChyZXEsIHJlcykgPT4ge1xyXG4gICAgICAgIG1vZGVscy5Mb2NhdGlvbi5maW5kQWxsKCkudGhlbigobG9jYXRpb25zKSA9PiB7XHJcblxyXG4gICAgICAgICAgICByZXMuanNvbih7XHJcbiAgICAgICAgICAgICAgICBsb2NhdGlvbnNcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9KVxyXG4gICAgfSksXHJcbiAgICAvLyBSRUdJU1RFUiBWXHJcbiAgICBhcHAucG9zdCgnL2FwaS9sb2NhdGlvbnMnLCB2ZXJpZnlUb2tlbiwgKHJlcSwgcmVzKSA9PiB7XHJcbiAgICAgICAgLy8gUGFyYW1zXHJcbiAgICAgICAgdmFyIExvY2F0aW9uID0gcmVxLmJvZHlcclxuXHJcbiAgICAgICAgLy8gVmVyaWZ5IGlmIGV4aXN0IGludG8gbW9kZWxzLmxvY2F0aW9uc1xyXG4gICAgICAgIG1vZGVscy5Mb2NhdGlvbi5maW5kT25lKHtcclxuICAgICAgICAgICAgYXR0cmlidXRlczogW1wiZGVzY3JpcHRpb25cIl0sXHJcbiAgICAgICAgICAgIHdoZXJlOiB7IGRlc2NyaXB0aW9uOiBMb2NhdGlvbi5kZXNjcmlwdGlvbiB9XHJcbiAgICAgICAgfSlcclxuICAgICAgICAgICAgLnRoZW4oKExvY2F0aW9uRm91bmQpID0+IHtcclxuICAgICAgICAgICAgICAgIGlmICghTG9jYXRpb25Gb3VuZCkge1xyXG4gICAgICAgICAgICAgICAgICAgIG1vZGVscy5Mb2NhdGlvbi5jcmVhdGUoTG9jYXRpb24pXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC50aGVuKChsb2NhdGlvbnMpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByZXMuanNvbih7IGxvY2F0aW9ucywgJ2NvZGUnOiAxIH0pXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzLmpzb24oeyAnZXJyb3InOiAnQ2Fubm90IGFkZCBMb2NhdGlvbicsICdjb2RlJzogMCB9KVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzLmpzb24oeyAnZXJyb3InOiAncHJvZHVjdCBhbHJlYWR5IGV4aXN0JywgJ2NvZGUnOiAxMSB9KVxyXG4gICAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgICAgICAgICAgIHJldHVybiByZXMuanNvbih7ICdlcnJvcic6ICdVbmFibGUgdG8gdmVyaWZ5IExvY2F0aW9uJywgZXJyLCAnY29kZSc6IDAgfSlcclxuICAgICAgICAgICAgfSlcclxuXHJcbiAgICAgICBcclxuICAgIH0pXHJcblxyXG4gICAgLy8gVVBEQVRFIExvY2F0aW9uXHJcbiAgICBhcHAucHV0KCcvYXBpL2xvY2F0aW9ucy86aWQnLCB2ZXJpZnlUb2tlbiwgKHJlcSwgcmVzKSA9PiB7XHJcblxyXG4gICAgICAgIC8vIFBhcmFtc1xyXG4gICAgICAgIHZhciBMb2NhdGlvbiA9IHJlcS5ib2R5XHJcblxyXG4gICAgICAgIC8vIFZlcmlmeSBpZiBleGlzdCBpbnRvIG1vZGVscy5sb2NhdGlvbnNcclxuXHJcbiAgICAgICAgbW9kZWxzLkxvY2F0aW9uLmZpbmRPbmUoe1xyXG4gICAgICAgICAgICBhdHRyaWJ1dGVzOiBbXCJpZFwiXSxcclxuICAgICAgICAgICAgd2hlcmU6IHsgaWQ6IHJlcS5wYXJhbXMuaWQgfVxyXG4gICAgICAgIH0pXHJcbiAgICAgICAgICAgIC50aGVuKChMb2NhdGlvbkZvdW5kMikgPT4ge1xyXG4gICAgICAgICAgICAgICAgTG9jYXRpb25Gb3VuZDIudXBkYXRlKExvY2F0aW9uKVxyXG4gICAgICAgICAgICAgICAgICAgIC50aGVuKChsb2NhdGlvbnMpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5qc29uKHsgbG9jYXRpb25zLCAnY29kZSc6IDEgfSlcclxuICAgICAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByZXMuanNvbih7ICdlcnJvcic6ICdDYW5ub3QgVXBkYXRlIExvY2F0aW9uJywgJ2NvZGUnOiAwIH0pXHJcbiAgICAgICAgICAgICAgICAgICAgfSlcclxuXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzLmpzb24oeyAnZXJyb3InOiAnVW5hYmxlIHRvIHZlcmlmeSBMb2NhdGlvbicsIGVyciwgJ2NvZGUnOiAwIH0pXHJcbiAgICAgICAgICAgIH0pXHJcblxyXG4gICAgfSlcclxuXHJcbiAgICAgLy8gRGVsZXRlIExvY2F0aW9uXHJcbiAgICAgYXBwLmRlbGV0ZSgnL2FwaS9sb2NhdGlvbnMvOmlkJywgdmVyaWZ5VG9rZW4sIChyZXEsIHJlcykgPT4ge1xyXG5cclxuICAgICAgICAvLyBQYXJhbXNcclxuICAgICAgICB2YXIgTG9jYXRpb24gPSB7IGlkOnJlcS5wYXJhbXMuaWR9XHJcblxyXG4gICAgICAgIC8vIFZlcmlmeSBpZiBleGlzdCBpbnRvIG1vZGVscy5sb2NhdGlvbnNcclxuXHJcbiAgICAgICAgbW9kZWxzLkxvY2F0aW9uLmZpbmRPbmUoe1xyXG4gICAgICAgICAgICBhdHRyaWJ1dGVzOiBbXCJpZFwiXSxcclxuICAgICAgICAgICAgd2hlcmU6IHsgaWQ6IExvY2F0aW9uLmlkIH1cclxuICAgICAgICB9KVxyXG4gICAgICAgICAgICAudGhlbigoTG9jYXRpb25Gb3VuZDIpID0+IHtcclxuICAgICAgICAgICAgICAgIExvY2F0aW9uRm91bmQyLmRlc3Ryb3koTG9jYXRpb24pXHJcbiAgICAgICAgICAgICAgICAgICAgLnRoZW4oKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzLmpzb24oeyAnc3RhdHVzJzonc3VjY2VzcycsICdjb2RlJzogMSB9KVxyXG4gICAgICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5qc29uKHsgJ2Vycm9yJzogJ0Nhbm5vdCBEZWxldGUgTG9jYXRpb24nLCAnY29kZSc6IDAgfSlcclxuICAgICAgICAgICAgICAgICAgICB9KVxyXG5cclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgICAgICAgICAgIHJldHVybiByZXMuanNvbih7ICdlcnJvcic6ICdVbmFibGUgdG8gdmVyaWZ5IExvY2F0aW9uJywgZXJyLCAnY29kZSc6IDAgfSlcclxuICAgICAgICAgICAgfSlcclxuXHJcbiAgICB9KVxyXG4gICB9XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "location.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "get",
        "verifyToken",
        "req",
        "res",
        "models",
        "Location",
        "findAll",
        "then",
        "locations",
        "json",
        "post",
        "body",
        "findOne",
        "attributes",
        "where",
        "description",
        "LocationFound",
        "create",
        "err",
        "put",
        "id",
        "params",
        "LocationFound2",
        "update",
        "destroy"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes",
      "sourcesContent": [
        "\r\nimport verifyToken from '../utils/verifyToken'\r\nimport models from '../models'\r\n\r\n\r\nmodule.exports = app => {\r\n\r\n    // List Location/service\r\n    app.get('/api/locations', verifyToken, (req, res) => {\r\n        models.Location.findAll().then((locations) => {\r\n\r\n            res.json({\r\n                locations\r\n            })\r\n        })\r\n    }),\r\n    // REGISTER V\r\n    app.post('/api/locations', verifyToken, (req, res) => {\r\n        // Params\r\n        var Location = req.body\r\n\r\n        // Verify if exist into models.locations\r\n        models.Location.findOne({\r\n            attributes: [\"description\"],\r\n            where: { description: Location.description }\r\n        })\r\n            .then((LocationFound) => {\r\n                if (!LocationFound) {\r\n                    models.Location.create(Location)\r\n                        .then((locations) => {\r\n                            return res.json({ locations, 'code': 1 })\r\n                        })\r\n                        .catch((err) => {\r\n                            return res.json({ 'error': 'Cannot add Location', 'code': 0 })\r\n                        })\r\n                } else {\r\n                    return res.json({ 'error': 'product already exist', 'code': 11 })\r\n                }\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify Location', err, 'code': 0 })\r\n            })\r\n\r\n       \r\n    })\r\n\r\n    // UPDATE Location\r\n    app.put('/api/locations/:id', verifyToken, (req, res) => {\r\n\r\n        // Params\r\n        var Location = req.body\r\n\r\n        // Verify if exist into models.locations\r\n\r\n        models.Location.findOne({\r\n            attributes: [\"id\"],\r\n            where: { id: req.params.id }\r\n        })\r\n            .then((LocationFound2) => {\r\n                LocationFound2.update(Location)\r\n                    .then((locations) => {\r\n                        return res.json({ locations, 'code': 1 })\r\n                    })\r\n                    .catch((err) => {\r\n                        return res.json({ 'error': 'Cannot Update Location', 'code': 0 })\r\n                    })\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify Location', err, 'code': 0 })\r\n            })\r\n\r\n    })\r\n\r\n     // Delete Location\r\n     app.delete('/api/locations/:id', verifyToken, (req, res) => {\r\n\r\n        // Params\r\n        var Location = { id:req.params.id}\r\n\r\n        // Verify if exist into models.locations\r\n\r\n        models.Location.findOne({\r\n            attributes: [\"id\"],\r\n            where: { id: Location.id }\r\n        })\r\n            .then((LocationFound2) => {\r\n                LocationFound2.destroy(Location)\r\n                    .then(() => {\r\n                        return res.json({ 'status':'success', 'code': 1 })\r\n                    })\r\n                    .catch((err) => {\r\n                        return res.json({ 'error': 'Cannot Delete Location', 'code': 0 })\r\n                    })\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify Location', err, 'code': 0 })\r\n            })\r\n\r\n    })\r\n   }\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1580983950006
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"filename\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\\\\routes\\\\operation.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes\\operation.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes\\operation.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes\\operation.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes",
        "sourceFileName": "operation.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _verifyToken = _interopRequireDefault(require(\"../utils/verifyToken\"));\n\nvar _models = _interopRequireDefault(require(\"../models\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.exports = function (app) {\n  // List Operation/service\n  app.get('/api/operations', _verifyToken[\"default\"], function (req, res) {\n    _models[\"default\"].Operation.findAll().then(function (operations) {\n      res.json({\n        operations: operations\n      });\n    });\n  }), // REGISTER V\n  app.post('/api/operations', _verifyToken[\"default\"], function (req, res) {\n    // Params\n    var Operation = req.body; // Verify if exist into models.operations\n\n    _models[\"default\"].Operation.findOne({\n      attributes: [\"name\"],\n      where: {\n        name: Operation.name\n      }\n    }).then(function (OperationFound) {\n      if (!OperationFound) {\n        _models[\"default\"].Operation.create(Operation).then(function (operations) {\n          operations.update({\n            internal_code: 'OPE' + operations.id\n          }).then(function (f) {\n            return res.json({\n              operations: operations,\n              'code': 1\n            });\n          })[\"catch\"](function (err) {\n            return res.json({\n              'error': 'Cannot add Operation',\n              'code': 0\n            });\n          });\n        })[\"catch\"](function (err) {\n          return res.json({\n            'error': 'Cannot add Operation',\n            'code': 0\n          });\n        });\n      } else {\n        return res.json({\n          'error': 'product already exist',\n          'code': 11\n        });\n      }\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify Operation',\n        err: err,\n        'code': 0\n      });\n    });\n  }); // UPDATE Operation\n\n  app.put('/api/operations/:id', _verifyToken[\"default\"], function (req, res) {\n    // Params\n    var Operation = req.body; // Verify if exist into models.operations\n\n    _models[\"default\"].Operation.findOne({\n      attributes: [\"id\"],\n      where: {\n        id: req.params.id\n      }\n    }).then(function (OperationFound2) {\n      OperationFound2.update(Operation).then(function (operations) {\n        return res.json({\n          operations: operations,\n          'code': 1\n        });\n      })[\"catch\"](function (err) {\n        return res.json({\n          'error': 'Cannot Update Operation',\n          'code': 0\n        });\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify Operation',\n        err: err,\n        'code': 0\n      });\n    });\n  }); // Delete Operation\n\n  app[\"delete\"]('/api/operations/:id', _verifyToken[\"default\"], function (req, res) {\n    // Params\n    var Operation = {\n      id: req.params.id\n    }; // Verify if exist into models.operations\n\n    _models[\"default\"].Operation.findOne({\n      attributes: [\"id\"],\n      where: {\n        id: Operation.id\n      }\n    }).then(function (OperationFound2) {\n      OperationFound2.destroy(Operation).then(function () {\n        return res.json({\n          'status': 'success',\n          'code': 1\n        });\n      })[\"catch\"](function (err) {\n        return res.json({\n          'error': 'Cannot Delete Operation',\n          'code': 0\n        });\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify Operation',\n        err: err,\n        'code': 0\n      });\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9wZXJhdGlvbi5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiYXBwIiwiZ2V0IiwidmVyaWZ5VG9rZW4iLCJyZXEiLCJyZXMiLCJtb2RlbHMiLCJPcGVyYXRpb24iLCJmaW5kQWxsIiwidGhlbiIsIm9wZXJhdGlvbnMiLCJqc29uIiwicG9zdCIsImJvZHkiLCJmaW5kT25lIiwiYXR0cmlidXRlcyIsIndoZXJlIiwibmFtZSIsIk9wZXJhdGlvbkZvdW5kIiwiY3JlYXRlIiwidXBkYXRlIiwiaW50ZXJuYWxfY29kZSIsImlkIiwiZiIsImVyciIsInB1dCIsInBhcmFtcyIsIk9wZXJhdGlvbkZvdW5kMiIsImRlc3Ryb3kiXSwibWFwcGluZ3MiOiI7O0FBQ0E7O0FBQ0E7Ozs7QUFHQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUFDLEdBQUcsRUFBSTtBQUVwQjtBQUNBQSxFQUFBQSxHQUFHLENBQUNDLEdBQUosQ0FBUSxpQkFBUixFQUEyQkMsdUJBQTNCLEVBQXdDLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ2xEQyx1QkFBT0MsU0FBUCxDQUFpQkMsT0FBakIsR0FBMkJDLElBQTNCLENBQWdDLFVBQUNDLFVBQUQsRUFBZ0I7QUFFNUNMLE1BQUFBLEdBQUcsQ0FBQ00sSUFBSixDQUFTO0FBQ0xELFFBQUFBLFVBQVUsRUFBVkE7QUFESyxPQUFUO0FBR0gsS0FMRDtBQU1ILEdBUEQsR0FRQTtBQUNBVCxFQUFBQSxHQUFHLENBQUNXLElBQUosQ0FBUyxpQkFBVCxFQUE0QlQsdUJBQTVCLEVBQXlDLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ25EO0FBQ0EsUUFBSUUsU0FBUyxHQUFHSCxHQUFHLENBQUNTLElBQXBCLENBRm1ELENBSW5EOztBQUNBUCx1QkFBT0MsU0FBUCxDQUFpQk8sT0FBakIsQ0FBeUI7QUFDckJDLE1BQUFBLFVBQVUsRUFBRSxDQUFDLE1BQUQsQ0FEUztBQUVyQkMsTUFBQUEsS0FBSyxFQUFFO0FBQUVDLFFB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QUNBLFFBQUlFLFNBQVMsR0FBRztBQUFFZSxNQUFBQSxFQUFFLEVBQUNsQixHQUFHLENBQUNzQixNQUFKLENBQVdKO0FBQWhCLEtBQWhCLENBSDBELENBSzFEOztBQUVBaEIsdUJBQU9DLFNBQVAsQ0FBaUJPLE9BQWpCLENBQXlCO0FBQ3JCQyxNQUFBQSxVQUFVLEVBQUUsQ0FBQyxJQUFELENBRFM7QUFFckJDLE1BQUFBLEtBQUssRUFBRTtBQUFFTSxRQUFBQSxFQUFFLEVBQUVmLFNBQVMsQ0FBQ2U7QUFBaEI7QUFGYyxLQUF6QixFQUlLYixJQUpMLENBSVUsVUFBQ2tCLGVBQUQsRUFBcUI7QUFDdkJBLE1BQUFBLGVBQWUsQ0FBQ0MsT0FBaEIsQ0FBd0JyQixTQUF4QixFQUNLRSxJQURMLENBQ1UsWUFBTTtBQUNSLGVBQU9KLEdBQUcsQ0FBQ00sSUFBSixDQUFTO0FBQUUsb0JBQVMsU0FBWDtBQUFzQixrQkFBUTtBQUE5QixTQUFULENBQVA7QUFDSCxPQUhMLFdBSVcsVUFBQ2EsR0FBRCxFQUFTO0FBQ1osZUFBT25CLEdBQUcsQ0FBQ00sSUFBSixDQUFTO0FBQUUsbUJBQVMseUJBQVg7QUFBc0Msa0JBQVE7QUFBOUMsU0FBVCxDQUFQO0FBQ0gsT0FOTDtBQVFILEtBYkwsV0FjVyxVQUFDYSxHQUFELEVBQVM7QUFDWixhQUFPbkIsR0FBRyxDQUFDTSxJQUFKLENBQVM7QUFBRSxpQkFBUyw0QkFBWDtBQUF5Q2EsUUFBQUEsR0FBRyxFQUFIQSxHQUF6QztBQUE4QyxnQkFBUTtBQUF0RCxPQUFULENBQVA7QUFDSCxLQWhCTDtBQWtCSCxHQXpCQTtBQTBCRCxDQXhHSiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGFzdXNcXERvY3VtZW50c1xcS3Jvd1xcQXp1bHVsYSAtIEJveWthXFxVc3RvY2sgYXBpXFxzcmNcXHJvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5pbXBvcnQgdmVyaWZ5VG9rZW4gZnJvbSAnLi4vdXRpbHMvdmVyaWZ5VG9rZW4nXHJcbmltcG9ydCBtb2RlbHMgZnJvbSAnLi4vbW9kZWxzJ1xyXG5cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gYXBwID0+IHtcclxuXHJcbiAgICAvLyBMaXN0IE9wZXJhdGlvbi9zZXJ2aWNlXHJcbiAgICBhcHAuZ2V0KCcvYXBpL29wZXJhdGlvbnMnLCB2ZXJpZnlUb2tlbiwgKHJlcSwgcmVzKSA9PiB7XHJcbiAgICAgICAgbW9kZWxzLk9wZXJhdGlvbi5maW5kQWxsKCkudGhlbigob3BlcmF0aW9ucykgPT4ge1xyXG5cclxuICAgICAgICAgICAgcmVzLmpzb24oe1xyXG4gICAgICAgICAgICAgICAgb3BlcmF0aW9uc1xyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIH0pXHJcbiAgICB9KSxcclxuICAgIC8vIFJFR0lTVEVSIFZcclxuICAgIGFwcC5wb3N0KCcvYXBpL29wZXJhdGlvbnMnLCB2ZXJpZnlUb2tlbiwgKHJlcSwgcmVzKSA9PiB7XHJcbiAgICAgICAgLy8gUGFyYW1zXHJcbiAgICAgICAgdmFyIE9wZXJhdGlvbiA9IHJlcS5ib2R5XHJcblxyXG4gICAgICAgIC8vIFZlcmlmeSBpZiBleGlzdCBpbnRvIG1vZGVscy5vcGVyYXRpb25zXHJcbiAgICAgICAgbW9kZWxzLk9wZXJhdGlvbi5maW5kT25lKHtcclxuICAgICAgICAgICAgYXR0cmlidXRlczogW1wibmFtZVwiXSxcclxuICAgICAgICAgICAgd2hlcmU6IHsgbmFtZTogT3BlcmF0aW9uLm5hbWUgfVxyXG4gICAgICAgIH0pXHJcbiAgICAgICAgICAgIC50aGVuKChPcGVyYXRpb25Gb3VuZCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgaWYgKCFPcGVyYXRpb25Gb3VuZCkge1xyXG4gICAgICAgICAgICAgICAgICAgIG1vZGVscy5PcGVyYXRpb24uY3JlYXRlKE9wZXJhdGlvbilcclxuICAgICAgICAgICAgICAgICAgICAgICAgLnRoZW4oKG9wZXJhdGlvbnMpID0+IHtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcGVyYXRpb25zLnVwZGF0ZSh7aW50ZXJuYWxfY29kZTogJ09QRScrb3BlcmF0aW9ucy5pZH0pXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAudGhlbihmPT57XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5qc29uKHsgb3BlcmF0aW9ucywgJ2NvZGUnOiAxIH0pXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzLmpzb24oeyAnZXJyb3InOiAnQ2Fubm90IGFkZCBPcGVyYXRpb24nLCAnY29kZSc6IDAgfSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzLmpzb24oeyAnZXJyb3InOiAnQ2Fubm90IGFkZCBPcGVyYXRpb24nLCAnY29kZSc6IDAgfSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5qc29uKHsgJ2Vycm9yJzogJ3Byb2R1Y3QgYWxyZWFkeSBleGlzdCcsICdjb2RlJzogMTEgfSlcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzLmpzb24oeyAnZXJyb3InOiAnVW5hYmxlIHRvIHZlcmlmeSBPcGVyYXRpb24nLCBlcnIsICdjb2RlJzogMCB9KVxyXG4gICAgICAgICAgICB9KVxyXG5cclxuICAgICAgIFxyXG4gICAgfSlcclxuXHJcbiAgICAvLyBVUERBVEUgT3BlcmF0aW9uXHJcbiAgICBhcHAucHV0KCcvYXBpL29wZXJhdGlvbnMvOmlkJywgdmVyaWZ5VG9rZW4sIChyZXEsIHJlcykgPT4ge1xyXG5cclxuICAgICAgICAvLyBQYXJhbXNcclxuICAgICAgICB2YXIgT3BlcmF0aW9uID0gcmVxLmJvZHlcclxuXHJcbiAgICAgICAgLy8gVmVyaWZ5IGlmIGV4aXN0IGludG8gbW9kZWxzLm9wZXJhdGlvbnNcclxuXHJcbiAgICAgICAgbW9kZWxzLk9wZXJhdGlvbi5maW5kT25lKHtcclxuICAgICAgICAgICAgYXR0cmlidXRlczogW1wiaWRcIl0sXHJcbiAgICAgICAgICAgIHdoZXJlOiB7IGlkOiByZXEucGFyYW1zLmlkIH1cclxuICAgICAgICB9KVxyXG4gICAgICAgICAgICAudGhlbigoT3BlcmF0aW9uRm91bmQyKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBPcGVyYXRpb25Gb3VuZDIudXBkYXRlKE9wZXJhdGlvbilcclxuICAgICAgICAgICAgICAgICAgICAudGhlbigob3BlcmF0aW9ucykgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzLmpzb24oeyBvcGVyYXRpb25zLCAnY29kZSc6IDEgfSlcclxuICAgICAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByZXMuanNvbih7ICdlcnJvcic6ICdDYW5ub3QgVXBkYXRlIE9wZXJhdGlvbicsICdjb2RlJzogMCB9KVxyXG4gICAgICAgICAgICAgICAgICAgIH0pXHJcblxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5qc29uKHsgJ2Vycm9yJzogJ1VuYWJsZSB0byB2ZXJpZnkgT3BlcmF0aW9uJywgZXJyLCAnY29kZSc6IDAgfSlcclxuICAgICAgICAgICAgfSlcclxuXHJcbiAgICB9KVxyXG5cclxuICAgICAvLyBEZWxldGUgT3BlcmF0aW9uXHJcbiAgICAgYXBwLmRlbGV0ZSgnL2FwaS9vcGVyYXRpb25zLzppZCcsIHZlcmlmeVRva2VuLCAocmVxLCByZXMpID0+IHtcclxuXHJcbiAgICAgICAgLy8gUGFyYW1zXHJcbiAgICAgICAgdmFyIE9wZXJhdGlvbiA9IHsgaWQ6cmVxLnBhcmFtcy5pZH1cclxuXHJcbiAgICAgICAgLy8gVmVyaWZ5IGlmIGV4aXN0IGludG8gbW9kZWxzLm9wZXJhdGlvbnNcclxuXHJcbiAgICAgICAgbW9kZWxzLk9wZXJhdGlvbi5maW5kT25lKHtcclxuICAgICAgICAgICAgYXR0cmlidXRlczogW1wiaWRcIl0sXHJcbiAgICAgICAgICAgIHdoZXJlOiB7IGlkOiBPcGVyYXRpb24uaWQgfVxyXG4gICAgICAgIH0pXHJcbiAgICAgICAgICAgIC50aGVuKChPcGVyYXRpb25Gb3VuZDIpID0+IHtcclxuICAgICAgICAgICAgICAgIE9wZXJhdGlvbkZvdW5kMi5kZXN0cm95KE9wZXJhdGlvbilcclxuICAgICAgICAgICAgICAgICAgICAudGhlbigoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByZXMuanNvbih7ICdzdGF0dXMnOidzdWNjZXNzJywgJ2NvZGUnOiAxIH0pXHJcbiAgICAgICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgICAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzLmpzb24oeyAnZXJyb3InOiAnQ2Fubm90IERlbGV0ZSBPcGVyYXRpb24nLCAnY29kZSc6IDAgfSlcclxuICAgICAgICAgICAgICAgICAgICB9KVxyXG5cclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgICAgICAgICAgIHJldHVybiByZXMuanNvbih7ICdlcnJvcic6ICdVbmFibGUgdG8gdmVyaWZ5IE9wZXJhdGlvbicsIGVyciwgJ2NvZGUnOiAwIH0pXHJcbiAgICAgICAgICAgIH0pXHJcblxyXG4gICAgfSlcclxuICAgfVxyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "operation.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "get",
        "verifyToken",
        "req",
        "res",
        "models",
        "Operation",
        "findAll",
        "then",
        "operations",
        "json",
        "post",
        "body",
        "findOne",
        "attributes",
        "where",
        "name",
        "OperationFound",
        "create",
        "update",
        "internal_code",
        "id",
        "f",
        "err",
        "put",
        "params",
        "OperationFound2",
        "destroy"
      ],
      "mappings": ";;AACA;;AACA;;;;AAGAA,MAAM,CAACC,OAAP,GAAiB,UAAAC,GAAG,EAAI;AAEpB;AACAA,EAAAA,GAAG,CAACC,GAAJ,CAAQ,iBAAR,EAA2BC,uBAA3B,EAAwC,UAACC,GAAD,EAAMC,GAAN,EAAc;AAClDC,uBAAOC,SAAP,CAAiBC,OAAjB,GAA2BC,IAA3B,CAAgC,UAACC,UAAD,EAAgB;AAE5CL,MAAAA,GAAG,CAACM,IAAJ,CAAS;AACLD,QAAAA,UAAU,EAAVA;AADK,OAAT;AAGH,KALD;AAMH,GAPD,GAQA;AACAT,EAAAA,GAAG,CAACW,IAAJ,CAAS,iBAAT,EAA4BT,uBAA5B,EAAyC,UAACC,GAAD,EAAMC,GAAN,EAAc;AACnD;AACA,QAAIE,SAAS,GAAGH,GAAG,CAACS,IAApB,CAFmD,CAInD;;AACAP,uBAAOC,SAAP,CAAiBO,OAAjB,CAAyB;AACrBC,MAAAA,UAAU,EAAE,CAAC,MAAD,CADS;AAErBC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,IAAI,EAAEV,SAAS,CAACU;AAAlB;AAFc,KAAzB,EAIKR,IAJL,CAIU,UAACS,cAAD,EAAoB;AACtB,UAAI,CAACA,cAAL,EAAqB;AACjBZ,2BAAOC,SAAP,CAAiBY,MAAjB,CAAwBZ,SAAxB,EACKE,IADL,CACU,UAACC,UAAD,EAAgB;AAElBA,UAAAA,UAAU,CAACU,MAAX,CAAkB;AAACC,YAAAA,aAAa,EAAE,QAAMX,UAAU,CAACY;AAAjC,WAAlB,EACCb,IADD,CACM,UAAAc,CAAC,EAAE;AACL,mBAAOlB,GAAG,CAACM,IAAJ,CAAS;AAAED,cAAAA,UAAU,EAAVA,UAAF;AAAc,sBAAQ;AAAtB,aAAT,CAAP;AACH,WAHD,WAIO,UAACc,GAAD,EAAS;AACZ,mBAAOnB,GAAG,CAACM,IAAJ,CAAS;AAAE,uBAAS,sBAAX;AAAmC,sBAAQ;AAA3C,aAAT,CAAP;AACH,WAND;AAOH,SAVL,WAWW,UAACa,GAAD,EAAS;AACZ,iBAAOnB,GAAG,CAACM,IAAJ,CAAS;AAAE,qBAAS,sBAAX;AAAmC,oBAAQ;AAA3C,WAAT,CAAP;AACH,SAbL;AAcH,OAfD,MAeO;AACH,eAAON,GAAG,CAACM,IAAJ,CAAS;AAAE,mBAAS,uBAAX;AAAoC,kBAAQ;AAA5C,SAAT,CAAP;AACH;AAEJ,KAxBL,WAyBW,UAACa,GAAD,EAAS;AACZ,aAAOnB,GAAG,CAACM,IAAJ,CAAS;AAAE,iBAAS,4BAAX;AAAyCa,QAAAA,GAAG,EAAHA,GAAzC;AAA8C,gBAAQ;AAAtD,OAAT,CAAP;AACH,KA3BL;AA8BH,GAnCD,CATA,CAHoB,CAiDpB;;AACAvB,EAAAA,GAAG,CAACwB,GAAJ,CAAQ,qBAAR,EAA+BtB,uBAA/B,EAA4C,UAACC,GAAD,EAAMC,GAAN,EAAc;AAEtD;AACA,QAAIE,SAAS,GAAGH,GAAG,CAACS,IAApB,CAHsD,CAKtD;;AAEAP,uBAAOC,SAAP,CAAiBO,OAAjB,CAAyB;AACrBC,MAAAA,UAAU,EAAE,CAAC,IAAD,CADS;AAErBC,MAAAA,KAAK,EAAE;AAAEM,QAAAA,EAAE,EAAElB,GAAG,CAACsB,MAAJ,CAAWJ;AAAjB;AAFc,KAAzB,EAIKb,IAJL,CAIU,UAACkB,eAAD,EAAqB;AACvBA,MAAAA,eAAe,CAACP,MAAhB,CAAuBb,SAAvB,EACKE,IADL,CACU,UAACC,UAAD,EAAgB;AAClB,eAAOL,GAAG,CAACM,IAAJ,CAAS;AAAED,UAAAA,UAAU,EAAVA,UAAF;AAAc,kBAAQ;AAAtB,SAAT,CAAP;AACH,OAHL,WAIW,UAACc,GAAD,EAAS;AACZ,eAAOnB,GAAG,CAACM,IAAJ,CAAS;AAAE,mBAAS,yBAAX;AAAsC,kBAAQ;AAA9C,SAAT,CAAP;AACH,OANL;AAQH,KAbL,WAcW,UAACa,GAAD,EAAS;AACZ,aAAOnB,GAAG,CAACM,IAAJ,CAAS;AAAE,iBAAS,4BAAX;AAAyCa,QAAAA,GAAG,EAAHA,GAAzC;AAA8C,gBAAQ;AAAtD,OAAT,CAAP;AACH,KAhBL;AAkBH,GAzBD,EAlDoB,CA6EnB;;AACAvB,EAAAA,GAAG,UAAH,CAAW,qBAAX,EAAkCE,uBAAlC,EAA+C,UAACC,GAAD,EAAMC,GAAN,EAAc;AAE1D;AACA,QAAIE,SAAS,GAAG;AAAEe,MAAAA,EAAE,EAAClB,GAAG,CAACsB,MAAJ,CAAWJ;AAAhB,KAAhB,CAH0D,CAK1D;;AAEAhB,uBAAOC,SAAP,CAAiBO,OAAjB,CAAyB;AACrBC,MAAAA,UAAU,EAAE,CAAC,IAAD,CADS;AAErBC,MAAAA,KAAK,EAAE;AAAEM,QAAAA,EAAE,EAAEf,SAAS,CAACe;AAAhB;AAFc,KAAzB,EAIKb,IAJL,CAIU,UAACkB,eAAD,EAAqB;AACvBA,MAAAA,eAAe,CAACC,OAAhB,CAAwBrB,SAAxB,EACKE,IADL,CACU,YAAM;AACR,eAAOJ,GAAG,CAACM,IAAJ,CAAS;AAAE,oBAAS,SAAX;AAAsB,kBAAQ;AAA9B,SAAT,CAAP;AACH,OAHL,WAIW,UAACa,GAAD,EAAS;AACZ,eAAOnB,GAAG,CAACM,IAAJ,CAAS;AAAE,mBAAS,yBAAX;AAAsC,kBAAQ;AAA9C,SAAT,CAAP;AACH,OANL;AAQH,KAbL,WAcW,UAACa,GAAD,EAAS;AACZ,aAAOnB,GAAG,CAACM,IAAJ,CAAS;AAAE,iBAAS,4BAAX;AAAyCa,QAAAA,GAAG,EAAHA,GAAzC;AAA8C,gBAAQ;AAAtD,OAAT,CAAP;AACH,KAhBL;AAkBH,GAzBA;AA0BD,CAxGJ",
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes",
      "sourcesContent": [
        "\r\nimport verifyToken from '../utils/verifyToken'\r\nimport models from '../models'\r\n\r\n\r\nmodule.exports = app => {\r\n\r\n    // List Operation/service\r\n    app.get('/api/operations', verifyToken, (req, res) => {\r\n        models.Operation.findAll().then((operations) => {\r\n\r\n            res.json({\r\n                operations\r\n            })\r\n        })\r\n    }),\r\n    // REGISTER V\r\n    app.post('/api/operations', verifyToken, (req, res) => {\r\n        // Params\r\n        var Operation = req.body\r\n\r\n        // Verify if exist into models.operations\r\n        models.Operation.findOne({\r\n            attributes: [\"name\"],\r\n            where: { name: Operation.name }\r\n        })\r\n            .then((OperationFound) => {\r\n                if (!OperationFound) {\r\n                    models.Operation.create(Operation)\r\n                        .then((operations) => {\r\n\r\n                            operations.update({internal_code: 'OPE'+operations.id})\r\n                            .then(f=>{\r\n                                return res.json({ operations, 'code': 1 })\r\n                            })\r\n                            .catch((err) => {\r\n                                return res.json({ 'error': 'Cannot add Operation', 'code': 0 })\r\n                            })\r\n                        })\r\n                        .catch((err) => {\r\n                            return res.json({ 'error': 'Cannot add Operation', 'code': 0 })\r\n                        })\r\n                } else {\r\n                    return res.json({ 'error': 'product already exist', 'code': 11 })\r\n                }\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify Operation', err, 'code': 0 })\r\n            })\r\n\r\n       \r\n    })\r\n\r\n    // UPDATE Operation\r\n    app.put('/api/operations/:id', verifyToken, (req, res) => {\r\n\r\n        // Params\r\n        var Operation = req.body\r\n\r\n        // Verify if exist into models.operations\r\n\r\n        models.Operation.findOne({\r\n            attributes: [\"id\"],\r\n            where: { id: req.params.id }\r\n        })\r\n            .then((OperationFound2) => {\r\n                OperationFound2.update(Operation)\r\n                    .then((operations) => {\r\n                        return res.json({ operations, 'code': 1 })\r\n                    })\r\n                    .catch((err) => {\r\n                        return res.json({ 'error': 'Cannot Update Operation', 'code': 0 })\r\n                    })\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify Operation', err, 'code': 0 })\r\n            })\r\n\r\n    })\r\n\r\n     // Delete Operation\r\n     app.delete('/api/operations/:id', verifyToken, (req, res) => {\r\n\r\n        // Params\r\n        var Operation = { id:req.params.id}\r\n\r\n        // Verify if exist into models.operations\r\n\r\n        models.Operation.findOne({\r\n            attributes: [\"id\"],\r\n            where: { id: Operation.id }\r\n        })\r\n            .then((OperationFound2) => {\r\n                OperationFound2.destroy(Operation)\r\n                    .then(() => {\r\n                        return res.json({ 'status':'success', 'code': 1 })\r\n                    })\r\n                    .catch((err) => {\r\n                        return res.json({ 'error': 'Cannot Delete Operation', 'code': 0 })\r\n                    })\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify Operation', err, 'code': 0 })\r\n            })\r\n\r\n    })\r\n   }\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581088456778
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"filename\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\\\\routes\\\\order.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes\\order.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes\\order.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes\\order.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes",
        "sourceFileName": "order.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _verifyToken = _interopRequireDefault(require(\"../utils/verifyToken\"));\n\nvar _models = _interopRequireDefault(require(\"../models\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.exports = function (app) {\n  // List order/service\n  app.get('/api/orders', _verifyToken[\"default\"], function (req, res) {\n    _models[\"default\"].Order.findAll({\n      include: [_models[\"default\"].Client, _models[\"default\"].Operation, _models[\"default\"].Material, {\n        association: _models[\"default\"].Order.OrderItems,\n        include: [_models[\"default\"].OrderItem.Article]\n      }]\n    }).then(function (orders) {\n      res.json({\n        orders: orders\n      });\n    });\n  }), // REGISTER Orders\n  app.post('/api/orders', _verifyToken[\"default\"], function (req, res) {\n    // Params\n    // Verify if exist into models.orders\n    _models[\"default\"].Order.create(req.body, {\n      include: [_models[\"default\"].OrderItem]\n    }).then(function (orders) {\n      orders.update({\n        internal_code: \"OUT\" + orders.id,\n        internal_code_order: \"OUTPUT\"\n      }).then(function (e) {\n        return res.json({\n          orders: orders,\n          'code': 1\n        });\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Cannot add order',\n        'code': 0\n      });\n    });\n  }); // UPDATE order\n\n  app.put('/api/orders/:id', _verifyToken[\"default\"], function (req, res) {\n    // Params\n    var order = req.body; // Verify if exist into models.orders\n\n    _models[\"default\"].Order.findOne({\n      attributes: [\"id\"],\n      where: {\n        id: req.params.id\n      }\n    }).then(function (orderFound2) {\n      orderFound2.update(order).then(function (orders) {\n        return res.json({\n          orders: orders,\n          'code': 1\n        });\n      })[\"catch\"](function (err) {\n        return res.json({\n          'error': 'Cannot Update order',\n          'code': 0\n        });\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify order',\n        err: err,\n        'code': 0\n      });\n    });\n  }); // Delete order\n\n  app[\"delete\"]('/api/orders/:id', _verifyToken[\"default\"], function (req, res) {\n    // Params\n    var order = {\n      id: req.params.id\n    }; // Verify if exist into models.orders\n\n    _models[\"default\"].Order.findOne({\n      attributes: [\"id\"],\n      where: {\n        id: order.id\n      }\n    }).then(function (orderFound2) {\n      orderFound2.destroy(order).then(function () {\n        _models[\"default\"].OrderItem.destroy({\n          attributes: [\"orderId\"],\n          where: {\n            orderId: order.id\n          }\n        }).then(function () {\n          return res.json({\n            'status': 'success',\n            'code': 1\n          });\n        });\n      })[\"catch\"](function (err) {\n        return res.json({\n          'error': 'Cannot Delete order',\n          'code': 0\n        });\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify order',\n        err: err,\n        'code': 0\n      });\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "order.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "get",
        "verifyToken",
        "req",
        "res",
        "models",
        "Order",
        "findAll",
        "include",
        "Client",
        "Operation",
        "Material",
        "association",
        "OrderItems",
        "OrderItem",
        "Article",
        "then",
        "orders",
        "json",
        "post",
        "create",
        "body",
        "update",
        "internal_code",
        "id",
        "internal_code_order",
        "e",
        "err",
        "put",
        "order",
        "findOne",
        "attributes",
        "where",
        "params",
        "orderFound2",
        "destroy",
        "orderId"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes",
      "sourcesContent": [
        "\r\nimport verifyToken from '../utils/verifyToken'\r\nimport models from '../models'\r\n\r\n\r\nmodule.exports = app => {\r\n\r\n    // List order/service\r\n    app.get('/api/orders', verifyToken, (req, res) => {\r\n        models.Order.findAll(\r\n            {include: [models.Client,models.Operation,models.Material, {association: models.Order.OrderItems, include: [models.OrderItem.Article]}]})\r\n            .then((orders) => {\r\n\r\n            res.json({\r\n                orders\r\n            })\r\n        })\r\n    }),\r\n    // REGISTER Orders\r\n    app.post('/api/orders', verifyToken, (req, res) => {\r\n        // Params\r\n\r\n\r\n        // Verify if exist into models.orders\r\n\r\n        models.Order.create(req.body, {include: [models.OrderItem]})\r\n            .then((orders) => {\r\n                orders.update({internal_code: \"OUT\"+orders.id, internal_code_order:\"OUTPUT\"}).then(e=>{\r\n\r\n                    return res.json({ orders, 'code': 1 })\r\n                })\r\n                \r\n                \r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Cannot add order', 'code': 0 })\r\n            })\r\n            \r\n\r\n       \r\n    })\r\n\r\n    // UPDATE order\r\n    app.put('/api/orders/:id', verifyToken, (req, res) => {\r\n\r\n        // Params\r\n        var order = req.body\r\n\r\n        // Verify if exist into models.orders\r\n\r\n        models.Order.findOne({\r\n            attributes: [\"id\"],\r\n            where: { id: req.params.id }\r\n        })\r\n            .then((orderFound2) => {\r\n                orderFound2.update(order)\r\n                    .then((orders) => {\r\n                        return res.json({ orders, 'code': 1 })\r\n                    })\r\n                    .catch((err) => {\r\n                        return res.json({ 'error': 'Cannot Update order', 'code': 0 })\r\n                    })\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify order', err, 'code': 0 })\r\n            })\r\n\r\n    })\r\n\r\n     // Delete order\r\n     app.delete('/api/orders/:id', verifyToken, (req, res) => {\r\n\r\n        // Params\r\n        var order = { id:req.params.id}\r\n\r\n        // Verify if exist into models.orders\r\n\r\n        models.Order.findOne({\r\n            attributes: [\"id\"],\r\n            where: { id: order.id }\r\n        }).then((orderFound2) => {\r\n                orderFound2.destroy(order)\r\n                    .then(() => {\r\n                        models.OrderItem.destroy({\r\n                            attributes: [\"orderId\"],\r\n                            where: { orderId: order.id }\r\n                        }).then(()=>{\r\n                            return res.json({ 'status':'success', 'code': 1 })\r\n                        }) \r\n                    })\r\n                    .catch((err) => {\r\n                        return res.json({ 'error': 'Cannot Delete order', 'code': 0 })\r\n                    })\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify order', err, 'code': 0 })\r\n            })\r\n\r\n    })\r\n   }\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581691378078
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"filename\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\\\\routes\\\\orderitem.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes\\orderitem.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes\\orderitem.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes\\orderitem.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes",
        "sourceFileName": "orderitem.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _verifyToken = _interopRequireDefault(require(\"../utils/verifyToken\"));\n\nvar _models = _interopRequireDefault(require(\"../models\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.exports = function (app) {\n  // List orderitem/service\n  app.get('/api/orderitems', _verifyToken[\"default\"], function (req, res) {\n    _models[\"default\"].OrderItem.findAll({\n      include: [{\n        model: _models[\"default\"].Article\n      }, {\n        model: _models[\"default\"].Category\n      }, {\n        model: _models[\"default\"].Order\n      }]\n    }).then(function (orderitems) {\n      res.json({\n        orderitems: orderitems\n      });\n    });\n  }), // REGISTER USER V\n  app.post('/api/orderitems', function (req, res) {\n    // Params\n    var orderitem = req.body; // Verify if exist into models.orderitems\n\n    _models[\"default\"].OrderItem.create(orderitem).then(function (orderitems) {\n      return res.json({\n        orderitems: orderitems,\n        'code': 1\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Cannot add orderitem',\n        'code': 0\n      });\n    });\n  }); // UPDATE orderitem\n\n  app.put('/api/orderitems/:id', function (req, res) {\n    // Params\n    var orderitem = req.body; // Verify if exist into models.orderitems\n\n    _models[\"default\"].OrderItem.findOne({\n      attributes: [\"id\"],\n      where: {\n        id: req.params.id\n      }\n    }).then(function (orderitemFound2) {\n      orderitemFound2.update(orderitem).then(function (orderitems) {\n        return res.json({\n          orderitems: orderitems,\n          'code': 1\n        });\n      })[\"catch\"](function (err) {\n        return res.json({\n          'error': 'Cannot Update orderitem',\n          'code': 0\n        });\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify orderitem',\n        err: err,\n        'code': 0\n      });\n    });\n  }); // Delete orderitem\n\n  app[\"delete\"]('/api/orderitems/:id', function (req, res) {\n    // Params\n    var orderitem = {\n      id: req.params.id\n    }; // Verify if exist into models.orderitems\n\n    _models[\"default\"].OrderItem.findOne({\n      attributes: [\"id\"],\n      where: {\n        id: orderitem.id\n      }\n    }).then(function (orderitemFound2) {\n      orderitemFound2.destroy(orderitem).then(function () {\n        return res.json({\n          'status': 'success',\n          'code': 1\n        });\n      })[\"catch\"](function (err) {\n        return res.json({\n          'error': 'Cannot Delete orderitem',\n          'code': 0\n        });\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify orderitem',\n        err: err,\n        'code': 0\n      });\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm9yZGVyaXRlbS5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiYXBwIiwiZ2V0IiwidmVyaWZ5VG9rZW4iLCJyZXEiLCJyZXMiLCJtb2RlbHMiLCJPcmRlckl0ZW0iLCJmaW5kQWxsIiwiaW5jbHVkZSIsIm1vZGVsIiwiQXJ0aWNsZSIsIkNhdGVnb3J5IiwiT3JkZXIiLCJ0aGVuIiwib3JkZXJpdGVtcyIsImpzb24iLCJwb3N0Iiwib3JkZXJpdGVtIiwiYm9keSIsImNyZWF0ZSIsImVyciIsInB1dCIsImZpbmRPbmUiLCJhdHRyaWJ1dGVzIiwid2hlcmUiLCJpZCIsInBhcmFtcyIsIm9yZGVyaXRlbUZvdW5kMiIsInVwZGF0ZSIsImRlc3Ryb3kiXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7Ozs7QUFHQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUFDLEdBQUcsRUFBSTtBQUVwQjtBQUNBQSxFQUFBQSxHQUFHLENBQUNDLEdBQUosQ0FBUSxpQkFBUixFQUEwQkMsdUJBQTFCLEVBQXNDLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBRWhEQyx1QkFBT0MsU0FBUCxDQUFpQkMsT0FBakIsQ0FBeUI7QUFBQ0MsTUFBQUEsT0FBTyxFQUFFLENBQUM7QUFBQ0MsUUFBQUEsS0FBSyxFQUFDSixtQkFBT0s7QUFBZCxPQUFELEVBQXdCO0FBQUNELFFBQUFBLEtBQUssRUFBQ0osbUJBQU9NO0FBQWQsT0FBeEIsRUFBZ0Q7QUFBQ0YsUUFBQUEsS0FBSyxFQUFFSixtQkFBT087QUFBZixPQUFoRDtBQUFWLEtBQXpCLEVBQTRHQyxJQUE1RyxDQUFpSCxVQUFDQyxVQUFELEVBQWdCO0FBQzdIVixNQUFBQSxHQUFHLENBQUNXLElBQUosQ0FBUztBQUNMRCxRQUFBQSxVQUFVLEVBQVZBO0FBREssT0FBVDtBQUdILEtBSkQ7QUFLSCxHQVBELEdBUUE7QUFDQWQsRUFBQUEsR0FBRyxDQUFDZ0IsSUFBSixDQUFTLGlCQUFULEVBQTRCLFVBQUNiLEdBQUQs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VUFBQ0ssR0FBRCxFQUFTO0FBQ1osYUFBT2hCLEdBQUcsQ0FBQ1csSUFBSixDQUFTO0FBQUUsaUJBQVMsNEJBQVg7QUFBeUNLLFFBQUFBLEdBQUcsRUFBSEEsR0FBekM7QUFBOEMsZ0JBQVE7QUFBdEQsT0FBVCxDQUFQO0FBQ0gsS0FoQkw7QUFrQkgsR0F6QkE7QUEwQkQsQ0FyRkoiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxhc3VzXFxEb2N1bWVudHNcXEtyb3dcXEF6dWx1bGEgLSBCb3lrYVxcVXN0b2NrIGFwaVxcc3JjXFxyb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdmVyaWZ5VG9rZW4gZnJvbSAnLi4vdXRpbHMvdmVyaWZ5VG9rZW4nXHJcbmltcG9ydCBtb2RlbHMgZnJvbSAnLi4vbW9kZWxzJ1xyXG5cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gYXBwID0+IHtcclxuICAgIFxyXG4gICAgLy8gTGlzdCBvcmRlcml0ZW0vc2VydmljZVxyXG4gICAgYXBwLmdldCgnL2FwaS9vcmRlcml0ZW1zJyx2ZXJpZnlUb2tlbiwocmVxLCByZXMpID0+IHtcclxuXHJcbiAgICAgICAgbW9kZWxzLk9yZGVySXRlbS5maW5kQWxsKHtpbmNsdWRlOiBbe21vZGVsOm1vZGVscy5BcnRpY2xlfSx7bW9kZWw6bW9kZWxzLkNhdGVnb3J5fSx7bW9kZWw6IG1vZGVscy5PcmRlcn1dfSkudGhlbigob3JkZXJpdGVtcykgPT4ge1xyXG4gICAgICAgICAgICByZXMuanNvbih7XHJcbiAgICAgICAgICAgICAgICBvcmRlcml0ZW1zXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfSlcclxuICAgIH0pLFxyXG4gICAgLy8gUkVHSVNURVIgVVNFUiBWXHJcbiAgICBhcHAucG9zdCgnL2FwaS9vcmRlcml0ZW1zJywgKHJlcSwgcmVzKSA9PiB7XHJcblxyXG4gICAgICAgIC8vIFBhcmFtc1xyXG4gICAgICAgIHZhciBvcmRlcml0ZW0gPSByZXEuYm9keVxyXG5cclxuXHJcbiAgICAgICAgLy8gVmVyaWZ5IGlmIGV4aXN0IGludG8gbW9kZWxzLm9yZGVyaXRlbXNcclxuXHJcbiAgICAgICAgbW9kZWxzLk9yZGVySXRlbS5jcmVhdGUob3JkZXJpdGVtKVxyXG4gICAgICAgICAgICAudGhlbigob3JkZXJpdGVtcykgPT4ge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5qc29uKHsgb3JkZXJpdGVtcywgJ2NvZGUnOiAxIH0pXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzLmpzb24oeyAnZXJyb3InOiAnQ2Fubm90IGFkZCBvcmRlcml0ZW0nLCAnY29kZSc6IDAgfSlcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICBcclxuICAgIH0pXHJcblxyXG4gICAgLy8gVVBEQVRFIG9yZGVyaXRlbVxyXG4gICAgYXBwLnB1dCgnL2FwaS9vcmRlcml0ZW1zLzppZCcsIChyZXEsIHJlcykgPT4ge1xyXG5cclxuICAgICAgICAvLyBQYXJhbXNcclxuICAgICAgICB2YXIgb3JkZXJpdGVtID0gcmVxLmJvZHlcclxuXHJcbiAgICAgICAgLy8gVmVyaWZ5IGlmIGV4aXN0IGludG8gbW9kZWxzLm9yZGVyaXRlbXNcclxuXHJcbiAgICAgICAgbW9kZWxzLk9yZGVySXRlbS5maW5kT25lKHtcclxuICAgICAgICAgICAgYXR0cmlidXRlczogW1wiaWRcIl0sXHJcbiAgICAgICAgICAgIHdoZXJlOiB7IGlkOiByZXEucGFyYW1zLmlkIH1cclxuICAgICAgICB9KVxyXG4gICAgICAgICAgICAudGhlbigob3JkZXJpdGVtRm91bmQyKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBvcmRlcml0ZW1Gb3VuZDIudXBkYXRlKG9yZGVyaXRlbSlcclxuICAgICAgICAgICAgICAgICAgICAudGhlbigob3JkZXJpdGVtcykgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzLmpzb24oeyBvcmRlcml0ZW1zLCAnY29kZSc6IDEgfSlcclxuICAgICAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByZXMuanNvbih7ICdlcnJvcic6ICdDYW5ub3QgVXBkYXRlIG9yZGVyaXRlbScsICdjb2RlJzogMCB9KVxyXG4gICAgICAgICAgICAgICAgICAgIH0pXHJcblxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5qc29uKHsgJ2Vycm9yJzogJ1VuYWJsZSB0byB2ZXJpZnkgb3JkZXJpdGVtJywgZXJyLCAnY29kZSc6IDAgfSlcclxuICAgICAgICAgICAgfSlcclxuXHJcbiAgICB9KVxyXG5cclxuICAgICAvLyBEZWxldGUgb3JkZXJpdGVtXHJcbiAgICAgYXBwLmRlbGV0ZSgnL2FwaS9vcmRlcml0ZW1zLzppZCcsKHJlcSwgcmVzKSA9PiB7XHJcblxyXG4gICAgICAgIC8vIFBhcmFtc1xyXG4gICAgICAgIHZhciBvcmRlcml0ZW0gPSB7IGlkOnJlcS5wYXJhbXMuaWR9XHJcblxyXG4gICAgICAgIC8vIFZlcmlmeSBpZiBleGlzdCBpbnRvIG1vZGVscy5vcmRlcml0ZW1zXHJcblxyXG4gICAgICAgIG1vZGVscy5PcmRlckl0ZW0uZmluZE9uZSh7XHJcbiAgICAgICAgICAgIGF0dHJpYnV0ZXM6IFtcImlkXCJdLFxyXG4gICAgICAgICAgICB3aGVyZTogeyBpZDogb3JkZXJpdGVtLmlkIH1cclxuICAgICAgICB9KVxyXG4gICAgICAgICAgICAudGhlbigob3JkZXJpdGVtRm91bmQyKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBvcmRlcml0ZW1Gb3VuZDIuZGVzdHJveShvcmRlcml0ZW0pXHJcbiAgICAgICAgICAgICAgICAgICAgLnRoZW4oKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzLmpzb24oeyAnc3RhdHVzJzonc3VjY2VzcycsICdjb2RlJzogMSB9KVxyXG4gICAgICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5qc29uKHsgJ2Vycm9yJzogJ0Nhbm5vdCBEZWxldGUgb3JkZXJpdGVtJywgJ2NvZGUnOiAwIH0pXHJcbiAgICAgICAgICAgICAgICAgICAgfSlcclxuXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzLmpzb24oeyAnZXJyb3InOiAnVW5hYmxlIHRvIHZlcmlmeSBvcmRlcml0ZW0nLCBlcnIsICdjb2RlJzogMCB9KVxyXG4gICAgICAgICAgICB9KVxyXG5cclxuICAgIH0pXHJcbiAgIH1cclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "orderitem.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "get",
        "verifyToken",
        "req",
        "res",
        "models",
        "OrderItem",
        "findAll",
        "include",
        "model",
        "Article",
        "Category",
        "Order",
        "then",
        "orderitems",
        "json",
        "post",
        "orderitem",
        "body",
        "create",
        "err",
        "put",
        "findOne",
        "attributes",
        "where",
        "id",
        "params",
        "orderitemFound2",
        "update",
        "destroy"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes",
      "sourcesContent": [
        "import verifyToken from '../utils/verifyToken'\r\nimport models from '../models'\r\n\r\n\r\nmodule.exports = app => {\r\n    \r\n    // List orderitem/service\r\n    app.get('/api/orderitems',verifyToken,(req, res) => {\r\n\r\n        models.OrderItem.findAll({include: [{model:models.Article},{model:models.Category},{model: models.Order}]}).then((orderitems) => {\r\n            res.json({\r\n                orderitems\r\n            })\r\n        })\r\n    }),\r\n    // REGISTER USER V\r\n    app.post('/api/orderitems', (req, res) => {\r\n\r\n        // Params\r\n        var orderitem = req.body\r\n\r\n\r\n        // Verify if exist into models.orderitems\r\n\r\n        models.OrderItem.create(orderitem)\r\n            .then((orderitems) => {\r\n                return res.json({ orderitems, 'code': 1 })\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Cannot add orderitem', 'code': 0 })\r\n            })\r\n           \r\n    })\r\n\r\n    // UPDATE orderitem\r\n    app.put('/api/orderitems/:id', (req, res) => {\r\n\r\n        // Params\r\n        var orderitem = req.body\r\n\r\n        // Verify if exist into models.orderitems\r\n\r\n        models.OrderItem.findOne({\r\n            attributes: [\"id\"],\r\n            where: { id: req.params.id }\r\n        })\r\n            .then((orderitemFound2) => {\r\n                orderitemFound2.update(orderitem)\r\n                    .then((orderitems) => {\r\n                        return res.json({ orderitems, 'code': 1 })\r\n                    })\r\n                    .catch((err) => {\r\n                        return res.json({ 'error': 'Cannot Update orderitem', 'code': 0 })\r\n                    })\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify orderitem', err, 'code': 0 })\r\n            })\r\n\r\n    })\r\n\r\n     // Delete orderitem\r\n     app.delete('/api/orderitems/:id',(req, res) => {\r\n\r\n        // Params\r\n        var orderitem = { id:req.params.id}\r\n\r\n        // Verify if exist into models.orderitems\r\n\r\n        models.OrderItem.findOne({\r\n            attributes: [\"id\"],\r\n            where: { id: orderitem.id }\r\n        })\r\n            .then((orderitemFound2) => {\r\n                orderitemFound2.destroy(orderitem)\r\n                    .then(() => {\r\n                        return res.json({ 'status':'success', 'code': 1 })\r\n                    })\r\n                    .catch((err) => {\r\n                        return res.json({ 'error': 'Cannot Delete orderitem', 'code': 0 })\r\n                    })\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify orderitem', err, 'code': 0 })\r\n            })\r\n\r\n    })\r\n   }\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581520684786
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"filename\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\\\\routes\\\\provider.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes\\provider.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes\\provider.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes\\provider.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes",
        "sourceFileName": "provider.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _verifyToken = _interopRequireDefault(require(\"../utils/verifyToken\"));\n\nvar _models = _interopRequireDefault(require(\"../models\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.exports = function (app) {\n  // List provider/service\n  app.get('/api/providers', _verifyToken[\"default\"], function (req, res) {\n    _models[\"default\"].Provider.findAll().then(function (providers) {\n      res.json({\n        providers: providers\n      });\n    });\n  }), // REGISTER provider\n  app.post('/api/providers', _verifyToken[\"default\"], function (req, res) {\n    // Params\n    var provider = req.body; // Verify if exist into models.providers\n\n    _models[\"default\"].Provider.findOne({\n      attributes: [\"name\"],\n      where: {\n        name: provider.name\n      }\n    }).then(function (providerFound) {\n      if (!providerFound) {\n        _models[\"default\"].Provider.create(provider).then(function (providers) {\n          return providers.update({\n            internal_code: 'FRNC' + providers.id\n          }).then(function (g) {\n            return res.json({\n              providers: providers,\n              'code': 1\n            });\n          })[\"catch\"](function (err) {\n            return res.json({\n              'error': 'Internal Code',\n              'code': 0\n            });\n          });\n        })[\"catch\"](function (err) {\n          return res.json({\n            'error': 'Cannot add provider',\n            'code': 0\n          });\n        });\n      } else {\n        return res.json({\n          'error': 'provider already exist',\n          'code': 11\n        });\n      }\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify provider',\n        err: err,\n        'code': 0\n      });\n    });\n  }); // UPDATE provider\n\n  app.put('/api/providers/:id', _verifyToken[\"default\"], function (req, res) {\n    // Params\n    var provider = req.body; // Verify if exist into models.providers\n\n    _models[\"default\"].Provider.findOne({\n      attributes: [\"id\"],\n      where: {\n        id: req.params.id\n      }\n    }).then(function (providerFound2) {\n      providerFound2.update(provider).then(function (providers) {\n        return res.json({\n          providers: providers,\n          'code': 1\n        });\n      })[\"catch\"](function (err) {\n        return res.json({\n          'error': 'Cannot Update provider',\n          'code': 0\n        });\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify provider',\n        err: err,\n        'code': 0\n      });\n    });\n  }); // Delete provider\n\n  app[\"delete\"]('/api/providers/:id', _verifyToken[\"default\"], function (req, res) {\n    // Params\n    var provider = {\n      id: req.params.id\n    }; // Verify if exist into models.providers\n\n    _models[\"default\"].Provider.findOne({\n      attributes: [\"id\"],\n      where: {\n        id: provider.id\n      }\n    }).then(function (providerFound2) {\n      providerFound2.destroy(provider).then(function () {\n        return res.json({\n          'status': 'success',\n          'code': 1\n        });\n      })[\"catch\"](function (err) {\n        return res.json({\n          'error': 'Cannot Delete provider',\n          'code': 0\n        });\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify provider',\n        err: err,\n        'code': 0\n      });\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "provider.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "get",
        "verifyToken",
        "req",
        "res",
        "models",
        "Provider",
        "findAll",
        "then",
        "providers",
        "json",
        "post",
        "provider",
        "body",
        "findOne",
        "attributes",
        "where",
        "name",
        "providerFound",
        "create",
        "update",
        "internal_code",
        "id",
        "g",
        "err",
        "put",
        "params",
        "providerFound2",
        "destroy"
      ],
      "mappings": ";;AACA;;AACA;;;;AAEAA,MAAM,CAACC,OAAP,GAAiB,UAAAC,GAAG,EAAI;AAEpB;AACAA,EAAAA,GAAG,CAACC,GAAJ,CAAQ,gBAAR,EAA0BC,uBAA1B,EAAuC,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjDC,uBAAOC,QAAP,CAAgBC,OAAhB,GAA0BC,IAA1B,CAA+B,UAACC,SAAD,EAAe;AAE1CL,MAAAA,GAAG,CAACM,IAAJ,CAAS;AACLD,QAAAA,SAAS,EAATA;AADK,OAAT;AAGH,KALD;AAMH,GAPD,GAQA;AACAT,EAAAA,GAAG,CAACW,IAAJ,CAAS,gBAAT,EAA2BT,uBAA3B,EAAwC,UAACC,GAAD,EAAMC,GAAN,EAAc;AAClD;AACA,QAAIQ,QAAQ,GAAGT,GAAG,CAACU,IAAnB,CAFkD,CAIlD;;AACAR,uBAAOC,QAAP,CAAgBQ,OAAhB,CAAwB;AACpBC,MAAAA,UAAU,EAAE,CAAC,MAAD,CADQ;AAEpBC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,IAAI,EAAEL,QAAQ,CAACK;AAAjB;AAFa,KAAxB,EAIKT,IAJL,CAIU,UAACU,aAAD,EAAmB;AACrB,UAAI,CAACA,aAAL,EAAoB;AAChBb,2BAAOC,QAAP,CAAgBa,MAAhB,CAAuBP,QAAvB,EACKJ,IADL,CACU,UAACC,SAAD;AAAA,iBAAeA,SAAS,CAACW,MAAV,CAAiB;AAACC,YAAAA,aAAa,EAAE,SAAOZ,SAAS,CAACa;AAAjC,WAAjB,EAChBd,IADgB,CACX,UAAAe,CAAC,EAAE;AACL,mBAAOnB,GAAG,CAACM,IAAJ,CAAS;AAAED,cAAAA,SAAS,EAATA,SAAF;AAAa,sBAAQ;AAArB,aAAT,CAAP;AACH,WAHgB,WAIV,UAAAe,GAAG,EAAG;AAAC,mBAAOpB,GAAG,CAACM,IAAJ,CAAS;AAAE,uBAAS,eAAX;AAA4B,sBAAQ;AAApC,aAAT,CAAP;AAAyD,WAJtD,CAAf;AAAA,SADV,WAQW,UAACc,GAAD,EAAS;AACZ,iBAAOpB,GAAG,CAACM,IAAJ,CAAS;AAAE,qBAAS,qBAAX;AAAkC,oBAAQ;AAA1C,WAAT,CAAP;AACH,SAVL;AAWC,OAZL,MAYW;AACH,eAAON,GAAG,CAACM,IAAJ,CAAS;AAAE,mBAAS,wBAAX;AAAqC,kBAAQ;AAA7C,SAAT,CAAP;AACH;AAEJ,KArBT,WAsBO,UAACc,GAAD,EAAS;AACZ,aAAOpB,GAAG,CAACM,IAAJ,CAAS;AAAE,iBAAS,2BAAX;AAAwCc,QAAAA,GAAG,EAAHA,GAAxC;AAA6C,gBAAQ;AAArD,OAAT,CAAP;AACH,KAxBD;AA0BH,GA/BD,CATA,CAHoB,CA6CpB;;AACAxB,EAAAA,GAAG,CAACyB,GAAJ,CAAQ,oBAAR,EAA8BvB,uBAA9B,EAA2C,UAACC,GAAD,EAAMC,GAAN,EAAc;AAErD;AACA,QAAIQ,QAAQ,GAAGT,GAAG,CAACU,IAAnB,CAHqD,CAKrD;;AAEAR,uBAAOC,QAAP,CAAgBQ,OAAhB,CAAwB;AACpBC,MAAAA,UAAU,EAAE,CAAC,IAAD,CADQ;AAEpBC,MAAAA,KAAK,EAAE;AAAEM,QAAAA,EAAE,EAAEnB,GAAG,CAACuB,MAAJ,CAAWJ;AAAjB;AAFa,KAAxB,EAIKd,IAJL,CAIU,UAACmB,cAAD,EAAoB;AACtBA,MAAAA,cAAc,CAACP,MAAf,CAAsBR,QAAtB,EACKJ,IADL,CACU,UAACC,SAAD,EAAe;AACjB,eAAOL,GAAG,CAACM,IAAJ,CAAS;AAAED,UAAAA,SAAS,EAATA,SAAF;AAAa,kBAAQ;AAArB,SAAT,CAAP;AACH,OAHL,WAIW,UAACe,GAAD,EAAS;AACZ,eAAOpB,GAAG,CAACM,IAAJ,CAAS;AAAE,mBAAS,wBAAX;AAAqC,kBAAQ;AAA7C,SAAT,CAAP;AACH,OANL;AAQH,KAbL,WAcW,UAACc,GAAD,EAAS;AACZ,aAAOpB,GAAG,CAACM,IAAJ,CAAS;AAAE,iBAAS,2BAAX;AAAwCc,QAAAA,GAAG,EAAHA,GAAxC;AAA6C,gBAAQ;AAArD,OAAT,CAAP;AACH,KAhBL;AAkBH,GAzBD,EA9CoB,CAyEnB;;AACAxB,EAAAA,GAAG,UAAH,CAAW,oBAAX,EAAiCE,uBAAjC,EAA8C,UAACC,GAAD,EAAMC,GAAN,EAAc;AAEzD;AACA,QAAIQ,QAAQ,GAAG;AAAEU,MAAAA,EAAE,EAACnB,GAAG,CAACuB,MAAJ,CAAWJ;AAAhB,KAAf,CAHyD,CAKzD;;AAEAjB,uBAAOC,QAAP,CAAgBQ,OAAhB,CAAwB;AACpBC,MAAAA,UAAU,EAAE,CAAC,IAAD,CADQ;AAEpBC,MAAAA,KAAK,EAAE;AAAEM,QAAAA,EAAE,EAAEV,QAAQ,CAACU;AAAf;AAFa,KAAxB,EAIKd,IAJL,CAIU,UAACmB,cAAD,EAAoB;AACtBA,MAAAA,cAAc,CAACC,OAAf,CAAuBhB,QAAvB,EACKJ,IADL,CACU,YAAM;AACR,eAAOJ,GAAG,CAACM,IAAJ,CAAS;AAAE,oBAAS,SAAX;AAAsB,kBAAQ;AAA9B,SAAT,CAAP;AACH,OAHL,WAIW,UAACc,GAAD,EAAS;AACZ,eAAOpB,GAAG,CAACM,IAAJ,CAAS;AAAE,mBAAS,wBAAX;AAAqC,kBAAQ;AAA7C,SAAT,CAAP;AACH,OANL;AAQH,KAbL,WAcW,UAACc,GAAD,EAAS;AACZ,aAAOpB,GAAG,CAACM,IAAJ,CAAS;AAAE,iBAAS,2BAAX;AAAwCc,QAAAA,GAAG,EAAHA,GAAxC;AAA6C,gBAAQ;AAArD,OAAT,CAAP;AACH,KAhBL;AAkBH,GAzBA;AA0BD,CApGJ",
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes",
      "sourcesContent": [
        "\r\nimport verifyToken from '../utils/verifyToken'\r\nimport models from '../models'\r\n\r\nmodule.exports = app => {\r\n\r\n    // List provider/service\r\n    app.get('/api/providers', verifyToken, (req, res) => {\r\n        models.Provider.findAll().then((providers) => {\r\n\r\n            res.json({\r\n                providers\r\n            })\r\n        })\r\n    }),\r\n    // REGISTER provider\r\n    app.post('/api/providers', verifyToken, (req, res) => {\r\n        // Params\r\n        var provider = req.body\r\n\r\n        // Verify if exist into models.providers\r\n        models.Provider.findOne({\r\n            attributes: [\"name\"],\r\n            where: { name: provider.name }\r\n        })\r\n            .then((providerFound) => {\r\n                if (!providerFound) {\r\n                    models.Provider.create(provider)\r\n                        .then((providers) => providers.update({internal_code: 'FRNC'+providers.id})\r\n                            .then(g=>{\r\n                                return res.json({ providers, 'code': 1 })\r\n                            })\r\n                            .catch(err=> {return res.json({ 'error': 'Internal Code', 'code': 0 })})\r\n                        )\r\n                        \r\n                        .catch((err) => {\r\n                            return res.json({ 'error': 'Cannot add provider', 'code': 0 })\r\n                        })\r\n                    } else {\r\n                        return res.json({ 'error': 'provider already exist', 'code': 11 })\r\n                    }\r\n\r\n                })\r\n        .catch((err) => {\r\n            return res.json({ 'error': 'Unable to verify provider', err, 'code': 0 })\r\n        })\r\n\r\n    })\r\n\r\n    // UPDATE provider\r\n    app.put('/api/providers/:id', verifyToken, (req, res) => {\r\n\r\n        // Params\r\n        var provider = req.body\r\n\r\n        // Verify if exist into models.providers\r\n\r\n        models.Provider.findOne({\r\n            attributes: [\"id\"],\r\n            where: { id: req.params.id }\r\n        })\r\n            .then((providerFound2) => {\r\n                providerFound2.update(provider)\r\n                    .then((providers) => {\r\n                        return res.json({ providers, 'code': 1 })\r\n                    })\r\n                    .catch((err) => {\r\n                        return res.json({ 'error': 'Cannot Update provider', 'code': 0 })\r\n                    })\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify provider', err, 'code': 0 })\r\n            })\r\n\r\n    })\r\n\r\n     // Delete provider\r\n     app.delete('/api/providers/:id', verifyToken, (req, res) => {\r\n\r\n        // Params\r\n        var provider = { id:req.params.id}\r\n\r\n        // Verify if exist into models.providers\r\n\r\n        models.Provider.findOne({\r\n            attributes: [\"id\"],\r\n            where: { id: provider.id }\r\n        })\r\n            .then((providerFound2) => {\r\n                providerFound2.destroy(provider)\r\n                    .then(() => {\r\n                        return res.json({ 'status':'success', 'code': 1 })\r\n                    })\r\n                    .catch((err) => {\r\n                        return res.json({ 'error': 'Cannot Delete provider', 'code': 0 })\r\n                    })\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify provider', err, 'code': 0 })\r\n            })\r\n\r\n    })\r\n   }\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581088438713
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"filename\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\\\\routes\\\\task.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes\\task.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes\\task.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes\\task.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes",
        "sourceFileName": "task.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _verifyToken = _interopRequireDefault(require(\"../utils/verifyToken\"));\n\nvar _models = _interopRequireDefault(require(\"../models\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.exports = function (app) {\n  // List Task\n  app.get('/api/tasks', _verifyToken[\"default\"], function (req, res) {\n    _models[\"default\"].Task.findAll({\n      include: [_models[\"default\"].User]\n    }).then(function (tasks) {\n      res.json({\n        tasks: tasks\n      });\n    });\n  }), // REGISTER tasks\n  app.post('/api/tasks', _verifyToken[\"default\"], function (req, res) {\n    // Params\n    // Verify if exist into models.tasks\n    _models[\"default\"].Task.create(req.body).then(function (tasks) {\n      return res.json({\n        tasks: tasks,\n        'code': 1\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Cannot add Task',\n        'code': 0\n      });\n    });\n  }); // UPDATE Task\n\n  app.put('/api/tasks/:id', _verifyToken[\"default\"], function (req, res) {\n    // Params\n    var Task = req.body; // Verify if exist into models.tasks\n\n    _models[\"default\"].Task.findOne({\n      attributes: [\"id\"],\n      where: {\n        id: req.params.id\n      }\n    }).then(function (TaskFound2) {\n      TaskFound2.update(Task).then(function (tasks) {\n        return res.json({\n          tasks: tasks,\n          'code': 1\n        });\n      })[\"catch\"](function (err) {\n        return res.json({\n          'error': 'Cannot Update Task',\n          'code': 0\n        });\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify Task',\n        err: err,\n        'code': 0\n      });\n    });\n  }); // Delete Task\n\n  app[\"delete\"]('/api/tasks/:id', _verifyToken[\"default\"], function (req, res) {\n    // Params\n    var Task = {\n      id: req.params.id\n    }; // Verify if exist into models.tasks\n\n    _models[\"default\"].Task.findOne({\n      attributes: [\"id\"],\n      where: {\n        id: Task.id\n      }\n    }).then(function (TaskFound2) {\n      TaskFound2.destroy(Task);\n      return res.json({\n        'status': 'success',\n        'code': 1\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify Task',\n        err: err,\n        'code': 0\n      });\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRhc2suanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImFwcCIsImdldCIsInZlcmlmeVRva2VuIiwicmVxIiwicmVzIiwibW9kZWxzIiwiVGFzayIsImZpbmRBbGwiLCJpbmNsdWRlIiwiVXNlciIsInRoZW4iLCJ0YXNrcyIsImpzb24iLCJwb3N0IiwiY3JlYXRlIiwiYm9keSIsImVyciIsInB1dCIsImZpbmRPbmUiLCJhdHRyaWJ1dGVzIiwid2hlcmUiLCJpZCIsInBhcmFtcyIsIlRhc2tGb3VuZDIiLCJ1cGRhdGUiLCJkZXN0cm95Il0sIm1hcHBpbmdzIjoiOztBQUNBOztBQUNBOzs7O0FBR0FBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixVQUFBQyxHQUFHLEVBQUk7QUFFcEI7QUFDQUEsRUFBQUEsR0FBRyxDQUFDQyxHQUFKLENBQVEsWUFBUixFQUFzQkMsdUJBQXRCLEVBQW1DLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQzdDQyx1QkFBT0MsSUFBUCxDQUFZQyxPQUFaLENBQ0k7QUFBQ0MsTUFBQUEsT0FBTyxFQUFFLENBQUNILG1CQUFPSSxJQUFSO0FBQVYsS0FESixFQUVLQyxJQUZMLENBRVUsVUFBQ0MsS0FBRCxFQUFXO0FBRWpCUCxNQUFBQSxHQUFHLENBQUNRLElBQUosQ0FBUztBQUNMRCxRQUFBQSxLQUFLLEVBQUxBO0FBREssT0FBVDtBQUdILEtBUEQ7QUFRSCxHQVRELEdBVUE7QUFDQVgsRUFBQUEsR0FBRyxDQUFDYSxJQUFKLENBQVMsWUFBVCxFQUF1QlgsdUJBQXZCLEVBQW9DLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQzlDO0FBR0E7QUFFQUMsdUJBQU9DLElBQVAsQ0FBWVEsTUFBWixDQUFtQlgsR0FBRyxDQUFDWSxJQUF2QixFQUNLTCxJQURMLENBQ1UsVUFBQ0MsS0FBRCxFQUFXO0FBQ2IsYUFBT1AsR0FBRyxDQUFDUSxJQUFKLENBQVM7QUFBRUQsUUFBQUEsS0FBSyxFQUFMQSxLQUFGO0FBQVMsZ0JBQVE7QUFBakIsT0FBVCxDQUFQO0FBQ0gsS0FITCxXQUlXLFVBQUNLLEdBQUQsRUFBUztBQUNaLGFBQU9aLEdBQUcsQ0FBQ1EsSUFBSixDQUFTO0FBQUUsaUJBQVMsaUJBQVg7QUFBOEIsZ0JBQVE7QUFBdEMsT0FBVCxDQUFQO0FBQ0gsS0FOTDtBQVVILEdBaEJELENBWEEsQ0FIb0IsQ0FnQ3BCOztBQUNBWixFQUFBQSxHQUFHLENBQUNpQixHQUFKLENBQVEsZ0JBQVIsRUFBMEJmLHVCQUExQixFQUF1QyxVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUVqRDtBQUNBLFFBQUlFLElBQUksR0FBR0gsR0FBRyxDQUFDWSxJQUFmLENBSGlELENBS2pEOztBQUVBVix1QkFBT0MsSUFBUCxDQUFZWSxPQUFaLENBQW9CO0FBQ2hCQyxNQUFBQSxVQUFVLEVBQUUsQ0FBQyxJQUFELENBREk7QUFFaEJDLE1BQUFBLEtBQUssRUFBRTtBQUFFQyxRQUFBQSxFQUFFLEVBQUVsQixHQUFHLENBQUNtQixNQUFKLENBQVdEO0FBQWpCO0FBRlMsS0FBcEIsRUFJS1gsSUFKTCxDQUlVLFVBQUNhLFVBQUQsRUFBZ0I7QUFDbEJBLE1BQUFBLFVBQVUsQ0FBQ0MsTUFBWCxDQUFrQmxCLElBQWxCLEVBQ0tJLElBREwsQ0FDVSxVQUFDQyxLQUFELEVBQVc7QUFDYixlQUFPUCxHQUFHLENBQUNRLElBQUosQ0FBUztBQUFFRCxVQUFBQSxLQUFLLEVBQUxBLEtBQUY7QUFBUyxrQkFBUTtBQUFqQixTQUFULENBQVA7QUFDSCxPQUhMLFdBSVcsVUFBQ0ssR0FBRCxFQUFTO0FBQ1osZUFBT1osR0FBRyxDQUFDUSxJQUFKLENBQVM7QUFBRSxtQkFBUyxvQkFBWDtBQUFpQyxrQkFBUTtBQUF6QyxTQUFULENBQVA7QUFDSCxPQU5MO0FBUUgsS0FiTCxXQWNXLFVBQUNJLEdBQUQsRUFBUztBQUNaLGFBQU9aLEdBQUcsQ0FBQ1EsSUFBSixDQUFTO0FBQUUsaUJBQVMsdUJBQVg7QUFBb0NJLFFBQUFBLEdBQUcsRUFBSEEsR0FBcEM7QUFBeUMsZ0JBQVE7QUFBakQsT0FBVCxDQUFQO0FBQ0gsS0FoQkw7QUFrQkgsR0F6QkQsRUFqQ29CLENBNERuQjs7QUFDQWhCLEVBQUFBLEdBQUcsVUFBSCxDQUFXLGdCQUFYLEVBQTZCRSx1QkFBN0IsRUFBMEMsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFFckQ7QUFDQSxRQUFJRSxJQUFJLEdBQUc7QUFBRWUsTUFBQUEsRUFBRSxFQUFDbEIsR0FBRyxDQUFDbUIsTUFBSixDQUFXRDtBQUFoQixLQUFYLENBSHFELENBS3JEOztBQUVBaEIsdUJBQU9DLElBQVAsQ0FBWVksT0FBWixDQUFvQjtBQUNoQkMsTUFBQUEsVUFBVSxFQUFFLENBQUMsSUFBRCxDQURJO0FBRWhCQyxNQUFBQSxLQUFLLEVBQUU7QUFBRUMsUUFBQUEsRUFBRSxFQUFFZixJQUFJLENBQUNlO0FBQVg7QUFGUyxLQUFwQixFQUdHWCxJQUhILENBR1EsVUFBQ2EsVUFBRCxFQUFnQjtBQUNoQkEsTUFBQUEsVUFBVSxDQUFDRSxPQUFYLENBQW1CbkIsSUFBbkI7QUFDSSxhQUFPRixHQUFHLENBQUNRLElBQUosQ0FBUztBQUFFLGtCQUFTLFNBQVg7QUFBc0IsZ0JBQVE7QUFBOUIsT0FBVCxDQUFQO0FBRVAsS0FQTCxXQVFXLFVBQUNJLEdBQUQsRUFBUztBQUNaLGFBQU9aLEdBQUcsQ0FBQ1EsSUFBSixDQUFTO0FBQUUsaUJBQVMsdUJBQVg7QUFBb0NJLFFBQUFBLEdBQUcsRUFBSEEsR0FBcEM7QUFBeUMsZ0JBQVE7QUFBakQsT0FBVCxDQUFQO0FBQ0gsS0FWTDtBQVlILEdBbkJBO0FBb0JELENBakZKIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcYXN1c1xcRG9jdW1lbnRzXFxLcm93XFxBenVsdWxhIC0gQm95a2FcXFVzdG9jayBhcGlcXHNyY1xccm91dGVzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmltcG9ydCB2ZXJpZnlUb2tlbiBmcm9tICcuLi91dGlscy92ZXJpZnlUb2tlbidcclxuaW1wb3J0IG1vZGVscyBmcm9tICcuLi9tb2RlbHMnXHJcblxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBhcHAgPT4ge1xyXG5cclxuICAgIC8vIExpc3QgVGFza1xyXG4gICAgYXBwLmdldCgnL2FwaS90YXNrcycsIHZlcmlmeVRva2VuLCAocmVxLCByZXMpID0+IHtcclxuICAgICAgICBtb2RlbHMuVGFzay5maW5kQWxsKFxyXG4gICAgICAgICAgICB7aW5jbHVkZTogW21vZGVscy5Vc2VyXX0pXHJcbiAgICAgICAgICAgIC50aGVuKCh0YXNrcykgPT4ge1xyXG5cclxuICAgICAgICAgICAgcmVzLmpzb24oe1xyXG4gICAgICAgICAgICAgICAgdGFza3NcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9KVxyXG4gICAgfSksXHJcbiAgICAvLyBSRUdJU1RFUiB0YXNrc1xyXG4gICAgYXBwLnBvc3QoJy9hcGkvdGFza3MnLCB2ZXJpZnlUb2tlbiwgKHJlcSwgcmVzKSA9PiB7XHJcbiAgICAgICAgLy8gUGFyYW1zXHJcblxyXG5cclxuICAgICAgICAvLyBWZXJpZnkgaWYgZXhpc3QgaW50byBtb2RlbHMudGFza3NcclxuXHJcbiAgICAgICAgbW9kZWxzLlRhc2suY3JlYXRlKHJlcS5ib2R5KVxyXG4gICAgICAgICAgICAudGhlbigodGFza3MpID0+IHtcclxuICAgICAgICAgICAgICAgIHJldHVybiByZXMuanNvbih7IHRhc2tzLCAnY29kZSc6IDEgfSlcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgICAgICAgICAgIHJldHVybiByZXMuanNvbih7ICdlcnJvcic6ICdDYW5ub3QgYWRkIFRhc2snLCAnY29kZSc6IDAgfSlcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgXHJcblxyXG4gICAgICAgXHJcbiAgICB9KVxyXG5cclxuICAgIC8vIFVQREFURSBUYXNrXHJcbiAgICBhcHAucHV0KCcvYXBpL3Rhc2tzLzppZCcsIHZlcmlmeVRva2VuLCAocmVxLCByZXMpID0+IHtcclxuXHJcbiAgICAgICAgLy8gUGFyYW1zXHJcbiAgICAgICAgdmFyIFRhc2sgPSByZXEuYm9keVxyXG5cclxuICAgICAgICAvLyBWZXJpZnkgaWYgZXhpc3QgaW50byBtb2RlbHMudGFza3NcclxuXHJcbiAgICAgICAgbW9kZWxzLlRhc2suZmluZE9uZSh7XHJcbiAgICAgICAgICAgIGF0dHJpYnV0ZXM6IFtcImlkXCJdLFxyXG4gICAgICAgICAgICB3aGVyZTogeyBpZDogcmVxLnBhcmFtcy5pZCB9XHJcbiAgICAgICAgfSlcclxuICAgICAgICAgICAgLnRoZW4oKFRhc2tGb3VuZDIpID0+IHtcclxuICAgICAgICAgICAgICAgIFRhc2tGb3VuZDIudXBkYXRlKFRhc2spXHJcbiAgICAgICAgICAgICAgICAgICAgLnRoZW4oKHRhc2tzKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByZXMuanNvbih7IHRhc2tzLCAnY29kZSc6IDEgfSlcclxuICAgICAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByZXMuanNvbih7ICdlcnJvcic6ICdDYW5ub3QgVXBkYXRlIFRhc2snLCAnY29kZSc6IDAgfSlcclxuICAgICAgICAgICAgICAgICAgICB9KVxyXG5cclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgICAgICAgICAgIHJldHVybiByZXMuanNvbih7ICdlcnJvcic6ICdVbmFibGUgdG8gdmVyaWZ5IFRhc2snLCBlcnIsICdjb2RlJzogMCB9KVxyXG4gICAgICAgICAgICB9KVxyXG5cclxuICAgIH0pXHJcblxyXG4gICAgIC8vIERlbGV0ZSBUYXNrXHJcbiAgICAgYXBwLmRlbGV0ZSgnL2FwaS90YXNrcy86aWQnLCB2ZXJpZnlUb2tlbiwgKHJlcSwgcmVzKSA9PiB7XHJcblxyXG4gICAgICAgIC8vIFBhcmFtc1xyXG4gICAgICAgIHZhciBUYXNrID0geyBpZDpyZXEucGFyYW1zLmlkfVxyXG5cclxuICAgICAgICAvLyBWZXJpZnkgaWYgZXhpc3QgaW50byBtb2RlbHMudGFza3NcclxuXHJcbiAgICAgICAgbW9kZWxzLlRhc2suZmluZE9uZSh7XHJcbiAgICAgICAgICAgIGF0dHJpYnV0ZXM6IFtcImlkXCJdLFxyXG4gICAgICAgICAgICB3aGVyZTogeyBpZDogVGFzay5pZCB9XHJcbiAgICAgICAgfSkudGhlbigoVGFza0ZvdW5kMikgPT4ge1xyXG4gICAgICAgICAgICAgICAgVGFza0ZvdW5kMi5kZXN0cm95KFRhc2spXHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5qc29uKHsgJ3N0YXR1cyc6J3N1Y2Nlc3MnLCAnY29kZSc6IDEgfSlcclxuXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzLmpzb24oeyAnZXJyb3InOiAnVW5hYmxlIHRvIHZlcmlmeSBUYXNrJywgZXJyLCAnY29kZSc6IDAgfSlcclxuICAgICAgICAgICAgfSlcclxuXHJcbiAgICB9KVxyXG4gICB9XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "task.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "get",
        "verifyToken",
        "req",
        "res",
        "models",
        "Task",
        "findAll",
        "include",
        "User",
        "then",
        "tasks",
        "json",
        "post",
        "create",
        "body",
        "err",
        "put",
        "findOne",
        "attributes",
        "where",
        "id",
        "params",
        "TaskFound2",
        "update",
        "destroy"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes",
      "sourcesContent": [
        "\r\nimport verifyToken from '../utils/verifyToken'\r\nimport models from '../models'\r\n\r\n\r\nmodule.exports = app => {\r\n\r\n    // List Task\r\n    app.get('/api/tasks', verifyToken, (req, res) => {\r\n        models.Task.findAll(\r\n            {include: [models.User]})\r\n            .then((tasks) => {\r\n\r\n            res.json({\r\n                tasks\r\n            })\r\n        })\r\n    }),\r\n    // REGISTER tasks\r\n    app.post('/api/tasks', verifyToken, (req, res) => {\r\n        // Params\r\n\r\n\r\n        // Verify if exist into models.tasks\r\n\r\n        models.Task.create(req.body)\r\n            .then((tasks) => {\r\n                return res.json({ tasks, 'code': 1 })\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Cannot add Task', 'code': 0 })\r\n            })\r\n            \r\n\r\n       \r\n    })\r\n\r\n    // UPDATE Task\r\n    app.put('/api/tasks/:id', verifyToken, (req, res) => {\r\n\r\n        // Params\r\n        var Task = req.body\r\n\r\n        // Verify if exist into models.tasks\r\n\r\n        models.Task.findOne({\r\n            attributes: [\"id\"],\r\n            where: { id: req.params.id }\r\n        })\r\n            .then((TaskFound2) => {\r\n                TaskFound2.update(Task)\r\n                    .then((tasks) => {\r\n                        return res.json({ tasks, 'code': 1 })\r\n                    })\r\n                    .catch((err) => {\r\n                        return res.json({ 'error': 'Cannot Update Task', 'code': 0 })\r\n                    })\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify Task', err, 'code': 0 })\r\n            })\r\n\r\n    })\r\n\r\n     // Delete Task\r\n     app.delete('/api/tasks/:id', verifyToken, (req, res) => {\r\n\r\n        // Params\r\n        var Task = { id:req.params.id}\r\n\r\n        // Verify if exist into models.tasks\r\n\r\n        models.Task.findOne({\r\n            attributes: [\"id\"],\r\n            where: { id: Task.id }\r\n        }).then((TaskFound2) => {\r\n                TaskFound2.destroy(Task)\r\n                    return res.json({ 'status':'success', 'code': 1 })\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify Task', err, 'code': 0 })\r\n            })\r\n\r\n    })\r\n   }\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1580976092311
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"filename\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\\\\routes\\\\users.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes\\users.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes\\users.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes\\users.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes",
        "sourceFileName": "users.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _bcrypt = _interopRequireDefault(require(\"bcrypt\"));\n\nvar _jwt = _interopRequireDefault(require(\"../utils/jwt.util\"));\n\nvar _models = _interopRequireDefault(require(\"../models\"));\n\nvar _verifyToken = _interopRequireDefault(require(\"../utils/verifyToken\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.exports = function (app) {\n  app.get('/api/token_life', function (req, res) {\n    var headerAuth = req.headers['authorization'];\n\n    var userId = _jwt[\"default\"].getUserId(headerAuth);\n\n    if (userId < 0) return res.json({\n      'error': 'Wrong Token',\n      'code': 200,\n      'access': false\n    });else return res.json({\n      'code': 1,\n      'access': true\n    });\n  }), // List USER V\n  app.get('/api/users', _verifyToken[\"default\"], function (req, res) {\n    _models[\"default\"].User.findAll({\n      include: [_models[\"default\"].Order]\n    }).then(function (users) {\n      res.json({\n        users: users\n      });\n    });\n  }), // REGISTER USER V\n  app.post('/api/users', _verifyToken[\"default\"], function (req, res) {\n    // Params\n    var User = req.body;\n    User.password = '123456';\n    if (User.email == null || User.username == null || User.password == null) return res.json({\n      'error': 'Missing parameters',\n      'code': 10\n    }); // Verify if exist into models.users\n\n    _models[\"default\"].User.findOne({\n      attributes: [\"username\"],\n      where: {\n        username: User.username\n      }\n    }).then(function (userFound) {\n      if (!userFound) {\n        _bcrypt[\"default\"].hash(User.password, 5, function (err, bcryptedPassword) {\n          var newUser = _models[\"default\"].User.create({\n            email: User.email,\n            username: User.username,\n            status: User.status,\n            password: bcryptedPassword,\n            level: User.level,\n            name: User.name\n          }).then(function (users) {\n            users.update({\n              internal_code: 'USR' + users.id\n            }).then(function (d) {\n              return res.json({\n                users: users,\n                'code': 1\n              });\n            })[\"catch\"](function (err) {\n              return res.json({\n                'Error': 'Problem Internal code',\n                'code': 0\n              });\n            });\n          })[\"catch\"](function (err) {\n            return res.json({\n              'error': 'Cannot add user',\n              'code': 0\n            });\n          });\n        });\n      } else {\n        return res.json({\n          'error': 'User already exist',\n          'code': 11\n        });\n      }\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify user',\n        err: err,\n        'code': 0\n      });\n    });\n  }), // Delete user\n  app[\"delete\"]('/api/users/:id', _verifyToken[\"default\"], function (req, res) {\n    // Params\n    var user = {\n      id: req.params.id\n    }; // Verify if exist into models.user\n\n    _models[\"default\"].User.findOne({\n      attributes: [\"id\"],\n      where: {\n        id: user.id\n      }\n    }).then(function (userFound2) {\n      userFound2.destroy(user).then(function () {\n        return res.json({\n          'status': 'success',\n          'code': 1\n        });\n      })[\"catch\"](function (err) {\n        return res.json({\n          'error': 'Cannot Delete user',\n          'code': 0\n        });\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify user',\n        err: err,\n        'code': 0\n      });\n    });\n  }), // UPDATE USER V\n  app.put('/api/users/:id', _verifyToken[\"default\"], function (req, res) {\n    // Params\n    var User = req.body; // Verify if exist into models.users\n\n    _models[\"default\"].User.findOne({\n      attributes: [\"id\"],\n      where: {\n        id: req.params.id\n      }\n    }).then(function (userFound2) {\n      var newUser = userFound2.update(User).then(function (users) {\n        return res.json({\n          users: users,\n          'code': 1\n        });\n      })[\"catch\"](function (err) {\n        return res.json({\n          'error': 'Cannot Update user',\n          'code': 0\n        });\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify user',\n        err: err,\n        'code': 0\n      });\n    });\n  }), // LOGIN V\n  app.post('/api/login', function (req, res) {\n    var User = {\n      username: req.body.username,\n      password: req.body.password\n    };\n\n    if (User.username == null || User.password == null) {\n      return res.json({\n        'error': 'missing parameters',\n        'code': 10\n      });\n    } // Verify\n\n\n    _models[\"default\"].User.findOne({\n      where: {\n        username: User.username\n      }\n    }).then(function (userFound) {\n      if (userFound) {\n        _bcrypt[\"default\"].compare(User.password, userFound.password, function (errBycrypt, resBycrypt) {\n          if (resBycrypt) {\n            if (userFound.status == true) {\n              return res.json({\n                'users': userFound,\n                'token': _jwt[\"default\"].generateTokenForUser(userFound),\n                'code': 12\n              });\n            } else {\n              return res.json({\n                'error': 'User Inactive',\n                'code': 1111\n              });\n            }\n          } else {\n            return res.json({\n              'error': 'Invalid password',\n              'code': 111\n            });\n          }\n        });\n      } else {\n        return res.json({\n          'error': 'User does not exist',\n          'code': 110\n        });\n      }\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify user',\n        err: err,\n        'code': 0\n      });\n    });\n  }), // Get user profile V\n  app.get('/api/users/profile/:id', _verifyToken[\"default\"], function (req, res) {\n    _models[\"default\"].User.findOne({\n      include: [_models[\"default\"].Order],\n      where: {\n        id: req.params.id\n      }\n    }).then(function (users) {\n      if (users) {\n        return res.json({\n          users: users,\n          'code': 1\n        });\n      } else {\n        return res.json({\n          'error': 'User does not exist',\n          'code': 110\n        });\n      }\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Cannot fetch user',\n        'code': 0\n      });\n    });\n  }), // Update password User V\n  app.put('/api/users/profile/:id', _verifyToken[\"default\"], function (req, res) {\n    var passwordOld = req.body.passwordOld;\n    var passwordNew = req.body.passwordNew;\n\n    _models[\"default\"].User.findOne({\n      where: {\n        id: req.params.id\n      }\n    }).then(function (U) {\n      _bcrypt[\"default\"].compare(passwordOld, U.password, function (errBycrypt, resBycrypt) {\n        if (resBycrypt) {\n          _bcrypt[\"default\"].hash(passwordNew, 5, function (err, bcryptedPassword) {\n            var newUser = U.update({\n              password: bcryptedPassword\n            }).then(function (users) {\n              return res.json({\n                users: users,\n                'code': 1\n              });\n            })[\"catch\"](function (err) {\n              return res.json({\n                'error': 'Cannot add user',\n                'code': 0\n              });\n            });\n          });\n        } else {\n          return res.json({\n            'error': 'Old password invalid',\n            'code': 111\n          });\n        }\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify user',\n        err: err,\n        'code': 0\n      });\n    });\n  }); // Update password UserADMIN\n\n  app.put('/api/users', _verifyToken[\"default\"], function (req, res) {\n    var userId = req.body.idUserAdmin;\n    var idUserNormal = req.body.idUserNormal;\n    var passwordNew = '936785605';\n\n    _models[\"default\"].User.findOne({\n      where: {\n        id: userId\n      }\n    }).then(function (UX) {\n      _models[\"default\"].User.findOne({\n        where: {\n          id: idUserNormal\n        }\n      }).then(function (U) {\n        if (UX.level == 1) {\n          _bcrypt[\"default\"].hash(passwordNew, 5, function (err, bcryptedPassword) {\n            U.update({\n              password: bcryptedPassword\n            }).then(function (users) {\n              return res.json({\n                users: users,\n                'code': 1\n              });\n            })[\"catch\"](function (err) {\n              return res.json({\n                'error': 'Cannot Update password user',\n                'code': 0\n              });\n            });\n          });\n        } else {\n          return res.json({\n            'error': 'Only admin',\n            err: err,\n            'code': 333\n          });\n        }\n      })[\"catch\"](function (err) {\n        return res.json({\n          'error': 'Unable to verify user Person',\n          err: err,\n          'code': 0\n        });\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify user x!!',\n        err: err,\n        'code': 0\n      });\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "users.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "get",
        "req",
        "res",
        "headerAuth",
        "headers",
        "userId",
        "jwtUtil",
        "getUserId",
        "json",
        "verifyToken",
        "models",
        "User",
        "findAll",
        "include",
        "Order",
        "then",
        "users",
        "post",
        "body",
        "password",
        "email",
        "username",
        "findOne",
        "attributes",
        "where",
        "userFound",
        "bcrypt",
        "hash",
        "err",
        "bcryptedPassword",
        "newUser",
        "create",
        "status",
        "level",
        "name",
        "update",
        "internal_code",
        "id",
        "d",
        "user",
        "params",
        "userFound2",
        "destroy",
        "put",
        "compare",
        "errBycrypt",
        "resBycrypt",
        "generateTokenForUser",
        "passwordOld",
        "passwordNew",
        "U",
        "idUserAdmin",
        "idUserNormal",
        "UX"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes",
      "sourcesContent": [
        "import bcrypt from 'bcrypt'\r\nimport jwtUtil from '../utils/jwt.util'\r\nimport models from '../models'\r\n\r\nimport verifyToken from '../utils/verifyToken'\r\n\r\n\r\nmodule.exports = app => {\r\n\r\n    app.get('/api/token_life', (req, res)=>{\r\n        var headerAuth = req.headers['authorization']\r\n        var userId = jwtUtil.getUserId(headerAuth)\r\n\r\n        if (userId < 0)\r\n            return res.json({ 'error': 'Wrong Token', 'code': 200, 'access': false })\r\n        else\r\n            return res.json({ 'code': 1, 'access': true })\r\n    }),\r\n    // List USER V\r\n    app.get('/api/users',verifyToken, (req, res) => {\r\n\r\n        models.User.findAll({include: [models.Order]}).then((users) => {\r\n            res.json({\r\n                users\r\n            })\r\n        })\r\n    }),\r\n\r\n    // REGISTER USER V\r\n    app.post('/api/users',verifyToken, (req, res) => {\r\n        \r\n        // Params\r\n        var User = req.body\r\n        User.password = '123456'\r\n        if (User.email == null || User.username == null || User.password == null)\r\n            return res.json({ 'error': 'Missing parameters', 'code': 10 })\r\n        // Verify if exist into models.users\r\n        models.User.findOne({\r\n            attributes: [\"username\"],\r\n            where: { username: User.username }\r\n        })\r\n            .then((userFound) => {\r\n                if (!userFound) {\r\n                    bcrypt.hash(User.password, 5, (err, bcryptedPassword) => {\r\n                        var newUser = models.User.create({\r\n                            email: User.email,\r\n                            username: User.username,\r\n                            status: User.status,\r\n                            password: bcryptedPassword,\r\n                            level: User.level,\r\n                            name: User.name\r\n                        })\r\n                            .then((users) => {\r\n                                users.update({internal_code:'USR'+users.id})\r\n                                .then(d=>{\r\n                                    return res.json({ users, 'code': 1 })\r\n                                })\r\n                                .catch(err=>{\r\n                                    return res.json({'Error': 'Problem Internal code', 'code':0})\r\n                                })\r\n                                \r\n                            })\r\n                            .catch((err) => {\r\n                                return res.json({ 'error': 'Cannot add user', 'code': 0 })\r\n                            })\r\n                    })\r\n                } else {\r\n                    return res.json({ 'error': 'User already exist', 'code': 11 })\r\n                }\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify user', err, 'code': 0 })\r\n            })\r\n    }),\r\n\r\n    // Delete user\r\n    app.delete('/api/users/:id',verifyToken, (req, res) => {\r\n        \r\n        // Params\r\n        var user = { id:req.params.id}\r\n\r\n        // Verify if exist into models.user\r\n\r\n        models.User.findOne({\r\n            attributes: [\"id\"],\r\n            where: { id: user.id }\r\n        })\r\n            .then((userFound2) => {\r\n                userFound2.destroy(user)\r\n                    .then(() => {\r\n                        return res.json({ 'status':'success', 'code': 1 })\r\n                    })\r\n                    .catch((err) => {\r\n                        return res.json({ 'error': 'Cannot Delete user', 'code': 0 })\r\n                    })\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify user', err, 'code': 0 })\r\n            })\r\n\r\n    }),\r\n\r\n    // UPDATE USER V\r\n    app.put('/api/users/:id',verifyToken, (req, res) => {\r\n        \r\n        // Params\r\n        var User = req.body\r\n\r\n        // Verify if exist into models.users\r\n\r\n        models.User.findOne({\r\n            attributes: [\"id\"],\r\n            where: { id: req.params.id }\r\n        })\r\n            .then((userFound2) => {\r\n                var newUser = userFound2.update(User)\r\n                    .then((users) => {\r\n                        return res.json({ users, 'code': 1 })\r\n                    })\r\n                    .catch((err) => {\r\n                        return res.json({ 'error': 'Cannot Update user', 'code': 0 })\r\n                    })\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify user', err, 'code': 0 })\r\n            })\r\n\r\n    }),\r\n\r\n    // LOGIN V\r\n    app.post('/api/login', (req, res) => {\r\n        var User = {\r\n            username: req.body.username,\r\n            password: req.body.password\r\n        }\r\n\r\n        if (User.username == null || User.password == null) {\r\n            return res.json({ 'error': 'missing parameters', 'code': 10 })\r\n        }\r\n\r\n        // Verify\r\n\r\n        models.User.findOne({\r\n            where: { username: User.username }\r\n        })\r\n            .then((userFound) => {\r\n                if (userFound) {\r\n                        bcrypt.compare(User.password, userFound.password, (errBycrypt, resBycrypt) => {\r\n                            if (resBycrypt) {\r\n                                if(userFound.status == true){\r\n                                    return res.json({ 'users': userFound, 'token': jwtUtil.generateTokenForUser(userFound), 'code': 12 })\r\n                                } \r\n                                else {\r\n                                    return res.json({ 'error': 'User Inactive', 'code': 1111 })\r\n                                }\r\n                            } else {\r\n                                return res.json({ 'error': 'Invalid password', 'code': 111 })\r\n                            }\r\n                        })\r\n                    \r\n\r\n                } else {\r\n                    return res.json({ 'error': 'User does not exist', 'code': 110 })\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify user', err, 'code': 0 })\r\n            })\r\n    }),\r\n\r\n    // Get user profile V\r\n    app.get('/api/users/profile/:id',verifyToken, (req, res) => {\r\n\r\n\r\n        models.User.findOne({include:[models.Order],\r\n            where: { id: req.params.id }\r\n        })\r\n            .then((users) => {\r\n                if (users) {\r\n                    return res.json({ users, 'code': 1 })\r\n                } else {\r\n                    return res.json({ 'error': 'User does not exist', 'code': 110 })\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Cannot fetch user', 'code': 0 })\r\n            })\r\n    }),\r\n\r\n    // Update password User V\r\n    app.put('/api/users/profile/:id',verifyToken, (req, res) => {\r\n        var passwordOld = req.body.passwordOld\r\n        var passwordNew = req.body.passwordNew\r\n\r\n\r\n        models.User.findOne({ where: { id: req.params.id } })\r\n            .then((U) => {\r\n\r\n                bcrypt.compare(passwordOld, U.password, (errBycrypt, resBycrypt) => {\r\n                    if (resBycrypt) {\r\n                        bcrypt.hash(passwordNew, 5, (err, bcryptedPassword) => {\r\n                            var newUser = U.update({ password: bcryptedPassword })\r\n                                .then((users) => {\r\n                                    return res.json({ users, 'code': 1 })\r\n                                })\r\n                                .catch((err) => {\r\n                                    return res.json({ 'error': 'Cannot add user', 'code': 0 })\r\n                                })\r\n                        })\r\n                    } else {\r\n                        return res.json({ 'error': 'Old password invalid', 'code': 111 })\r\n                    }\r\n                })\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify user', err, 'code': 0 })\r\n            })\r\n\r\n    })\r\n\r\n    // Update password UserADMIN\r\n    app.put('/api/users',verifyToken, (req, res) => {\r\n\r\n       \r\n        var userId = req.body.idUserAdmin\r\n        var idUserNormal = req.body.idUserNormal\r\n        var passwordNew = '936785605'\r\n\r\n        models.User.findOne({ where: { id: userId } })\r\n            .then((UX) => {\r\n\r\n                models.User.findOne({ where: { id: idUserNormal } })\r\n                    .then((U) => {\r\n                        if (UX.level == 1) {\r\n                            bcrypt.hash(passwordNew, 5, (err, bcryptedPassword) => {\r\n                                 U.update({ password: bcryptedPassword })\r\n                                    .then((users) => {\r\n                                        return res.json({ users, 'code': 1 })\r\n                                    })\r\n                                    .catch((err) => {\r\n                                        return res.json({ 'error': 'Cannot Update password user', 'code': 0 })\r\n                                    })\r\n                            })\r\n                        } else {\r\n                            return res.json({ 'error': 'Only admin', err, 'code': 333 })\r\n                        }\r\n                    })\r\n                    .catch((err) => {\r\n                        return res.json({ 'error': 'Unable to verify user Person', err, 'code': 0 })\r\n                    })\r\n\r\n            })\r\n            .catch((err) => {\r\n               return res.json({ 'error': 'Unable to verify user x!!', err, 'code': 0 })\r\n            })\r\n    })\r\n}\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581325422331
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\\\\libs\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"filename\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\\\\libs\\\\boot.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\libs",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\libs\\boot.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\libs\\boot.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\libs\\boot.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\libs",
        "sourceFileName": "boot.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nmodule.exports = function (app) {\n  app.listen(app.get('port'), function () {\n    console.log('Server on PORT', app.get('port'));\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJvb3QuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImFwcCIsImxpc3RlbiIsImdldCIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiI7O0FBQUFBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixVQUFBQyxHQUFHLEVBQUU7QUFDbEJBLEVBQUFBLEdBQUcsQ0FBQ0MsTUFBSixDQUFXRCxHQUFHLENBQUNFLEdBQUosQ0FBUSxNQUFSLENBQVgsRUFBNEIsWUFBTTtBQUNsQ0MsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksZ0JBQVosRUFBOEJKLEdBQUcsQ0FBQ0UsR0FBSixDQUFRLE1BQVIsQ0FBOUI7QUFDSCxHQUZHO0FBR0gsQ0FKRCIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGFzdXNcXERvY3VtZW50c1xcS3Jvd1xcQXp1bHVsYSAtIEJveWthXFxVc3RvY2sgYXBpXFxzcmNcXGxpYnMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IGFwcD0+e1xyXG4gICAgYXBwLmxpc3RlbihhcHAuZ2V0KCdwb3J0JyksICgpID0+IHtcclxuICAgIGNvbnNvbGUubG9nKCdTZXJ2ZXIgb24gUE9SVCcsIGFwcC5nZXQoJ3BvcnQnKSlcclxufSlcclxufVxyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "boot.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "listen",
        "get",
        "console",
        "log"
      ],
      "mappings": ";;AAAAA,MAAM,CAACC,OAAP,GAAiB,UAAAC,GAAG,EAAE;AAClBA,EAAAA,GAAG,CAACC,MAAJ,CAAWD,GAAG,CAACE,GAAJ,CAAQ,MAAR,CAAX,EAA4B,YAAM;AAClCC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BJ,GAAG,CAACE,GAAJ,CAAQ,MAAR,CAA9B;AACH,GAFG;AAGH,CAJD",
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\libs",
      "sourcesContent": [
        "module.exports = app=>{\r\n    app.listen(app.get('port'), () => {\r\n    console.log('Server on PORT', app.get('port'))\r\n})\r\n}\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1578932231770
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"filename\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\\\\routes\\\\sale.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes\\sale.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes\\sale.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes\\sale.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes",
        "sourceFileName": "sale.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _verifyToken = _interopRequireDefault(require(\"../utils/verifyToken\"));\n\nvar _models = _interopRequireDefault(require(\"../models\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.exports = function (app) {\n  // List sale/service\n  app.get('/api/sales', _verifyToken[\"default\"], function (req, res) {\n    _models[\"default\"].Sale.findAll().then(function (sales) {\n      res.json({\n        sales: sales\n      });\n    });\n  }), // REGISTER USER V\n  app.post('/api/sales', _verifyToken[\"default\"], function (req, res) {\n    // Params\n    var sale = req.body; // Verify if exist into models.sales\n\n    _models[\"default\"].Sale.create(sale).then(function (sales) {\n      return res.json({\n        sales: sales,\n        'code': 1\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Cannot add sale',\n        'code': 0\n      });\n    });\n  }); // UPDATE sale\n\n  app.put('/api/sales/:id', _verifyToken[\"default\"], function (req, res) {\n    // Params\n    var sale = req.body; // Verify if exist into models.sales\n\n    _models[\"default\"].Sale.findOne({\n      attributes: [\"id\"],\n      where: {\n        id: req.params.id\n      }\n    }).then(function (saleFound2) {\n      saleFound2.update(sale).then(function (sales) {\n        return res.json({\n          sales: sales,\n          'code': 1\n        });\n      })[\"catch\"](function (err) {\n        return res.json({\n          'error': 'Cannot Update sale',\n          'code': 0\n        });\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify sale',\n        err: err,\n        'code': 0\n      });\n    });\n  }); // Delete sale\n\n  app[\"delete\"]('/api/sales/:id', _verifyToken[\"default\"], function (req, res) {\n    // Params\n    var sale = {\n      id: req.params.id\n    }; // Verify if exist into models.sales\n\n    _models[\"default\"].Sale.findOne({\n      attributes: [\"id\"],\n      where: {\n        id: sale.id\n      }\n    }).then(function (saleFound2) {\n      saleFound2.destroy(sale).then(function () {\n        return res.json({\n          'status': 'success',\n          'code': 1\n        });\n      })[\"catch\"](function (err) {\n        return res.json({\n          'error': 'Cannot Delete sale',\n          'code': 0\n        });\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify sale',\n        err: err,\n        'code': 0\n      });\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNhbGUuanMiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsImFwcCIsImdldCIsInZlcmlmeVRva2VuIiwicmVxIiwicmVzIiwibW9kZWxzIiwiU2FsZSIsImZpbmRBbGwiLCJ0aGVuIiwic2FsZXMiLCJqc29uIiwicG9zdCIsInNhbGUiLCJib2R5IiwiY3JlYXRlIiwiZXJyIiwicHV0IiwiZmluZE9uZSIsImF0dHJpYnV0ZXMiLCJ3aGVyZSIsImlkIiwicGFyYW1zIiwic2FsZUZvdW5kMiIsInVwZGF0ZSIsImRlc3Ryb3kiXSwibWFwcGluZ3MiOiI7O0FBQ0E7O0FBQ0E7Ozs7QUFHQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUFDLEdBQUcsRUFBSTtBQUVwQjtBQUNBQSxFQUFBQSxHQUFHLENBQUNDLEdBQUosQ0FBUSxZQUFSLEVBQXNCQyx1QkFBdEIsRUFBbUMsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDN0NDLHVCQUFPQyxJQUFQLENBQVlDLE9BQVosR0FBc0JDLElBQXRCLENBQTJCLFVBQUNDLEtBQUQsRUFBVztBQUNsQ0wsTUFBQUEsR0FBRyxDQUFDTSxJQUFKLENBQVM7QUFDTEQsUUFBQUEsS0FBSyxFQUFMQTtBQURLLE9BQVQ7QUFHSCxLQUpEO0FBS0gsR0FORCxHQU9BO0FBQ0FULEVBQUFBLEdBQUcsQ0FBQ1csSUFBSixDQUFTLFlBQVQsRUFBdUJULHVCQUF2QixFQUFvQyxVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUM5QztBQUNBLFFBQUlRLElBQUksR0FBR1QsR0FBRyxDQUFDVSxJQUFmLENBRjhDLENBSTlDOztBQUVBUix1QkFBT0MsSUFBUCxDQUFZUSxNQUFaLENBQW1CRixJQUFuQixFQUNLSixJQURMLENBQ1UsVUFBQ0MsS0FBRCxFQUFXO0FBQ2IsYUFBT0wsR0FBRyxDQUFDTSxJQUFKLENBQVM7QUFBRUQsUUFBQUEsS0FBSyxFQUFMQSxLQUFGO0FBQVMsZ0JBQVE7QUFBakIsT0FBVCxDQUFQO0FBQ0gsS0FITCxXQUlXLFVBQUNNLEdBQUQsRUFBUztBQUNaLGFBQU9YLEdBQUcsQ0FBQ00sSUFBSixDQUFTO0FBQUUsaUJBQVMsaUJBQVg7QUFBOEIsZ0JBQVE7QUFBdEMsT0FBVCxDQUFQO0FBQ0gsS0FOTDtBQVVILEdBaEJELENBUkEsQ0FIb0IsQ0E2QnBCOztBQUNBVixFQUFBQSxHQUFHLENBQUNnQixHQUFKLENBQVEsZ0JBQVIsRUFBMEJkLHVCQUExQixFQUF1QyxVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUVqRDtBQUNBLFFBQUlRLElBQUksR0FBR1QsR0FBRyxDQUFDVSxJQUFmLENBSGlELENBS2pEOztBQUVBUix1QkFBT0MsSUFBUCxDQUFZVyxPQUFaLENBQW9CO0FBQ2hCQyxNQUFBQSxVQUFVLEVBQUUsQ0FBQyxJQUFELENBREk7QUFFaEJDLE1BQUFBLEtBQUssRUFBRTtBQUFFQyxRQUFBQSxFQUFFLEVBQUVqQixHQUFHLENBQUNrQixNQUFKLENBQVdEO0FBQWpCO0FBRlMsS0FBcEIsRUFJS1osSUFKTCxDQUlVLFVBQUNjLFVBQUQsRUFBZ0I7QUFDbEJBLE1BQUFBLFVBQVUsQ0FBQ0MsTUFBWCxDQUFrQlgsSUFBbEIsRUFDS0osSUFETCxDQUNVLFVBQUNDLEtBQUQsRUFBVztBQUNiLGVBQU9MLEdBQUcsQ0FBQ00sSUFBSixDQUFTO0FBQUVELFVBQUFBLEtBQUssRUFBTEEsS0FBRjtBQUFTLGtCQUFRO0FBQWpCLFNBQVQsQ0FBUDtBQUNILE9BSEwsV0FJVyxVQUFDTSxHQUFELEVBQVM7QUFDWixlQUFPWCxHQUFHLENBQUNNLElBQUosQ0FBUztBQUFFLG1CQUFTLG9CQUFYO0FBQWlDLGtCQUFRO0FBQXpDLFNBQVQsQ0FBUDtBQUNILE9BTkw7QUFRSCxLQWJMLFdBY1csVUFBQ0ssR0FBRCxFQUFTO0FBQ1osYUFBT1gsR0FBRyxDQUFDTSxJQUFKLENBQVM7QUFBRSxpQkFBUyx1QkFBWDtBQUFvQ0ssUUFBQUEsR0FBRyxFQUFIQSxHQUFwQztBQUF5QyxnQkFBUTtBQUFqRCxPQUFULENBQVA7QUFDSCxLQWhCTDtBQWtCSCxHQXpCRCxFQTlCb0IsQ0F5RG5COztBQUNBZixFQUFBQSxHQUFHLFVBQUgsQ0FBVyxnQkFBWCxFQUE2QkUsdUJBQTdCLEVBQTBDLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBRXJEO0FBQ0EsUUFBSVEsSUFBSSxHQUFHO0FBQUVRLE1BQUFBLEVBQUUsRUFBQ2pCLEdBQUcsQ0FBQ2tCLE1BQUosQ0FBV0Q7QUFBaEIsS0FBWCxDQUhxRCxDQUtyRDs7QUFFQWYsdUJBQU9DLElBQVAsQ0FBWVcsT0FBWixDQUFvQjtBQUNoQkMsTUFBQUEsVUFBVSxFQUFFLENBQUMsSUFBRCxDQURJO0FBRWhCQyxNQUFBQSxLQUFLLEVBQUU7QUFBRUMsUUFBQUEsRUFBRSxFQUFFUixJQUFJLENBQUNRO0FBQVg7QUFGUyxLQUFwQixFQUlLWixJQUpMLENBSVUsVUFBQ2MsVUFBRCxFQUFnQjtBQUNsQkEsTUFBQUEsVUFBVSxDQUFDRSxPQUFYLENBQW1CWixJQUFuQixFQUNLSixJQURMLENBQ1UsWUFBTTtBQUNSLGVBQU9KLEdBQUcsQ0FBQ00sSUFBSixDQUFTO0FBQUUsb0JBQVMsU0FBWDtBQUFzQixrQkFBUTtBQUE5QixTQUFULENBQVA7QUFDSCxPQUhMLFdBSVcsVUFBQ0ssR0FBRCxFQUFTO0FBQ1osZUFBT1gsR0FBRyxDQUFDTSxJQUFKLENBQVM7QUFBRSxtQkFBUyxvQkFBWDtBQUFpQyxrQkFBUTtBQUF6QyxTQUFULENBQVA7QUFDSCxPQU5MO0FBUUgsS0FiTCxXQWNXLFVBQUNLLEdBQUQsRUFBUztBQUNaLGFBQU9YLEdBQUcsQ0FBQ00sSUFBSixDQUFTO0FBQUUsaUJBQVMsdUJBQVg7QUFBb0NLLFFBQUFBLEdBQUcsRUFBSEEsR0FBcEM7QUFBeUMsZ0JBQVE7QUFBakQsT0FBVCxDQUFQO0FBQ0gsS0FoQkw7QUFrQkgsR0F6QkE7QUEwQkQsQ0FwRkoiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxhc3VzXFxEb2N1bWVudHNcXEtyb3dcXEF6dWx1bGEgLSBCb3lrYVxcVXN0b2NrIGFwaVxcc3JjXFxyb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuaW1wb3J0IHZlcmlmeVRva2VuIGZyb20gJy4uL3V0aWxzL3ZlcmlmeVRva2VuJ1xyXG5pbXBvcnQgbW9kZWxzIGZyb20gJy4uL21vZGVscydcclxuXHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IGFwcCA9PiB7XHJcblxyXG4gICAgLy8gTGlzdCBzYWxlL3NlcnZpY2VcclxuICAgIGFwcC5nZXQoJy9hcGkvc2FsZXMnLCB2ZXJpZnlUb2tlbiwgKHJlcSwgcmVzKSA9PiB7XHJcbiAgICAgICAgbW9kZWxzLlNhbGUuZmluZEFsbCgpLnRoZW4oKHNhbGVzKSA9PiB7XHJcbiAgICAgICAgICAgIHJlcy5qc29uKHtcclxuICAgICAgICAgICAgICAgIHNhbGVzXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfSlcclxuICAgIH0pLFxyXG4gICAgLy8gUkVHSVNURVIgVVNFUiBWXHJcbiAgICBhcHAucG9zdCgnL2FwaS9zYWxlcycsIHZlcmlmeVRva2VuLCAocmVxLCByZXMpID0+IHtcclxuICAgICAgICAvLyBQYXJhbXNcclxuICAgICAgICB2YXIgc2FsZSA9IHJlcS5ib2R5XHJcblxyXG4gICAgICAgIC8vIFZlcmlmeSBpZiBleGlzdCBpbnRvIG1vZGVscy5zYWxlc1xyXG4gICAgICAgIFxyXG4gICAgICAgIG1vZGVscy5TYWxlLmNyZWF0ZShzYWxlKVxyXG4gICAgICAgICAgICAudGhlbigoc2FsZXMpID0+IHtcclxuICAgICAgICAgICAgICAgIHJldHVybiByZXMuanNvbih7IHNhbGVzLCAnY29kZSc6IDEgfSlcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgICAgICAgICAgIHJldHVybiByZXMuanNvbih7ICdlcnJvcic6ICdDYW5ub3QgYWRkIHNhbGUnLCAnY29kZSc6IDAgfSlcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgXHJcblxyXG4gICAgICAgXHJcbiAgICB9KVxyXG5cclxuICAgIC8vIFVQREFURSBzYWxlXHJcbiAgICBhcHAucHV0KCcvYXBpL3NhbGVzLzppZCcsIHZlcmlmeVRva2VuLCAocmVxLCByZXMpID0+IHtcclxuXHJcbiAgICAgICAgLy8gUGFyYW1zXHJcbiAgICAgICAgdmFyIHNhbGUgPSByZXEuYm9keVxyXG5cclxuICAgICAgICAvLyBWZXJpZnkgaWYgZXhpc3QgaW50byBtb2RlbHMuc2FsZXNcclxuXHJcbiAgICAgICAgbW9kZWxzLlNhbGUuZmluZE9uZSh7XHJcbiAgICAgICAgICAgIGF0dHJpYnV0ZXM6IFtcImlkXCJdLFxyXG4gICAgICAgICAgICB3aGVyZTogeyBpZDogcmVxLnBhcmFtcy5pZCB9XHJcbiAgICAgICAgfSlcclxuICAgICAgICAgICAgLnRoZW4oKHNhbGVGb3VuZDIpID0+IHtcclxuICAgICAgICAgICAgICAgIHNhbGVGb3VuZDIudXBkYXRlKHNhbGUpXHJcbiAgICAgICAgICAgICAgICAgICAgLnRoZW4oKHNhbGVzKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByZXMuanNvbih7IHNhbGVzLCAnY29kZSc6IDEgfSlcclxuICAgICAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByZXMuanNvbih7ICdlcnJvcic6ICdDYW5ub3QgVXBkYXRlIHNhbGUnLCAnY29kZSc6IDAgfSlcclxuICAgICAgICAgICAgICAgICAgICB9KVxyXG5cclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgICAgICAgICAgIHJldHVybiByZXMuanNvbih7ICdlcnJvcic6ICdVbmFibGUgdG8gdmVyaWZ5IHNhbGUnLCBlcnIsICdjb2RlJzogMCB9KVxyXG4gICAgICAgICAgICB9KVxyXG5cclxuICAgIH0pXHJcblxyXG4gICAgIC8vIERlbGV0ZSBzYWxlXHJcbiAgICAgYXBwLmRlbGV0ZSgnL2FwaS9zYWxlcy86aWQnLCB2ZXJpZnlUb2tlbiwgKHJlcSwgcmVzKSA9PiB7XHJcblxyXG4gICAgICAgIC8vIFBhcmFtc1xyXG4gICAgICAgIHZhciBzYWxlID0geyBpZDpyZXEucGFyYW1zLmlkfVxyXG5cclxuICAgICAgICAvLyBWZXJpZnkgaWYgZXhpc3QgaW50byBtb2RlbHMuc2FsZXNcclxuXHJcbiAgICAgICAgbW9kZWxzLlNhbGUuZmluZE9uZSh7XHJcbiAgICAgICAgICAgIGF0dHJpYnV0ZXM6IFtcImlkXCJdLFxyXG4gICAgICAgICAgICB3aGVyZTogeyBpZDogc2FsZS5pZCB9XHJcbiAgICAgICAgfSlcclxuICAgICAgICAgICAgLnRoZW4oKHNhbGVGb3VuZDIpID0+IHtcclxuICAgICAgICAgICAgICAgIHNhbGVGb3VuZDIuZGVzdHJveShzYWxlKVxyXG4gICAgICAgICAgICAgICAgICAgIC50aGVuKCgpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5qc29uKHsgJ3N0YXR1cyc6J3N1Y2Nlc3MnLCAnY29kZSc6IDEgfSlcclxuICAgICAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByZXMuanNvbih7ICdlcnJvcic6ICdDYW5ub3QgRGVsZXRlIHNhbGUnLCAnY29kZSc6IDAgfSlcclxuICAgICAgICAgICAgICAgICAgICB9KVxyXG5cclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgICAgICAgICAgIHJldHVybiByZXMuanNvbih7ICdlcnJvcic6ICdVbmFibGUgdG8gdmVyaWZ5IHNhbGUnLCBlcnIsICdjb2RlJzogMCB9KVxyXG4gICAgICAgICAgICB9KVxyXG5cclxuICAgIH0pXHJcbiAgIH1cclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "sale.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "get",
        "verifyToken",
        "req",
        "res",
        "models",
        "Sale",
        "findAll",
        "then",
        "sales",
        "json",
        "post",
        "sale",
        "body",
        "create",
        "err",
        "put",
        "findOne",
        "attributes",
        "where",
        "id",
        "params",
        "saleFound2",
        "update",
        "destroy"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes",
      "sourcesContent": [
        "\r\nimport verifyToken from '../utils/verifyToken'\r\nimport models from '../models'\r\n\r\n\r\nmodule.exports = app => {\r\n\r\n    // List sale/service\r\n    app.get('/api/sales', verifyToken, (req, res) => {\r\n        models.Sale.findAll().then((sales) => {\r\n            res.json({\r\n                sales\r\n            })\r\n        })\r\n    }),\r\n    // REGISTER USER V\r\n    app.post('/api/sales', verifyToken, (req, res) => {\r\n        // Params\r\n        var sale = req.body\r\n\r\n        // Verify if exist into models.sales\r\n        \r\n        models.Sale.create(sale)\r\n            .then((sales) => {\r\n                return res.json({ sales, 'code': 1 })\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Cannot add sale', 'code': 0 })\r\n            })\r\n               \r\n\r\n       \r\n    })\r\n\r\n    // UPDATE sale\r\n    app.put('/api/sales/:id', verifyToken, (req, res) => {\r\n\r\n        // Params\r\n        var sale = req.body\r\n\r\n        // Verify if exist into models.sales\r\n\r\n        models.Sale.findOne({\r\n            attributes: [\"id\"],\r\n            where: { id: req.params.id }\r\n        })\r\n            .then((saleFound2) => {\r\n                saleFound2.update(sale)\r\n                    .then((sales) => {\r\n                        return res.json({ sales, 'code': 1 })\r\n                    })\r\n                    .catch((err) => {\r\n                        return res.json({ 'error': 'Cannot Update sale', 'code': 0 })\r\n                    })\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify sale', err, 'code': 0 })\r\n            })\r\n\r\n    })\r\n\r\n     // Delete sale\r\n     app.delete('/api/sales/:id', verifyToken, (req, res) => {\r\n\r\n        // Params\r\n        var sale = { id:req.params.id}\r\n\r\n        // Verify if exist into models.sales\r\n\r\n        models.Sale.findOne({\r\n            attributes: [\"id\"],\r\n            where: { id: sale.id }\r\n        })\r\n            .then((saleFound2) => {\r\n                saleFound2.destroy(sale)\r\n                    .then(() => {\r\n                        return res.json({ 'status':'success', 'code': 1 })\r\n                    })\r\n                    .catch((err) => {\r\n                        return res.json({ 'error': 'Cannot Delete sale', 'code': 0 })\r\n                    })\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify sale', err, 'code': 0 })\r\n            })\r\n\r\n    })\r\n   }\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1580983118808
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"filename\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\\\\routes\\\\transfer.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes\\transfer.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes\\transfer.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes\\transfer.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes",
        "sourceFileName": "transfer.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _verifyToken = _interopRequireDefault(require(\"../utils/verifyToken\"));\n\nvar _models = _interopRequireDefault(require(\"../models\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.exports = function (app) {\n  // List Transfer/service\n  app.get('/api/transfers', _verifyToken[\"default\"], function (req, res) {\n    _models[\"default\"].Transfer.findAll({\n      include: [{\n        model: _models[\"default\"].Order\n      }, {\n        model: _models[\"default\"].Client\n      }]\n    }).then(function (transfers) {\n      res.json({\n        transfers: transfers\n      });\n    });\n  }), // REGISTER USER V\n  app.post('/api/transfers', _verifyToken[\"default\"], function (req, res) {\n    // Params\n    var Transfer = req.body; // Verify if exist into models.Transfers\n\n    _models[\"default\"].Transfer.create(Transfer).then(function (transfers) {\n      return res.json({\n        transfers: transfers,\n        'code': 1\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Cannot add Transfer',\n        'code': 0\n      });\n    });\n  }); // UPDATE Transfer\n\n  app.put('/api/transfers/:id', _verifyToken[\"default\"], function (req, res) {\n    // Params\n    var Transfer = req.body; // Verify if exist into models.Transfers\n\n    _models[\"default\"].Transfer.findOne({\n      attributes: [\"id\"],\n      where: {\n        id: req.params.id\n      }\n    }).then(function (TransferFound2) {\n      TransferFound2.update(Transfer).then(function (transfers) {\n        return res.json({\n          transfers: transfers,\n          'code': 1\n        });\n      })[\"catch\"](function (err) {\n        return res.json({\n          'error': 'Cannot Update Transfer',\n          'code': 0\n        });\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify Transfer',\n        err: err,\n        'code': 0\n      });\n    });\n  }); // Delete Transfer\n\n  app[\"delete\"]('/api/transfers/:id', _verifyToken[\"default\"], function (req, res) {\n    // Params\n    var Transfer = {\n      id: req.params.id\n    }; // Verify if exist into models.Transfers\n\n    _models[\"default\"].Transfer.findOne({\n      attributes: [\"id\"],\n      where: {\n        id: Transfer.id\n      }\n    }).then(function (TransferFound2) {\n      TransferFound2.destroy(Transfer).then(function () {\n        return res.json({\n          'status': 'success',\n          'code': 1\n        });\n      })[\"catch\"](function (err) {\n        return res.json({\n          'error': 'Cannot Delete Transfer',\n          'code': 0\n        });\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify Transfer',\n        err: err,\n        'code': 0\n      });\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRyYW5zZmVyLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJhcHAiLCJnZXQiLCJ2ZXJpZnlUb2tlbiIsInJlcSIsInJlcyIsIm1vZGVscyIsIlRyYW5zZmVyIiwiZmluZEFsbCIsImluY2x1ZGUiLCJtb2RlbCIsIk9yZGVyIiwiQ2xpZW50IiwidGhlbiIsInRyYW5zZmVycyIsImpzb24iLCJwb3N0IiwiYm9keSIsImNyZWF0ZSIsImVyciIsInB1dCIsImZpbmRPbmUiLCJhdHRyaWJ1dGVzIiwid2hlcmUiLCJpZCIsInBhcmFtcyIsIlRyYW5zZmVyRm91bmQyIiwidXBkYXRlIiwiZGVzdHJveSJdLCJtYXBwaW5ncyI6Ijs7QUFDQTs7QUFDQTs7OztBQUdBQSxNQUFNLENBQUNDLE9BQVAsR0FBaUIsVUFBQUMsR0FBRyxFQUFJO0FBRXBCO0FBQ0FBLEVBQUFBLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLGdCQUFSLEVBQTBCQyx1QkFBMUIsRUFBdUMsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFDakRDLHVCQUFPQyxRQUFQLENBQWdCQyxPQUFoQixDQUF3QjtBQUFDQyxNQUFBQSxPQUFPLEVBQUMsQ0FBQztBQUFDQyxRQUFBQSxLQUFLLEVBQUNKLG1CQUFPSztBQUFkLE9BQUQsRUFBc0I7QUFBQ0QsUUFBQUEsS0FBSyxFQUFFSixtQkFBT007QUFBZixPQUF0QjtBQUFULEtBQXhCLEVBQWlGQyxJQUFqRixDQUFzRixVQUFDQyxTQUFELEVBQWU7QUFDakdULE1BQUFBLEdBQUcsQ0FBQ1UsSUFBSixDQUFTO0FBQ0xELFFBQUFBLFNBQVMsRUFBVEE7QUFESyxPQUFUO0FBR0gsS0FKRDtBQUtILEdBTkQsR0FPQTtBQUNBYixFQUFBQSxHQUFHLENBQUNlLElBQUosQ0FBUyxnQkFBVCxFQUEyQmIsdUJBQTNCLEVBQXdDLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQ2xEO0FBQ0EsUUFBSUUsUUFBUSxHQUFHSCxHQUFHLENBQUNhLElBQW5CLENBRmtELENBSWxEOztBQUVBWCx1QkFBT0MsUUFBUCxDQUFnQlcsTUFBaEIsQ0FBdUJYLFFBQXZCLEVBQ0tNLElBREwsQ0FDVSxVQUFDQyxTQUFELEVBQWU7QUFDakIsYUFBT1QsR0FBRyxDQUFDVSxJQUFKLENBQVM7QUFBRUQsUUFBQUEsU0FBUyxFQUFUQSxTQUFGO0FBQWEsZ0JBQVE7QUFBckIsT0FBVCxDQUFQO0FBQ0gsS0FITCxXQUlXLFVBQUNLLEdBQUQsRUFBUztBQUNaLGFBQU9kLEdBQUcsQ0FBQ1UsSUFBSixDQUFTO0FBQUUsaUJBQVMscUJBQVg7QUFBa0MsZ0JBQVE7QUFBMUMsT0FBVCxDQUFQO0FBQ0gsS0FOTDtBQVVILEdBaEJELENBUkEsQ0FIb0IsQ0E2QnBCOztBQUNBZCxFQUFBQSxHQUFHLENBQUNtQixHQUFKLENBQVEsb0JBQVIsRUFBOEJqQix1QkFBOUIsRUFBMkMsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFFckQ7QUFDQSxRQUFJRSxRQUFRLEdBQUdILEdBQUcsQ0FBQ2EsSUFBbkIsQ0FIcUQsQ0FLckQ7O0FBRUFYLHVCQUFPQyxRQUFQLENBQWdCYyxPQUFoQixDQUF3QjtBQUNwQkMsTUFBQUEsVUFBVSxFQUFFLENBQUMsSUFBRCxDQURRO0FBRXBCQyxNQUFBQSxLQUFLLEVBQUU7QUFBRUMsUUFBQUEsRUFBRSxFQUFFcEIsR0FBRyxDQUFDcUIsTUFBSixDQUFXRDtBQUFqQjtBQUZhLEtBQXhCLEVBSUtYLElBSkwsQ0FJVSxVQUFDYSxjQUFELEVBQW9CO0FBQ3RCQSxNQUFBQSxjQUFjLENBQUNDLE1BQWYsQ0FBc0JwQixRQUF0QixFQUNLTSxJQURMLENBQ1UsVUFBQ0MsU0FBRCxFQUFlO0FBQ2pCLGVBQU9ULEdBQUcsQ0FBQ1UsSUFBSixDQUFTO0FBQUVELFVBQUFBLFNBQVMsRUFBVEEsU0FBRjtBQUFhLGtCQUFRO0FBQXJCLFNBQVQsQ0FBUDtBQUNILE9BSEwsV0FJVyxVQUFDSyxHQUFELEVBQVM7QUFDWixlQUFPZCxHQUFHLENBQUNVLElBQUosQ0FBUztBQUFFLG1CQUFTLHdCQUFYO0FBQXFDLGtCQUFRO0FBQTdDLFNBQVQsQ0FBUDtBQUNILE9BTkw7QUFRSCxLQWJMLFdBY1csVUFBQ0ksR0FBRCxFQUFTO0FBQ1osYUFBT2QsR0FBRyxDQUFDVSxJQUFKLENBQVM7QUFBRSxpQkFBUywyQkFBWDtBQUF3Q0ksUUFBQUEsR0FBRyxFQUFIQSxHQUF4QztBQUE2QyxnQkFBUTtBQUFyRCxPQUFULENBQVA7QUFDSCxLQWhCTDtBQWtCSCxHQXpCRCxFQTlCb0IsQ0F5RG5COztBQUNBbEIsRUFBQUEsR0FBRyxVQUFILENBQVcsb0JBQVgsRUFBaUNFLHVCQUFqQyxFQUE4QyxVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUV6RDtBQUNBLFFBQUlFLFFBQVEsR0FBRztBQUFFaUIsTUFBQUEsRUFBRSxFQUFDcEIsR0FBRyxDQUFDcUIsTUFBSixDQUFXRDtBQUFoQixLQUFmLENBSHlELENBS3pEOztBQUVBbEIsdUJBQU9DLFFBQVAsQ0FBZ0JjLE9BQWhCLENBQXdCO0FBQ3BCQyxNQUFBQSxVQUFVLEVBQUUsQ0FBQyxJQUFELENBRFE7QUFFcEJDLE1BQUFBLEtBQUssRUFBRTtBQUFFQyxRQUFBQSxFQUFFLEVBQUVqQixRQUFRLENBQUNpQjtBQUFmO0FBRmEsS0FBeEIsRUFJS1gsSUFKTCxDQUlVLFVBQUNhLGNBQUQsRUFBb0I7QUFDdEJBLE1BQUFBLGNBQWMsQ0FBQ0UsT0FBZixDQUF1QnJCLFFBQXZCLEVBQ0tNLElBREwsQ0FDVSxZQUFNO0FBQ1IsZUFBT1IsR0FBRyxDQUFDVSxJQUFKLENBQVM7QUFBRSxvQkFBUyxTQUFYO0FBQXNCLGtCQUFRO0FBQTlCLFNBQVQsQ0FBUDtBQUNILE9BSEwsV0FJVyxVQUFDSSxHQUFELEVBQVM7QUFDWixlQUFPZCxHQUFHLENBQUNVLElBQUosQ0FBUztBQUFFLG1CQUFTLHdCQUFYO0FBQXFDLGtCQUFRO0FBQTdDLFNBQVQsQ0FBUDtBQUNILE9BTkw7QUFRSCxLQWJMLFdBY1csVUFBQ0ksR0FBRCxFQUFTO0FBQ1osYUFBT2QsR0FBRyxDQUFDVSxJQUFKLENBQVM7QUFBRSxpQkFBUywyQkFBWDtBQUF3Q0ksUUFBQUEsR0FBRyxFQUFIQSxHQUF4QztBQUE2QyxnQkFBUTtBQUFyRCxPQUFULENBQVA7QUFDSCxLQWhCTDtBQWtCSCxHQXpCQTtBQTBCRCxDQXBGSiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGFzdXNcXERvY3VtZW50c1xcS3Jvd1xcQXp1bHVsYSAtIEJveWthXFxVc3RvY2sgYXBpXFxzcmNcXHJvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5pbXBvcnQgdmVyaWZ5VG9rZW4gZnJvbSAnLi4vdXRpbHMvdmVyaWZ5VG9rZW4nXHJcbmltcG9ydCBtb2RlbHMgZnJvbSAnLi4vbW9kZWxzJ1xyXG5cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gYXBwID0+IHtcclxuXHJcbiAgICAvLyBMaXN0IFRyYW5zZmVyL3NlcnZpY2VcclxuICAgIGFwcC5nZXQoJy9hcGkvdHJhbnNmZXJzJywgdmVyaWZ5VG9rZW4sIChyZXEsIHJlcykgPT4ge1xyXG4gICAgICAgIG1vZGVscy5UcmFuc2Zlci5maW5kQWxsKHtpbmNsdWRlOlt7bW9kZWw6bW9kZWxzLk9yZGVyfSx7bW9kZWw6IG1vZGVscy5DbGllbnR9XX0pLnRoZW4oKHRyYW5zZmVycykgPT4ge1xyXG4gICAgICAgICAgICByZXMuanNvbih7XHJcbiAgICAgICAgICAgICAgICB0cmFuc2ZlcnNcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9KVxyXG4gICAgfSksXHJcbiAgICAvLyBSRUdJU1RFUiBVU0VSIFZcclxuICAgIGFwcC5wb3N0KCcvYXBpL3RyYW5zZmVycycsIHZlcmlmeVRva2VuLCAocmVxLCByZXMpID0+IHtcclxuICAgICAgICAvLyBQYXJhbXNcclxuICAgICAgICB2YXIgVHJhbnNmZXIgPSByZXEuYm9keVxyXG5cclxuICAgICAgICAvLyBWZXJpZnkgaWYgZXhpc3QgaW50byBtb2RlbHMuVHJhbnNmZXJzXHJcbiAgICAgICAgXHJcbiAgICAgICAgbW9kZWxzLlRyYW5zZmVyLmNyZWF0ZShUcmFuc2ZlcilcclxuICAgICAgICAgICAgLnRoZW4oKHRyYW5zZmVycykgPT4ge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5qc29uKHsgdHJhbnNmZXJzLCAnY29kZSc6IDEgfSlcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgICAgICAgICAgIHJldHVybiByZXMuanNvbih7ICdlcnJvcic6ICdDYW5ub3QgYWRkIFRyYW5zZmVyJywgJ2NvZGUnOiAwIH0pXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgIFxyXG5cclxuICAgICAgIFxyXG4gICAgfSlcclxuXHJcbiAgICAvLyBVUERBVEUgVHJhbnNmZXJcclxuICAgIGFwcC5wdXQoJy9hcGkvdHJhbnNmZXJzLzppZCcsIHZlcmlmeVRva2VuLCAocmVxLCByZXMpID0+IHtcclxuXHJcbiAgICAgICAgLy8gUGFyYW1zXHJcbiAgICAgICAgdmFyIFRyYW5zZmVyID0gcmVxLmJvZHlcclxuXHJcbiAgICAgICAgLy8gVmVyaWZ5IGlmIGV4aXN0IGludG8gbW9kZWxzLlRyYW5zZmVyc1xyXG5cclxuICAgICAgICBtb2RlbHMuVHJhbnNmZXIuZmluZE9uZSh7XHJcbiAgICAgICAgICAgIGF0dHJpYnV0ZXM6IFtcImlkXCJdLFxyXG4gICAgICAgICAgICB3aGVyZTogeyBpZDogcmVxLnBhcmFtcy5pZCB9XHJcbiAgICAgICAgfSlcclxuICAgICAgICAgICAgLnRoZW4oKFRyYW5zZmVyRm91bmQyKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBUcmFuc2ZlckZvdW5kMi51cGRhdGUoVHJhbnNmZXIpXHJcbiAgICAgICAgICAgICAgICAgICAgLnRoZW4oKHRyYW5zZmVycykgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzLmpzb24oeyB0cmFuc2ZlcnMsICdjb2RlJzogMSB9KVxyXG4gICAgICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgICAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5qc29uKHsgJ2Vycm9yJzogJ0Nhbm5vdCBVcGRhdGUgVHJhbnNmZXInLCAnY29kZSc6IDAgfSlcclxuICAgICAgICAgICAgICAgICAgICB9KVxyXG5cclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgICAgICAgICAgIHJldHVybiByZXMuanNvbih7ICdlcnJvcic6ICdVbmFibGUgdG8gdmVyaWZ5IFRyYW5zZmVyJywgZXJyLCAnY29kZSc6IDAgfSlcclxuICAgICAgICAgICAgfSlcclxuXHJcbiAgICB9KVxyXG5cclxuICAgICAvLyBEZWxldGUgVHJhbnNmZXJcclxuICAgICBhcHAuZGVsZXRlKCcvYXBpL3RyYW5zZmVycy86aWQnLCB2ZXJpZnlUb2tlbiwgKHJlcSwgcmVzKSA9PiB7XHJcblxyXG4gICAgICAgIC8vIFBhcmFtc1xyXG4gICAgICAgIHZhciBUcmFuc2ZlciA9IHsgaWQ6cmVxLnBhcmFtcy5pZH1cclxuXHJcbiAgICAgICAgLy8gVmVyaWZ5IGlmIGV4aXN0IGludG8gbW9kZWxzLlRyYW5zZmVyc1xyXG5cclxuICAgICAgICBtb2RlbHMuVHJhbnNmZXIuZmluZE9uZSh7XHJcbiAgICAgICAgICAgIGF0dHJpYnV0ZXM6IFtcImlkXCJdLFxyXG4gICAgICAgICAgICB3aGVyZTogeyBpZDogVHJhbnNmZXIuaWQgfVxyXG4gICAgICAgIH0pXHJcbiAgICAgICAgICAgIC50aGVuKChUcmFuc2ZlckZvdW5kMikgPT4ge1xyXG4gICAgICAgICAgICAgICAgVHJhbnNmZXJGb3VuZDIuZGVzdHJveShUcmFuc2ZlcilcclxuICAgICAgICAgICAgICAgICAgICAudGhlbigoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByZXMuanNvbih7ICdzdGF0dXMnOidzdWNjZXNzJywgJ2NvZGUnOiAxIH0pXHJcbiAgICAgICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgICAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzLmpzb24oeyAnZXJyb3InOiAnQ2Fubm90IERlbGV0ZSBUcmFuc2ZlcicsICdjb2RlJzogMCB9KVxyXG4gICAgICAgICAgICAgICAgICAgIH0pXHJcblxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5qc29uKHsgJ2Vycm9yJzogJ1VuYWJsZSB0byB2ZXJpZnkgVHJhbnNmZXInLCBlcnIsICdjb2RlJzogMCB9KVxyXG4gICAgICAgICAgICB9KVxyXG5cclxuICAgIH0pXHJcbiAgIH1cclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "transfer.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "get",
        "verifyToken",
        "req",
        "res",
        "models",
        "Transfer",
        "findAll",
        "include",
        "model",
        "Order",
        "Client",
        "then",
        "transfers",
        "json",
        "post",
        "body",
        "create",
        "err",
        "put",
        "findOne",
        "attributes",
        "where",
        "id",
        "params",
        "TransferFound2",
        "update",
        "destroy"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes",
      "sourcesContent": [
        "\r\nimport verifyToken from '../utils/verifyToken'\r\nimport models from '../models'\r\n\r\n\r\nmodule.exports = app => {\r\n\r\n    // List Transfer/service\r\n    app.get('/api/transfers', verifyToken, (req, res) => {\r\n        models.Transfer.findAll({include:[{model:models.Order},{model: models.Client}]}).then((transfers) => {\r\n            res.json({\r\n                transfers\r\n            })\r\n        })\r\n    }),\r\n    // REGISTER USER V\r\n    app.post('/api/transfers', verifyToken, (req, res) => {\r\n        // Params\r\n        var Transfer = req.body\r\n\r\n        // Verify if exist into models.Transfers\r\n        \r\n        models.Transfer.create(Transfer)\r\n            .then((transfers) => {\r\n                return res.json({ transfers, 'code': 1 })\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Cannot add Transfer', 'code': 0 })\r\n            })\r\n               \r\n\r\n       \r\n    })\r\n\r\n    // UPDATE Transfer\r\n    app.put('/api/transfers/:id', verifyToken, (req, res) => {\r\n\r\n        // Params\r\n        var Transfer = req.body\r\n\r\n        // Verify if exist into models.Transfers\r\n\r\n        models.Transfer.findOne({\r\n            attributes: [\"id\"],\r\n            where: { id: req.params.id }\r\n        })\r\n            .then((TransferFound2) => {\r\n                TransferFound2.update(Transfer)\r\n                    .then((transfers) => {\r\n                        return res.json({ transfers, 'code': 1 })\r\n                    })\r\n                    .catch((err) => {\r\n                        return res.json({ 'error': 'Cannot Update Transfer', 'code': 0 })\r\n                    })\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify Transfer', err, 'code': 0 })\r\n            })\r\n\r\n    })\r\n\r\n     // Delete Transfer\r\n     app.delete('/api/transfers/:id', verifyToken, (req, res) => {\r\n\r\n        // Params\r\n        var Transfer = { id:req.params.id}\r\n\r\n        // Verify if exist into models.Transfers\r\n\r\n        models.Transfer.findOne({\r\n            attributes: [\"id\"],\r\n            where: { id: Transfer.id }\r\n        })\r\n            .then((TransferFound2) => {\r\n                TransferFound2.destroy(Transfer)\r\n                    .then(() => {\r\n                        return res.json({ 'status':'success', 'code': 1 })\r\n                    })\r\n                    .catch((err) => {\r\n                        return res.json({ 'error': 'Cannot Delete Transfer', 'code': 0 })\r\n                    })\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify Transfer', err, 'code': 0 })\r\n            })\r\n\r\n    })\r\n   }\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1580986519544
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\\\\models\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"filename\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\\\\models\\\\material.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models\\material.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models\\material.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models\\material.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models",
        "sourceFileName": "material.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nmodule.exports = function (sequelize, DataTypes) {\n  var Material = sequelize.define('Material', {\n    internal_code: DataTypes.STRING,\n    userId: DataTypes.INTEGER,\n    inputId: DataTypes.INTEGER,\n    iva: DataTypes.DECIMAL,\n    purchase: DataTypes.DECIMAL,\n    discount: DataTypes.DECIMAL,\n    total: DataTypes.DECIMAL,\n    status: DataTypes.BOOLEAN,\n    description: DataTypes.STRING,\n    marca: DataTypes.STRING,\n    modelo: DataTypes.STRING,\n    color: DataTypes.STRING,\n    serial_number: DataTypes.STRING,\n    obs: DataTypes.STRING,\n    manufactured_by: DataTypes.STRING,\n    type_value: DataTypes.STRING,\n    info: DataTypes.STRING,\n    categoryId: DataTypes.INTEGER,\n    year_made: DataTypes.INTEGER,\n    photo: DataTypes.STRING\n  }, {});\n\n  Material.associate = function (models) {\n    Material.belongsTo(models.User);\n    Material.hasMany(models.Order);\n  };\n\n  return Material;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1hdGVyaWFsLmpzIl0sIm5hbWVzIjpbIm1vZHVsZSIsImV4cG9ydHMiLCJzZXF1ZWxpemUiLCJEYXRhVHlwZXMiLCJNYXRlcmlhbCIsImRlZmluZSIsImludGVybmFsX2NvZGUiLCJTVFJJTkciLCJ1c2VySWQiLCJJTlRFR0VSIiwiaW5wdXRJZCIsIml2YSIsIkRFQ0lNQUwiLCJwdXJjaGFzZSIsImRpc2NvdW50IiwidG90YWwiLCJzdGF0dXMiLCJCT09MRUFOIiwiZGVzY3JpcHRpb24iLCJtYXJjYSIsIm1vZGVsbyIsImNvbG9yIiwic2VyaWFsX251bWJlciIsIm9icyIsIm1hbnVmYWN0dXJlZF9ieSIsInR5cGVfdmFsdWUiLCJpbmZvIiwiY2F0ZWdvcnlJZCIsInllYXJfbWFkZSIsInBob3RvIiwiYXNzb2NpYXRlIiwibW9kZWxzIiwiYmVsb25nc1RvIiwiVXNlciIsImhhc01hbnkiLCJPcmRlciJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBQ0FBLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixVQUFDQyxTQUFELEVBQVlDLFNBQVosRUFBMEI7QUFDekMsTUFBTUMsUUFBUSxHQUFHRixTQUFTLENBQUNHLE1BQVYsQ0FBaUIsVUFBakIsRUFBNkI7QUFDNUNDLElBQUFBLGFBQWEsRUFBRUgsU0FBUyxDQUFDSSxNQURtQjtBQUU1Q0MsSUFBQUEsTUFBTSxFQUFFTCxTQUFTLENBQUNNLE9BRjBCO0FBRzVDQyxJQUFBQSxPQUFPLEVBQUVQLFNBQVMsQ0FBQ00sT0FIeUI7QUFJNUNFLElBQUFBLEdBQUcsRUFBRVIsU0FBUyxDQUFDUyxPQUo2QjtBQUs1Q0MsSUFBQUEsUUFBUSxFQUFFVixTQUFTLENBQUNTLE9BTHdCO0FBTTVDRSxJQUFBQSxRQUFRLEVBQUVYLFNBQVMsQ0FBQ1MsT0FOd0I7QUFPNUNHLElBQUFBLEtBQUssRUFBRVosU0FBUyxDQUFDUyxPQVAyQjtBQVE1Q0ksSUFBQUEsTUFBTSxFQUFFYixTQUFTLENBQUNjLE9BUjBCO0FBUzVDQyxJQUFBQSxXQUFXLEVBQUVmLFNBQVMsQ0FBQ0ksTUFUcUI7QUFVNUNZLElBQUFBLEtBQUssRUFBRWhCLFNBQVMsQ0FBQ0ksTUFWMkI7QUFXNUNhLElBQUFBLE1BQU0sRUFBRWpCLFNBQVMsQ0FBQ0ksTUFYMEI7QUFZNUNjLElBQUFBLEtBQUssRUFBRWxCLFNBQVMsQ0FBQ0ksTUFaMkI7QUFhNUNlLElBQUFBLGFBQWEsRUFBRW5CLFNBQVMsQ0FBQ0ksTUFibUI7QUFjNUNnQixJQUFBQSxHQUFHLEVBQUVwQixTQUFTLENBQUNJLE1BZDZCO0FBZTVDaUIsSUFBQUEsZUFBZSxFQUFFckIsU0FBUyxDQUFDSSxNQWZpQjtBQWdCNUNrQixJQUFBQSxVQUFVLEVBQUV0QixTQUFTLENBQUNJLE1BaEJzQjtBQWlCNUNtQixJQUFBQSxJQUFJLEVBQUV2QixTQUFTLENBQUNJLE1BakI0QjtBQWtCNUNvQixJQUFBQSxVQUFVLEVBQUV4QixTQUFTLENBQUNNLE9BbEJzQjtBQW1CNUNtQixJQUFBQSxTQUFTLEVBQUV6QixTQUFTLENBQUNNLE9BbkJ1QjtBQW9CNUNvQixJQUFBQSxLQUFLLEVBQUUxQixTQUFTLENBQUNJO0FBcEIyQixHQUE3QixFQXFCZCxFQXJCYyxDQUFqQjs7QUFzQkFILEVBQUFBLFFBQVEsQ0FBQzBCLFNBQVQsR0FBcUIsVUFBU0MsTUFBVCxFQUFpQjtBQUNwQzNCLElBQUFBLFFBQVEsQ0FBQzRCLFNBQVQsQ0FBbUJELE1BQU0sQ0FBQ0UsSUFBMUI7QUFDQTdCLElBQUFBLFFBQVEsQ0FBQzhCLE9BQVQsQ0FBaUJILE1BQU0sQ0FBQ0ksS0FBeEI7QUFDRCxHQUhEOztBQUlBLFNBQU8vQixRQUFQO0FBQ0QsQ0E1QkQiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxhc3VzXFxEb2N1bWVudHNcXEtyb3dcXEF6dWx1bGEgLSBCb3lrYVxcVXN0b2NrIGFwaVxcc3JjXFxtb2RlbHMiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5tb2R1bGUuZXhwb3J0cyA9IChzZXF1ZWxpemUsIERhdGFUeXBlcykgPT4ge1xuICBjb25zdCBNYXRlcmlhbCA9IHNlcXVlbGl6ZS5kZWZpbmUoJ01hdGVyaWFsJywge1xuICAgIGludGVybmFsX2NvZGU6IERhdGFUeXBlcy5TVFJJTkcsXG4gICAgdXNlcklkOiBEYXRhVHlwZXMuSU5URUdFUixcbiAgICBpbnB1dElkOiBEYXRhVHlwZXMuSU5URUdFUixcbiAgICBpdmE6IERhdGFUeXBlcy5ERUNJTUFMLFxuICAgIHB1cmNoYXNlOiBEYXRhVHlwZXMuREVDSU1BTCxcbiAgICBkaXNjb3VudDogRGF0YVR5cGVzLkRFQ0lNQUwsXG4gICAgdG90YWw6IERhdGFUeXBlcy5ERUNJTUFMLFxuICAgIHN0YXR1czogRGF0YVR5cGVzLkJPT0xFQU4sXG4gICAgZGVzY3JpcHRpb246IERhdGFUeXBlcy5TVFJJTkcsXG4gICAgbWFyY2E6IERhdGFUeXBlcy5TVFJJTkcsXG4gICAgbW9kZWxvOiBEYXRhVHlwZXMuU1RSSU5HLFxuICAgIGNvbG9yOiBEYXRhVHlwZXMuU1RSSU5HLFxuICAgIHNlcmlhbF9udW1iZXI6IERhdGFUeXBlcy5TVFJJTkcsXG4gICAgb2JzOiBEYXRhVHlwZXMuU1RSSU5HLFxuICAgIG1hbnVmYWN0dXJlZF9ieTogRGF0YVR5cGVzLlNUUklORyxcbiAgICB0eXBlX3ZhbHVlOiBEYXRhVHlwZXMuU1RSSU5HLFxuICAgIGluZm86IERhdGFUeXBlcy5TVFJJTkcsXG4gICAgY2F0ZWdvcnlJZDogRGF0YVR5cGVzLklOVEVHRVIsXG4gICAgeWVhcl9tYWRlOiBEYXRhVHlwZXMuSU5URUdFUixcbiAgICBwaG90bzogRGF0YVR5cGVzLlNUUklOR1xuICB9LCB7fSk7XG4gIE1hdGVyaWFsLmFzc29jaWF0ZSA9IGZ1bmN0aW9uKG1vZGVscykge1xuICAgIE1hdGVyaWFsLmJlbG9uZ3NUbyhtb2RlbHMuVXNlcilcbiAgICBNYXRlcmlhbC5oYXNNYW55KG1vZGVscy5PcmRlcilcbiAgfTtcbiAgcmV0dXJuIE1hdGVyaWFsO1xufTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "material.js"
      ],
      "names": [
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "Material",
        "define",
        "internal_code",
        "STRING",
        "userId",
        "INTEGER",
        "inputId",
        "iva",
        "DECIMAL",
        "purchase",
        "discount",
        "total",
        "status",
        "BOOLEAN",
        "description",
        "marca",
        "modelo",
        "color",
        "serial_number",
        "obs",
        "manufactured_by",
        "type_value",
        "info",
        "categoryId",
        "year_made",
        "photo",
        "associate",
        "models",
        "belongsTo",
        "User",
        "hasMany",
        "Order"
      ],
      "mappings": "AAAA;;AACAA,MAAM,CAACC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AACzC,MAAMC,QAAQ,GAAGF,SAAS,CAACG,MAAV,CAAiB,UAAjB,EAA6B;AAC5CC,IAAAA,aAAa,EAAEH,SAAS,CAACI,MADmB;AAE5CC,IAAAA,MAAM,EAAEL,SAAS,CAACM,OAF0B;AAG5CC,IAAAA,OAAO,EAAEP,SAAS,CAACM,OAHyB;AAI5CE,IAAAA,GAAG,EAAER,SAAS,CAACS,OAJ6B;AAK5CC,IAAAA,QAAQ,EAAEV,SAAS,CAACS,OALwB;AAM5CE,IAAAA,QAAQ,EAAEX,SAAS,CAACS,OANwB;AAO5CG,IAAAA,KAAK,EAAEZ,SAAS,CAACS,OAP2B;AAQ5CI,IAAAA,MAAM,EAAEb,SAAS,CAACc,OAR0B;AAS5CC,IAAAA,WAAW,EAAEf,SAAS,CAACI,MATqB;AAU5CY,IAAAA,KAAK,EAAEhB,SAAS,CAACI,MAV2B;AAW5Ca,IAAAA,MAAM,EAAEjB,SAAS,CAACI,MAX0B;AAY5Cc,IAAAA,KAAK,EAAElB,SAAS,CAACI,MAZ2B;AAa5Ce,IAAAA,aAAa,EAAEnB,SAAS,CAACI,MAbmB;AAc5CgB,IAAAA,GAAG,EAAEpB,SAAS,CAACI,MAd6B;AAe5CiB,IAAAA,eAAe,EAAErB,SAAS,CAACI,MAfiB;AAgB5CkB,IAAAA,UAAU,EAAEtB,SAAS,CAACI,MAhBsB;AAiB5CmB,IAAAA,IAAI,EAAEvB,SAAS,CAACI,MAjB4B;AAkB5CoB,IAAAA,UAAU,EAAExB,SAAS,CAACM,OAlBsB;AAmB5CmB,IAAAA,SAAS,EAAEzB,SAAS,CAACM,OAnBuB;AAoB5CoB,IAAAA,KAAK,EAAE1B,SAAS,CAACI;AApB2B,GAA7B,EAqBd,EArBc,CAAjB;;AAsBAH,EAAAA,QAAQ,CAAC0B,SAAT,GAAqB,UAASC,MAAT,EAAiB;AACpC3B,IAAAA,QAAQ,CAAC4B,SAAT,CAAmBD,MAAM,CAACE,IAA1B;AACA7B,IAAAA,QAAQ,CAAC8B,OAAT,CAAiBH,MAAM,CAACI,KAAxB;AACD,GAHD;;AAIA,SAAO/B,QAAP;AACD,CA5BD",
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\models",
      "sourcesContent": [
        "'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const Material = sequelize.define('Material', {\n    internal_code: DataTypes.STRING,\n    userId: DataTypes.INTEGER,\n    inputId: DataTypes.INTEGER,\n    iva: DataTypes.DECIMAL,\n    purchase: DataTypes.DECIMAL,\n    discount: DataTypes.DECIMAL,\n    total: DataTypes.DECIMAL,\n    status: DataTypes.BOOLEAN,\n    description: DataTypes.STRING,\n    marca: DataTypes.STRING,\n    modelo: DataTypes.STRING,\n    color: DataTypes.STRING,\n    serial_number: DataTypes.STRING,\n    obs: DataTypes.STRING,\n    manufactured_by: DataTypes.STRING,\n    type_value: DataTypes.STRING,\n    info: DataTypes.STRING,\n    categoryId: DataTypes.INTEGER,\n    year_made: DataTypes.INTEGER,\n    photo: DataTypes.STRING\n  }, {});\n  Material.associate = function(models) {\n    Material.belongsTo(models.User)\n    Material.hasMany(models.Order)\n  };\n  return Material;\n};"
      ]
    },
    "sourceType": "script",
    "mtime": 1581691259308
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"filename\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\\\\routes\\\\article copy.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes\\article copy.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes\\article copy.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes\\article copy.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes",
        "sourceFileName": "article copy.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _verifyToken = _interopRequireDefault(require(\"../utils/verifyToken\"));\n\nvar _models = _interopRequireDefault(require(\"../models\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.exports = function (app) {\n  // List Article/service\n  app.get('/api/articles', _verifyToken[\"default\"], function (req, res) {\n    _models[\"default\"].Article.findAll({\n      include: [{\n        model: _models[\"default\"].Category\n      }, {\n        model: _models[\"default\"].User\n      }]\n    }).then(function (articles) {\n      res.json({\n        articles: articles\n      });\n    });\n  }), // REGISTER Article V\n  app.post('/api/articles', function (req, res) {\n    // Params\n    var Article = req.body; // Verify if exist into models.articles\n\n    /*         models.Article.findOne({\r\n                attributes: [\"internal_code\"],\r\n                where: { key: Article.internal_code }\r\n            })\r\n                .then((ArticleFound) => {\r\n                    if (!ArticleFound) { */\n\n    /* (articles) => {\r\n            return res.json({ articles, 'code': 1 })\r\n        } */\n\n    _models[\"default\"].Article.create(Article).then(function (articles) {\n      return articles.update({\n        internal_code: 'UCL' + articles.id\n      }).then(function (d) {\n        return res.json({\n          articles: articles,\n          'code': 1\n        });\n      })[\"catch\"](function (err) {\n        return res.json({\n          'error': 'Cannot add Article, error internal code',\n          'code': 0\n        });\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Cannot add Article',\n        'code': 0\n      });\n    });\n    /*                 } else {\r\n                        return res.json({ 'error': 'Article already exist', 'code': 11 })\r\n                    }\r\n    \r\n                })\r\n                .catch((err) => {\r\n                    return res.json({ 'error': 'Unable to verify Article', err, 'code': -1 })\r\n                }) */\n\n  }); // UPDATE Article\n\n  app.put('/api/articles/:id', function (req, res) {\n    // Params\n    var Article = req.body; // Verify if exist into models.articles\n\n    _models[\"default\"].Article.findOne({\n      attributes: [\"id\"],\n      where: {\n        id: req.params.id\n      }\n    }).then(function (ArticleFound2) {\n      ArticleFound2.update(Article).then(function (articles) {\n        return res.json({\n          articles: articles,\n          'code': 1\n        });\n      })[\"catch\"](function (err) {\n        return res.json({\n          'error': 'Cannot Update Article',\n          'code': 0\n        });\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify Article',\n        err: err,\n        'code': 0\n      });\n    });\n  }); // Delete Article\n\n  app[\"delete\"]('/api/articles/:id', function (req, res) {\n    // Params\n    var Article = {\n      id: req.params.id\n    }; // Verify if exist into models.articles\n\n    _models[\"default\"].Article.findOne({\n      attributes: [\"id\"],\n      where: {\n        id: Article.id\n      }\n    }).then(function (ArticleFound2) {\n      ArticleFound2.destroy(Article).then(function () {\n        return res.json({\n          'status': 'success',\n          'code': 1\n        });\n      })[\"catch\"](function (err) {\n        return res.json({\n          'error': 'Cannot Delete Article',\n          'code': 0\n        });\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify Article',\n        err: err,\n        'code': 0\n      });\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFydGljbGUgY29weS5qcyJdLCJuYW1lcyI6WyJtb2R1bGUiLCJleHBvcnRzIiwiYXBwIiwiZ2V0IiwidmVyaWZ5VG9rZW4iLCJyZXEiLCJyZXMiLCJtb2RlbHMiLCJBcnRpY2xlIiwiZmluZEFsbCIsImluY2x1ZGUiLCJtb2RlbCIsIkNhdGVnb3J5IiwiVXNlciIsInRoZW4iLCJhcnRpY2xlcyIsImpzb24iLCJwb3N0IiwiYm9keSIsImNyZWF0ZSIsInVwZGF0ZSIsImludGVybmFsX2NvZGUiLCJpZCIsImQiLCJlcnIiLCJwdXQiLCJmaW5kT25lIiwiYXR0cmlidXRlcyIsIndoZXJlIiwicGFyYW1zIiwiQXJ0aWNsZUZvdW5kMiIsImRlc3Ryb3kiXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7Ozs7QUFHQUEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLFVBQUFDLEdBQUcsRUFBSTtBQUVwQjtBQUNBQSxFQUFBQSxHQUFHLENBQUNDLEdBQUosQ0FBUSxlQUFSLEVBQXdCQyx1QkFBeEIsRUFBb0MsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFFOUNDLHVCQUFPQyxPQUFQLENBQWVDLE9BQWYsQ0FBdUI7QUFBQ0MsTUFBQUEsT0FBTyxFQUFDLENBQUM7QUFBQ0MsUUFBQUEsS0FBSyxFQUFFSixtQkFBT0s7QUFBZixPQUFELEVBQTBCO0FBQUNELFFBQUFBLEtBQUssRUFBRUosbUJBQU9NO0FBQWYsT0FBMUI7QUFBVCxLQUF2QixFQUFrRkMsSUFBbEYsQ0FBdUYsVUFBQ0MsUUFBRCxFQUFjO0FBQ2pHVCxNQUFBQSxHQUFHLENBQUNVLElBQUosQ0FBUztBQUNMRCxRQUFBQSxRQUFRLEVBQVJBO0FBREssT0FBVDtBQUdILEtBSkQ7QUFLSCxHQVBELEdBUUE7QUFDQWIsRUFBQUEsR0FBRyxDQUFDZSxJQUFKLENBQVMsZUFBVCxFQUEwQixVQUFDWixHQUFELEVBQU1DLEdBQU4sRUFBYztBQUVwQztBQUNBLFFBQUlFLE9BQU8sR0FBR0gsR0FBRyxDQUFDYSxJQUFs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UixlQUFPUixHQUFHLENBQUNVLElBQUosQ0FBUztBQUFFLG9CQUFTLFNBQVg7QUFBc0Isa0JBQVE7QUFBOUIsU0FBVCxDQUFQO0FBQ0gsT0FITCxXQUlXLFVBQUNRLEdBQUQsRUFBUztBQUNaLGVBQU9sQixHQUFHLENBQUNVLElBQUosQ0FBUztBQUFFLG1CQUFTLHVCQUFYO0FBQW9DLGtCQUFRO0FBQTVDLFNBQVQsQ0FBUDtBQUNILE9BTkw7QUFRSCxLQWJMLFdBY1csVUFBQ1EsR0FBRCxFQUFTO0FBQ1osYUFBT2xCLEdBQUcsQ0FBQ1UsSUFBSixDQUFTO0FBQUUsaUJBQVMsMEJBQVg7QUFBdUNRLFFBQUFBLEdBQUcsRUFBSEEsR0FBdkM7QUFBNEMsZ0JBQVE7QUFBcEQsT0FBVCxDQUFQO0FBQ0gsS0FoQkw7QUFrQkgsR0F6QkE7QUEwQkQsQ0F0R0oiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxhc3VzXFxEb2N1bWVudHNcXEtyb3dcXEF6dWx1bGEgLSBCb3lrYVxcVXN0b2NrIGFwaVxcc3JjXFxyb3V0ZXMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdmVyaWZ5VG9rZW4gZnJvbSAnLi4vdXRpbHMvdmVyaWZ5VG9rZW4nXHJcbmltcG9ydCBtb2RlbHMgZnJvbSAnLi4vbW9kZWxzJ1xyXG5cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gYXBwID0+IHtcclxuICAgIFxyXG4gICAgLy8gTGlzdCBBcnRpY2xlL3NlcnZpY2VcclxuICAgIGFwcC5nZXQoJy9hcGkvYXJ0aWNsZXMnLHZlcmlmeVRva2VuLChyZXEsIHJlcykgPT4ge1xyXG5cclxuICAgICAgICBtb2RlbHMuQXJ0aWNsZS5maW5kQWxsKHtpbmNsdWRlOlt7bW9kZWw6IG1vZGVscy5DYXRlZ29yeX0se21vZGVsOiBtb2RlbHMuVXNlcn1dfSkudGhlbigoYXJ0aWNsZXMpID0+IHtcclxuICAgICAgICAgICAgcmVzLmpzb24oe1xyXG4gICAgICAgICAgICAgICAgYXJ0aWNsZXNcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9KVxyXG4gICAgfSksXHJcbiAgICAvLyBSRUdJU1RFUiBBcnRpY2xlIFZcclxuICAgIGFwcC5wb3N0KCcvYXBpL2FydGljbGVzJywgKHJlcSwgcmVzKSA9PiB7XHJcblxyXG4gICAgICAgIC8vIFBhcmFtc1xyXG4gICAgICAgIHZhciBBcnRpY2xlID0gcmVxLmJvZHlcclxuXHJcblxyXG4gICAgICAgIC8vIFZlcmlmeSBpZiBleGlzdCBpbnRvIG1vZGVscy5hcnRpY2xlc1xyXG4vKiAgICAgICAgIG1vZGVscy5BcnRpY2xlLmZpbmRPbmUoe1xyXG4gICAgICAgICAgICBhdHRyaWJ1dGVzOiBbXCJpbnRlcm5hbF9jb2RlXCJdLFxyXG4gICAgICAgICAgICB3aGVyZTogeyBrZXk6IEFydGljbGUuaW50ZXJuYWxfY29kZSB9XHJcbiAgICAgICAgfSlcclxuICAgICAgICAgICAgLnRoZW4oKEFydGljbGVGb3VuZCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgaWYgKCFBcnRpY2xlRm91bmQpIHsgKi9cclxuICAgICAgICAgICAgICAgICAgICAvKiAoYXJ0aWNsZXMpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByZXMuanNvbih7IGFydGljbGVzLCAnY29kZSc6IDEgfSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSAqL1xyXG4gICAgICAgICAgICAgICAgICAgIG1vZGVscy5BcnRpY2xlLmNyZWF0ZShBcnRpY2xlKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAudGhlbihhcnRpY2xlcyA9PiBhcnRpY2xlcy51cGRhdGUoe2ludGVybmFsX2NvZGU6J1VDTCcrYXJ0aWNsZXMuaWR9KS50aGVuKGQ9PntcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByZXMuanNvbih7IGFydGljbGVzLCAnY29kZSc6IDEgfSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSkuY2F0Y2goKGVycik9PntcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByZXMuanNvbih7ICdlcnJvcic6ICdDYW5ub3QgYWRkIEFydGljbGUsIGVycm9yIGludGVybmFsIGNvZGUnLCAnY29kZSc6IDAgfSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSkpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzLmpzb24oeyAnZXJyb3InOiAnQ2Fubm90IGFkZCBBcnRpY2xlJywgJ2NvZGUnOiAwIH0pXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pXHJcbi8qICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiByZXMuanNvbih7ICdlcnJvcic6ICdBcnRpY2xlIGFscmVhZHkgZXhpc3QnLCAnY29kZSc6IDExIH0pXHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5qc29uKHsgJ2Vycm9yJzogJ1VuYWJsZSB0byB2ZXJpZnkgQXJ0aWNsZScsIGVyciwgJ2NvZGUnOiAtMSB9KVxyXG4gICAgICAgICAgICB9KSAqL1xyXG4gICAgfSlcclxuXHJcbiAgICAvLyBVUERBVEUgQXJ0aWNsZVxyXG4gICAgYXBwLnB1dCgnL2FwaS9hcnRpY2xlcy86aWQnLCAocmVxLCByZXMpID0+IHtcclxuXHJcbiAgICAgICAgLy8gUGFyYW1zXHJcbiAgICAgICAgdmFyIEFydGljbGUgPSByZXEuYm9keVxyXG5cclxuICAgICAgICAvLyBWZXJpZnkgaWYgZXhpc3QgaW50byBtb2RlbHMuYXJ0aWNsZXNcclxuXHJcbiAgICAgICAgbW9kZWxzLkFydGljbGUuZmluZE9uZSh7XHJcbiAgICAgICAgICAgIGF0dHJpYnV0ZXM6IFtcImlkXCJdLFxyXG4gICAgICAgICAgICB3aGVyZTogeyBpZDogcmVxLnBhcmFtcy5pZCB9XHJcbiAgICAgICAgfSlcclxuICAgICAgICAgICAgLnRoZW4oKEFydGljbGVGb3VuZDIpID0+IHtcclxuICAgICAgICAgICAgICAgIEFydGljbGVGb3VuZDIudXBkYXRlKEFydGljbGUpXHJcbiAgICAgICAgICAgICAgICAgICAgLnRoZW4oKGFydGljbGVzKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByZXMuanNvbih7IGFydGljbGVzLCAnY29kZSc6IDEgfSlcclxuICAgICAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByZXMuanNvbih7ICdlcnJvcic6ICdDYW5ub3QgVXBkYXRlIEFydGljbGUnLCAnY29kZSc6IDAgfSlcclxuICAgICAgICAgICAgICAgICAgICB9KVxyXG5cclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgICAgICAgICAgIHJldHVybiByZXMuanNvbih7ICdlcnJvcic6ICdVbmFibGUgdG8gdmVyaWZ5IEFydGljbGUnLCBlcnIsICdjb2RlJzogMCB9KVxyXG4gICAgICAgICAgICB9KVxyXG5cclxuICAgIH0pXHJcblxyXG4gICAgIC8vIERlbGV0ZSBBcnRpY2xlXHJcbiAgICAgYXBwLmRlbGV0ZSgnL2FwaS9hcnRpY2xlcy86aWQnLChyZXEsIHJlcykgPT4ge1xyXG5cclxuICAgICAgICAvLyBQYXJhbXNcclxuICAgICAgICB2YXIgQXJ0aWNsZSA9IHsgaWQ6cmVxLnBhcmFtcy5pZH1cclxuXHJcbiAgICAgICAgLy8gVmVyaWZ5IGlmIGV4aXN0IGludG8gbW9kZWxzLmFydGljbGVzXHJcblxyXG4gICAgICAgIG1vZGVscy5BcnRpY2xlLmZpbmRPbmUoe1xyXG4gICAgICAgICAgICBhdHRyaWJ1dGVzOiBbXCJpZFwiXSxcclxuICAgICAgICAgICAgd2hlcmU6IHsgaWQ6IEFydGljbGUuaWQgfVxyXG4gICAgICAgIH0pXHJcbiAgICAgICAgICAgIC50aGVuKChBcnRpY2xlRm91bmQyKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBBcnRpY2xlRm91bmQyLmRlc3Ryb3koQXJ0aWNsZSlcclxuICAgICAgICAgICAgICAgICAgICAudGhlbigoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByZXMuanNvbih7ICdzdGF0dXMnOidzdWNjZXNzJywgJ2NvZGUnOiAxIH0pXHJcbiAgICAgICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgICAgICAuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmVzLmpzb24oeyAnZXJyb3InOiAnQ2Fubm90IERlbGV0ZSBBcnRpY2xlJywgJ2NvZGUnOiAwIH0pXHJcbiAgICAgICAgICAgICAgICAgICAgfSlcclxuXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIC5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzLmpzb24oeyAnZXJyb3InOiAnVW5hYmxlIHRvIHZlcmlmeSBBcnRpY2xlJywgZXJyLCAnY29kZSc6IDAgfSlcclxuICAgICAgICAgICAgfSlcclxuXHJcbiAgICB9KVxyXG4gICB9XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "article copy.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "get",
        "verifyToken",
        "req",
        "res",
        "models",
        "Article",
        "findAll",
        "include",
        "model",
        "Category",
        "User",
        "then",
        "articles",
        "json",
        "post",
        "body",
        "create",
        "update",
        "internal_code",
        "id",
        "d",
        "err",
        "put",
        "findOne",
        "attributes",
        "where",
        "params",
        "ArticleFound2",
        "destroy"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes",
      "sourcesContent": [
        "import verifyToken from '../utils/verifyToken'\r\nimport models from '../models'\r\n\r\n\r\nmodule.exports = app => {\r\n    \r\n    // List Article/service\r\n    app.get('/api/articles',verifyToken,(req, res) => {\r\n\r\n        models.Article.findAll({include:[{model: models.Category},{model: models.User}]}).then((articles) => {\r\n            res.json({\r\n                articles\r\n            })\r\n        })\r\n    }),\r\n    // REGISTER Article V\r\n    app.post('/api/articles', (req, res) => {\r\n\r\n        // Params\r\n        var Article = req.body\r\n\r\n\r\n        // Verify if exist into models.articles\r\n/*         models.Article.findOne({\r\n            attributes: [\"internal_code\"],\r\n            where: { key: Article.internal_code }\r\n        })\r\n            .then((ArticleFound) => {\r\n                if (!ArticleFound) { */\r\n                    /* (articles) => {\r\n                            return res.json({ articles, 'code': 1 })\r\n                        } */\r\n                    models.Article.create(Article)\r\n                        .then(articles => articles.update({internal_code:'UCL'+articles.id}).then(d=>{\r\n                            return res.json({ articles, 'code': 1 })\r\n                        }).catch((err)=>{\r\n                            return res.json({ 'error': 'Cannot add Article, error internal code', 'code': 0 })\r\n                        }))\r\n                        .catch((err) => {\r\n                            return res.json({ 'error': 'Cannot add Article', 'code': 0 })\r\n                        })\r\n/*                 } else {\r\n                    return res.json({ 'error': 'Article already exist', 'code': 11 })\r\n                }\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify Article', err, 'code': -1 })\r\n            }) */\r\n    })\r\n\r\n    // UPDATE Article\r\n    app.put('/api/articles/:id', (req, res) => {\r\n\r\n        // Params\r\n        var Article = req.body\r\n\r\n        // Verify if exist into models.articles\r\n\r\n        models.Article.findOne({\r\n            attributes: [\"id\"],\r\n            where: { id: req.params.id }\r\n        })\r\n            .then((ArticleFound2) => {\r\n                ArticleFound2.update(Article)\r\n                    .then((articles) => {\r\n                        return res.json({ articles, 'code': 1 })\r\n                    })\r\n                    .catch((err) => {\r\n                        return res.json({ 'error': 'Cannot Update Article', 'code': 0 })\r\n                    })\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify Article', err, 'code': 0 })\r\n            })\r\n\r\n    })\r\n\r\n     // Delete Article\r\n     app.delete('/api/articles/:id',(req, res) => {\r\n\r\n        // Params\r\n        var Article = { id:req.params.id}\r\n\r\n        // Verify if exist into models.articles\r\n\r\n        models.Article.findOne({\r\n            attributes: [\"id\"],\r\n            where: { id: Article.id }\r\n        })\r\n            .then((ArticleFound2) => {\r\n                ArticleFound2.destroy(Article)\r\n                    .then(() => {\r\n                        return res.json({ 'status':'success', 'code': 1 })\r\n                    })\r\n                    .catch((err) => {\r\n                        return res.json({ 'error': 'Cannot Delete Article', 'code': 0 })\r\n                    })\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify Article', err, 'code': 0 })\r\n            })\r\n\r\n    })\r\n   }\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581545114805
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"filename\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\\\\src\\\\routes\\\\material.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\asus\\\\Documents\\\\Krow\\\\Azulula - Boyka\\\\Ustock api\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.8.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes\\material.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes\\material.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "optionalChaining",
          "nullishCoalescingOperator",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes\\material.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes",
        "sourceFileName": "material.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _verifyToken = _interopRequireDefault(require(\"../utils/verifyToken\"));\n\nvar _models = _interopRequireDefault(require(\"../models\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nmodule.exports = function (app) {\n  // List Material/service\n  app.get('/api/materials', _verifyToken[\"default\"], function (req, res) {\n    /*         {include:[{model: models.Category},{model: models.User}]} */\n    _models[\"default\"].Material.findAll({\n      include: [{\n        model: _models[\"default\"].User\n      }]\n    }).then(function (materials) {\n      res.json({\n        materials: materials\n      });\n    });\n  }), // REGISTER Material V\n  app.post('/api/materials', function (req, res) {\n    // Params\n    var Material = req.body; // Verify if exist into models.materials\n\n    /*         models.Material.findOne({\r\n                attributes: [\"internal_code\"],\r\n                where: { key: Material.internal_code }\r\n            })\r\n                .then((MaterialFound) => {\r\n                    if (!MaterialFound) { */\n\n    /* (materials) => {\r\n            return res.json({ materials, 'code': 1 })\r\n        } */\n\n    _models[\"default\"].Material.create(Material).then(function (materials) {\n      return materials.update({\n        internal_code: 'EQP' + materials.id\n      }).then(function (d) {\n        return res.json({\n          materials: materials,\n          'code': 1\n        });\n      })[\"catch\"](function (err) {\n        return res.json({\n          'error': 'Cannot add Material, error internal code',\n          'code': 0\n        });\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Cannot add Material',\n        'code': 0\n      });\n    });\n    /*                 } else {\r\n                        return res.json({ 'error': 'Material already exist', 'code': 11 })\r\n                    }\r\n    \r\n                })\r\n                .catch((err) => {\r\n                    return res.json({ 'error': 'Unable to verify Material', err, 'code': -1 })\r\n                }) */\n\n  }); // UPDATE Material\n\n  app.put('/api/materials/:id', function (req, res) {\n    // Params\n    var Material = req.body; // Verify if exist into models.materials\n\n    _models[\"default\"].Material.findOne({\n      attributes: [\"id\"],\n      where: {\n        id: req.params.id\n      }\n    }).then(function (MaterialFound2) {\n      MaterialFound2.update(Material).then(function (materials) {\n        return res.json({\n          materials: materials,\n          'code': 1\n        });\n      })[\"catch\"](function (err) {\n        return res.json({\n          'error': 'Cannot Update Material',\n          'code': 0\n        });\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify Material',\n        err: err,\n        'code': 0\n      });\n    });\n  }); // Delete Material\n\n  app[\"delete\"]('/api/materials/:id', function (req, res) {\n    // Params\n    var Material = {\n      id: req.params.id\n    }; // Verify if exist into models.materials\n\n    _models[\"default\"].Material.findOne({\n      attributes: [\"id\"],\n      where: {\n        id: Material.id\n      }\n    }).then(function (MaterialFound2) {\n      MaterialFound2.destroy(Material).then(function () {\n        return res.json({\n          'status': 'success',\n          'code': 1\n        });\n      })[\"catch\"](function (err) {\n        return res.json({\n          'error': 'Cannot Delete Material',\n          'code': 0\n        });\n      });\n    })[\"catch\"](function (err) {\n      return res.json({\n        'error': 'Unable to verify Material',\n        err: err,\n        'code': 0\n      });\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "material.js"
      ],
      "names": [
        "module",
        "exports",
        "app",
        "get",
        "verifyToken",
        "req",
        "res",
        "models",
        "Material",
        "findAll",
        "include",
        "model",
        "User",
        "then",
        "materials",
        "json",
        "post",
        "body",
        "create",
        "update",
        "internal_code",
        "id",
        "d",
        "err",
        "put",
        "findOne",
        "attributes",
        "where",
        "params",
        "MaterialFound2",
        "destroy"
      ],
      "mappings": ";;AAAA;;AACA;;;;AAGAA,MAAM,CAACC,OAAP,GAAiB,UAAAC,GAAG,EAAI;AAEpB;AACAA,EAAAA,GAAG,CAACC,GAAJ,CAAQ,gBAAR,EAAyBC,uBAAzB,EAAqC,UAACC,GAAD,EAAMC,GAAN,EAAc;AACvD;AAEQC,uBAAOC,QAAP,CAAgBC,OAAhB,CAAwB;AAACC,MAAAA,OAAO,EAAC,CAAC;AAACC,QAAAA,KAAK,EAAEJ,mBAAOK;AAAf,OAAD;AAAT,KAAxB,EAA0DC,IAA1D,CAA+D,UAACC,SAAD,EAAe;AAC1ER,MAAAA,GAAG,CAACS,IAAJ,CAAS;AACLD,QAAAA,SAAS,EAATA;AADK,OAAT;AAGH,KAJD;AAKH,GARD,GASA;AACAZ,EAAAA,GAAG,CAACc,IAAJ,CAAS,gBAAT,EAA2B,UAACX,GAAD,EAAMC,GAAN,EAAc;AAErC;AACA,QAAIE,QAAQ,GAAGH,GAAG,CAACY,IAAnB,CAHqC,CAMrC;;AACR;;;;;;;AAMoB;;;;AAGAV,uBAAOC,QAAP,CAAgBU,MAAhB,CAAuBV,QAAvB,EACKK,IADL,CACU,UAAAC,SAAS;AAAA,aAAIA,SAAS,CAACK,MAAV,CAAiB;AAACC,QAAAA,aAAa,EAAC,QAAMN,SAAS,CAACO;AAA/B,OAAjB,EAAqDR,IAArD,CAA0D,UAAAS,CAAC,EAAE;AAC5E,eAAOhB,GAAG,CAACS,IAAJ,CAAS;AAAED,UAAAA,SAAS,EAATA,SAAF;AAAa,kBAAQ;AAArB,SAAT,CAAP;AACH,OAFkB,WAEV,UAACS,GAAD,EAAO;AACZ,eAAOjB,GAAG,CAACS,IAAJ,CAAS;AAAE,mBAAS,0CAAX;AAAuD,kBAAQ;AAA/D,SAAT,CAAP;AACH,OAJkB,CAAJ;AAAA,KADnB,WAMW,UAACQ,GAAD,EAAS;AACZ,aAAOjB,GAAG,CAACS,IAAJ,CAAS;AAAE,iBAAS,qBAAX;AAAkC,gBAAQ;AAA1C,OAAT,CAAP;AACH,KARL;AASpB;;;;;;;;;AAQK,GAjCD,CAVA,CAHoB,CAgDpB;;AACAb,EAAAA,GAAG,CAACsB,GAAJ,CAAQ,oBAAR,EAA8B,UAACnB,GAAD,EAAMC,GAAN,EAAc;AAExC;AACA,QAAIE,QAAQ,GAAGH,GAAG,CAACY,IAAnB,CAHwC,CAKxC;;AAEAV,uBAAOC,QAAP,CAAgBiB,OAAhB,CAAwB;AACpBC,MAAAA,UAAU,EAAE,CAAC,IAAD,CADQ;AAEpBC,MAAAA,KAAK,EAAE;AAAEN,QAAAA,EAAE,EAAEhB,GAAG,CAACuB,MAAJ,CAAWP;AAAjB;AAFa,KAAxB,EAIKR,IAJL,CAIU,UAACgB,cAAD,EAAoB;AACtBA,MAAAA,cAAc,CAACV,MAAf,CAAsBX,QAAtB,EACKK,IADL,CACU,UAACC,SAAD,EAAe;AACjB,eAAOR,GAAG,CAACS,IAAJ,CAAS;AAAED,UAAAA,SAAS,EAATA,SAAF;AAAa,kBAAQ;AAArB,SAAT,CAAP;AACH,OAHL,WAIW,UAACS,GAAD,EAAS;AACZ,eAAOjB,GAAG,CAACS,IAAJ,CAAS;AAAE,mBAAS,wBAAX;AAAqC,kBAAQ;AAA7C,SAAT,CAAP;AACH,OANL;AAQH,KAbL,WAcW,UAACQ,GAAD,EAAS;AACZ,aAAOjB,GAAG,CAACS,IAAJ,CAAS;AAAE,iBAAS,2BAAX;AAAwCQ,QAAAA,GAAG,EAAHA,GAAxC;AAA6C,gBAAQ;AAArD,OAAT,CAAP;AACH,KAhBL;AAkBH,GAzBD,EAjDoB,CA4EnB;;AACArB,EAAAA,GAAG,UAAH,CAAW,oBAAX,EAAgC,UAACG,GAAD,EAAMC,GAAN,EAAc;AAE3C;AACA,QAAIE,QAAQ,GAAG;AAAEa,MAAAA,EAAE,EAAChB,GAAG,CAACuB,MAAJ,CAAWP;AAAhB,KAAf,CAH2C,CAK3C;;AAEAd,uBAAOC,QAAP,CAAgBiB,OAAhB,CAAwB;AACpBC,MAAAA,UAAU,EAAE,CAAC,IAAD,CADQ;AAEpBC,MAAAA,KAAK,EAAE;AAAEN,QAAAA,EAAE,EAAEb,QAAQ,CAACa;AAAf;AAFa,KAAxB,EAIKR,IAJL,CAIU,UAACgB,cAAD,EAAoB;AACtBA,MAAAA,cAAc,CAACC,OAAf,CAAuBtB,QAAvB,EACKK,IADL,CACU,YAAM;AACR,eAAOP,GAAG,CAACS,IAAJ,CAAS;AAAE,oBAAS,SAAX;AAAsB,kBAAQ;AAA9B,SAAT,CAAP;AACH,OAHL,WAIW,UAACQ,GAAD,EAAS;AACZ,eAAOjB,GAAG,CAACS,IAAJ,CAAS;AAAE,mBAAS,wBAAX;AAAqC,kBAAQ;AAA7C,SAAT,CAAP;AACH,OANL;AAQH,KAbL,WAcW,UAACQ,GAAD,EAAS;AACZ,aAAOjB,GAAG,CAACS,IAAJ,CAAS;AAAE,iBAAS,2BAAX;AAAwCQ,QAAAA,GAAG,EAAHA,GAAxC;AAA6C,gBAAQ;AAArD,OAAT,CAAP;AACH,KAhBL;AAkBH,GAzBA;AA0BD,CAvGJ",
      "sourceRoot": "C:\\Users\\asus\\Documents\\Krow\\Azulula - Boyka\\Ustock api\\src\\routes",
      "sourcesContent": [
        "import verifyToken from '../utils/verifyToken'\r\nimport models from '../models'\r\n\r\n\r\nmodule.exports = app => {\r\n    \r\n    // List Material/service\r\n    app.get('/api/materials',verifyToken,(req, res) => {\r\n/*         {include:[{model: models.Category},{model: models.User}]} */\r\n\r\n        models.Material.findAll({include:[{model: models.User}]}).then((materials) => {\r\n            res.json({\r\n                materials\r\n            })\r\n        })\r\n    }),\r\n    // REGISTER Material V\r\n    app.post('/api/materials', (req, res) => {\r\n\r\n        // Params\r\n        var Material = req.body\r\n\r\n\r\n        // Verify if exist into models.materials\r\n/*         models.Material.findOne({\r\n            attributes: [\"internal_code\"],\r\n            where: { key: Material.internal_code }\r\n        })\r\n            .then((MaterialFound) => {\r\n                if (!MaterialFound) { */\r\n                    /* (materials) => {\r\n                            return res.json({ materials, 'code': 1 })\r\n                        } */\r\n                    models.Material.create(Material)\r\n                        .then(materials => materials.update({internal_code:'EQP'+materials.id}).then(d=>{\r\n                            return res.json({ materials, 'code': 1 })\r\n                        }).catch((err)=>{\r\n                            return res.json({ 'error': 'Cannot add Material, error internal code', 'code': 0 })\r\n                        }))\r\n                        .catch((err) => {\r\n                            return res.json({ 'error': 'Cannot add Material', 'code': 0 })\r\n                        })\r\n/*                 } else {\r\n                    return res.json({ 'error': 'Material already exist', 'code': 11 })\r\n                }\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify Material', err, 'code': -1 })\r\n            }) */\r\n    })\r\n\r\n    // UPDATE Material\r\n    app.put('/api/materials/:id', (req, res) => {\r\n\r\n        // Params\r\n        var Material = req.body\r\n\r\n        // Verify if exist into models.materials\r\n\r\n        models.Material.findOne({\r\n            attributes: [\"id\"],\r\n            where: { id: req.params.id }\r\n        })\r\n            .then((MaterialFound2) => {\r\n                MaterialFound2.update(Material)\r\n                    .then((materials) => {\r\n                        return res.json({ materials, 'code': 1 })\r\n                    })\r\n                    .catch((err) => {\r\n                        return res.json({ 'error': 'Cannot Update Material', 'code': 0 })\r\n                    })\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify Material', err, 'code': 0 })\r\n            })\r\n\r\n    })\r\n\r\n     // Delete Material\r\n     app.delete('/api/materials/:id',(req, res) => {\r\n\r\n        // Params\r\n        var Material = { id:req.params.id}\r\n\r\n        // Verify if exist into models.materials\r\n\r\n        models.Material.findOne({\r\n            attributes: [\"id\"],\r\n            where: { id: Material.id }\r\n        })\r\n            .then((MaterialFound2) => {\r\n                MaterialFound2.destroy(Material)\r\n                    .then(() => {\r\n                        return res.json({ 'status':'success', 'code': 1 })\r\n                    })\r\n                    .catch((err) => {\r\n                        return res.json({ 'error': 'Cannot Delete Material', 'code': 0 })\r\n                    })\r\n\r\n            })\r\n            .catch((err) => {\r\n                return res.json({ 'error': 'Unable to verify Material', err, 'code': 0 })\r\n            })\r\n\r\n    })\r\n   }\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1581578968805
  }
}